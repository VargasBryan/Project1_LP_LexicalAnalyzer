Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> semiExpression
Rule 2     expression -> semiExpression expression
Rule 3     semiExpression -> variable
Rule 4     semiExpression -> dataStruct
Rule 5     semiExpression -> controlStruct
Rule 6     semiExpression -> methodsSet
Rule 7     semiExpression -> mapFunctions
Rule 8     semiExpression -> arrayFn
Rule 9     semiExpression -> declaration
Rule 10    semiExpression -> print
Rule 11    semiExpression -> input
Rule 12    semiExpression -> return
Rule 13    semiExpression -> function
Rule 14    semiExpression -> COMMENTS
Rule 15    semiExpression -> LONGCOMMENT
Rule 16    semiExpression -> asigOp
Rule 17    number -> INTEGER
Rule 18    number -> FLOAT
Rule 19    number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
Rule 20    number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
Rule 21    variable -> type NAME IGUAL datatype SEMICOLON
Rule 22    variable -> NAME IGUAL datatype SEMICOLON
Rule 23    variable -> type NAME IGUAL input
Rule 24    variable -> NAME IGUAL input
Rule 25    controlStruct -> while
Rule 26    controlStruct -> for
Rule 27    controlStruct -> if
Rule 28    dataStruct -> array
Rule 29    dataStruct -> set
Rule 30    dataStruct -> map
Rule 31    while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
Rule 32    while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
Rule 33    if -> soloIf
Rule 34    if -> soloIf elseIf
Rule 35    if -> soloIf elseIf else
Rule 36    if -> soloIf else
Rule 37    soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
Rule 38    elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
Rule 39    elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf
Rule 40    else -> ELSE OPEN_BRACE expression CLOSE_BRACE
Rule 41    controlArg -> element clause element
Rule 42    for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
Rule 43    inicialization -> type NAME IGUAL number
Rule 44    inicialization -> NAME IGUAL number
Rule 45    operations -> number operand number
Rule 46    operations -> NAME
Rule 47    operations -> number
Rule 48    operations -> number operand NAME operations
Rule 49    operations -> NAME operand number operations
Rule 50    operations -> number operand NAME
Rule 51    operations -> NAME operand number
Rule 52    operations -> NAME operand NAME operations
Rule 53    operations -> number operand number operand operations
Rule 54    operations -> NAME SUMA SUMA
Rule 55    operations -> NAME operand NAME
Rule 56    operations -> NAME RESTA RESTA
Rule 57    datatype -> number
Rule 58    datatype -> NAME
Rule 59    datatype -> STRING
Rule 60    datatype -> CHAR
Rule 61    datatype -> operations
Rule 62    datatype -> dataStruct
Rule 63    operand -> SUMA
Rule 64    operand -> RESTA
Rule 65    operand -> MULTIPLICACION
Rule 66    operand -> DIVISION
Rule 67    operadorAsig -> MASIGUAL
Rule 68    operadorAsig -> MENOSIGUAL
Rule 69    operadorAsig -> PORIGUAL
Rule 70    operadorAsig -> DIVIGUAL
Rule 71    operadorAsig -> MODIGUAL
Rule 72    operadorAsig -> POTIGUAL
Rule 73    asigOp -> NAME operadorAsig number SEMICOLON
Rule 74    bool -> TRUE
Rule 75    bool -> FALSE
Rule 76    type -> CONST
Rule 77    type -> LET
Rule 78    type -> VAR
Rule 79    clause -> IGUALIGUAL
Rule 80    clause -> DIFERENTE
Rule 81    clause -> MAYORQUE
Rule 82    clause -> MAYORIGUALQUE
Rule 83    clause -> MENORQUE
Rule 84    clause -> MENORIGUALQUE
Rule 85    array -> OPEN_BRACKET items CLOSE_BRACKET
Rule 86    array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
Rule 87    map -> iniciarMap
Rule 88    map -> escribirMap
Rule 89    map -> generarMap
Rule 90    iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
Rule 91    escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE
Rule 92    claveValor -> clave COLON datatype
Rule 93    claveValor -> clave COLON datatype COMMA claveValor
Rule 94    clave -> datatype
Rule 95    generarMap -> OPEN_BRACE tuplas CLOSE_BRACE
Rule 96    tuplas -> tupla
Rule 97    tuplas -> tupla COMMA tuplas
Rule 98    tupla -> OPEN_BRACKET datatype CLOSE_BRACKET SEMICOLON
Rule 99    tupla -> OPEN_BRACKET datatype COMMA datatype CLOSE_BRACKET SEMICOLON
Rule 100   mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
Rule 101   mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
Rule 102   mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
Rule 103   arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
Rule 104   arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
Rule 105   arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
Rule 106   set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
Rule 107   set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
Rule 108   set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
Rule 109   methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
Rule 110   methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
Rule 111   methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
Rule 112   items -> item
Rule 113   items -> item COMMA items
Rule 114   item -> number
Rule 115   item -> STRING
Rule 116   item -> expBoolean
Rule 117   item -> NAME
Rule 118   item -> datatype
Rule 119   element -> STRING
Rule 120   element -> number
Rule 121   element -> NAME
Rule 122   declaration -> NAME IGUAL element SEMICOLON
Rule 123   logicalOperator -> AND
Rule 124   logicalOperator -> OR
Rule 125   expBoolean -> controlArg
Rule 126   expBoolean -> bool
Rule 127   expBoolean -> NOT expBoolean
Rule 128   expBoolean -> expBoolean logicalOperator expBoolean
Rule 129   function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
Rule 130   function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
Rule 131   parameter -> datatype
Rule 132   parameter -> datatype COMMA parameter
Rule 133   return -> RETURN datatype SEMICOLON
Rule 134   print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
Rule 135   print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
Rule 136   input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON
Rule 137   input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
Rule 138   input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON

Terminals, with rules where they appear

ADD                  : 109
AND                  : 123
ARRAY                : 86
CHAR                 : 60
CLEAR                : 100 111
CLOSE_BRACE          : 31 32 37 38 39 40 42 91 95 129 130
CLOSE_BRACKET        : 85 98 99 107
CLOSE_PARENTHESIS    : 19 20 31 32 37 38 39 42 86 90 100 101 102 103 104 105 106 107 108 109 110 111 129 130 134 135 136 137 138
COLON                : 92 93
COMMA                : 93 97 99 113 132 136
COMMENTS             : 14
CONST                : 76
DELETE               : 110
DIFERENTE            : 80
DIVIGUAL             : 70
DIVISION             : 66
ELSE                 : 40
ELSEIF               : 38 39
FALSE                : 75
FLOAT                : 18 20
FOR                  : 42
FUNCTION             : 129 130
GET                  : 101
HAS                  : 102
IF                   : 37
IGUAL                : 21 22 23 24 43 44 122
IGUALIGUAL           : 79
INPUT                : 136 137 138
INTEGER              : 17 19
LET                  : 77
LONGCOMMENT          : 15
MAP                  : 90
MASIGUAL             : 67
MAYORIGUALQUE        : 82
MAYORQUE             : 81
MENORIGUALQUE        : 84
MENORQUE             : 83
MENOSIGUAL           : 68
MODIGUAL             : 71
MULTIPLICACION       : 65
NAME                 : 21 22 23 24 43 44 46 48 49 50 51 52 52 54 55 55 56 58 73 100 101 102 103 104 105 109 110 111 117 121 122 129 130
NEW                  : 86 90 106 107 108
NOT                  : 127
OPEN_BRACE           : 31 32 37 38 39 40 42 91 95 129 130
OPEN_BRACKET         : 85 98 99 107
OPEN_PARENTHESIS     : 19 20 31 32 37 38 39 42 86 90 100 101 102 103 104 105 106 107 108 109 110 111 129 130 134 135 136 137 138
OR                   : 124
POINT                : 100 101 102 103 104 105 109 110 111
POP                  : 103
PORIGUAL             : 69
POTIGUAL             : 72
PRINT                : 134 135
PUSH                 : 104
RESTA                : 19 20 56 56 64
RETURN               : 133
SEMICOLON            : 21 22 42 42 73 98 99 100 101 102 103 104 105 109 110 111 122 133 134 135 136 137 138
SET                  : 106 107 108
STRING               : 59 115 119
SUMA                 : 54 54 63
TRUE                 : 74
UNSHIFT              : 105
VAR                  : 78
WHILE                : 31 32
error                : 

Nonterminals, with rules where they appear

array                : 28
arrayFn              : 8
asigOp               : 16
bool                 : 32 126
clause               : 41
clave                : 92 93 101 102
claveValor           : 91 93
controlArg           : 31 37 38 39 125
controlStruct        : 5
dataStruct           : 4 62
datatype             : 21 22 92 93 94 98 99 99 118 131 132 133 134
declaration          : 9
element              : 41 41 104 105 108 109 110 122 136 136 137
else                 : 35 36
elseIf               : 34 35
escribirMap          : 88
expBoolean           : 42 116 127 128 128
expression           : 2 31 32 37 38 39 40 42 129 130 0
for                  : 26
function             : 13
generarMap           : 89
if                   : 27
inicialization       : 42
iniciarMap           : 87
input                : 11 23 24
item                 : 112 113
items                : 85 86 107 113
logicalOperator      : 128
map                  : 30
mapFunctions         : 7
methodsSet           : 6
number               : 43 44 45 45 47 48 49 50 51 53 53 57 73 114 120
operadorAsig         : 73
operand              : 45 48 49 50 51 52 53 53 55
operations           : 42 48 49 52 53 61
parameter            : 130 132
print                : 10
return               : 12
semiExpression       : 1 2
set                  : 29
soloIf               : 33 34 35 36 39
tupla                : 96 97
tuplas               : 95 97
type                 : 21 23 43
variable             : 3
while                : 25

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . input
    (12) semiExpression -> . return
    (13) semiExpression -> . function
    (14) semiExpression -> . COMMENTS
    (15) semiExpression -> . LONGCOMMENT
    (16) semiExpression -> . asigOp
    (21) variable -> . type NAME IGUAL datatype SEMICOLON
    (22) variable -> . NAME IGUAL datatype SEMICOLON
    (23) variable -> . type NAME IGUAL input
    (24) variable -> . NAME IGUAL input
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (25) controlStruct -> . while
    (26) controlStruct -> . for
    (27) controlStruct -> . if
    (109) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (110) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (111) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (100) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (102) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (103) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (104) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (105) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (122) declaration -> . NAME IGUAL element SEMICOLON
    (134) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (135) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (136) input -> . INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON
    (137) input -> . INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (138) input -> . INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (133) return -> . RETURN datatype SEMICOLON
    (129) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (130) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (73) asigOp -> . NAME operadorAsig number SEMICOLON
    (76) type -> . CONST
    (77) type -> . LET
    (78) type -> . VAR
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (31) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (32) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (42) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (33) if -> . soloIf
    (34) if -> . soloIf elseIf
    (35) if -> . soloIf elseIf else
    (36) if -> . soloIf else
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (37) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 14
    LONGCOMMENT     shift and go to state 15
    NAME            shift and go to state 18
    PRINT           shift and go to state 25
    INPUT           shift and go to state 26
    RETURN          shift and go to state 27
    FUNCTION        shift and go to state 28
    CONST           shift and go to state 30
    LET             shift and go to state 31
    VAR             shift and go to state 32
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    WHILE           shift and go to state 38
    FOR             shift and go to state 39
    OPEN_BRACE      shift and go to state 29
    IF              shift and go to state 41

    expression                     shift and go to state 1
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    input                          shift and go to state 11
    return                         shift and go to state 12
    function                       shift and go to state 13
    asigOp                         shift and go to state 16
    type                           shift and go to state 17
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    while                          shift and go to state 22
    for                            shift and go to state 23
    if                             shift and go to state 24
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37
    soloIf                         shift and go to state 40

state 1

    (0) S' -> expression .



state 2

    (1) expression -> semiExpression .
    (2) expression -> semiExpression . expression
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . input
    (12) semiExpression -> . return
    (13) semiExpression -> . function
    (14) semiExpression -> . COMMENTS
    (15) semiExpression -> . LONGCOMMENT
    (16) semiExpression -> . asigOp
    (21) variable -> . type NAME IGUAL datatype SEMICOLON
    (22) variable -> . NAME IGUAL datatype SEMICOLON
    (23) variable -> . type NAME IGUAL input
    (24) variable -> . NAME IGUAL input
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (25) controlStruct -> . while
    (26) controlStruct -> . for
    (27) controlStruct -> . if
    (109) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (110) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (111) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (100) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (102) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (103) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (104) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (105) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (122) declaration -> . NAME IGUAL element SEMICOLON
    (134) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (135) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (136) input -> . INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON
    (137) input -> . INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (138) input -> . INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (133) return -> . RETURN datatype SEMICOLON
    (129) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (130) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (73) asigOp -> . NAME operadorAsig number SEMICOLON
    (76) type -> . CONST
    (77) type -> . LET
    (78) type -> . VAR
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (31) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (32) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (42) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (33) if -> . soloIf
    (34) if -> . soloIf elseIf
    (35) if -> . soloIf elseIf else
    (36) if -> . soloIf else
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (37) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    $end            reduce using rule 1 (expression -> semiExpression .)
    CLOSE_BRACE     reduce using rule 1 (expression -> semiExpression .)
    COMMENTS        shift and go to state 14
    LONGCOMMENT     shift and go to state 15
    NAME            shift and go to state 18
    PRINT           shift and go to state 25
    INPUT           shift and go to state 26
    RETURN          shift and go to state 27
    FUNCTION        shift and go to state 28
    CONST           shift and go to state 30
    LET             shift and go to state 31
    VAR             shift and go to state 32
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    WHILE           shift and go to state 38
    FOR             shift and go to state 39
    OPEN_BRACE      shift and go to state 29
    IF              shift and go to state 41

    semiExpression                 shift and go to state 2
    expression                     shift and go to state 42
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    input                          shift and go to state 11
    return                         shift and go to state 12
    function                       shift and go to state 13
    asigOp                         shift and go to state 16
    type                           shift and go to state 17
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    while                          shift and go to state 22
    for                            shift and go to state 23
    if                             shift and go to state 24
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37
    soloIf                         shift and go to state 40

state 3

    (3) semiExpression -> variable .

    COMMENTS        reduce using rule 3 (semiExpression -> variable .)
    LONGCOMMENT     reduce using rule 3 (semiExpression -> variable .)
    NAME            reduce using rule 3 (semiExpression -> variable .)
    PRINT           reduce using rule 3 (semiExpression -> variable .)
    INPUT           reduce using rule 3 (semiExpression -> variable .)
    RETURN          reduce using rule 3 (semiExpression -> variable .)
    FUNCTION        reduce using rule 3 (semiExpression -> variable .)
    CONST           reduce using rule 3 (semiExpression -> variable .)
    LET             reduce using rule 3 (semiExpression -> variable .)
    VAR             reduce using rule 3 (semiExpression -> variable .)
    OPEN_BRACKET    reduce using rule 3 (semiExpression -> variable .)
    NEW             reduce using rule 3 (semiExpression -> variable .)
    WHILE           reduce using rule 3 (semiExpression -> variable .)
    FOR             reduce using rule 3 (semiExpression -> variable .)
    OPEN_BRACE      reduce using rule 3 (semiExpression -> variable .)
    IF              reduce using rule 3 (semiExpression -> variable .)
    $end            reduce using rule 3 (semiExpression -> variable .)
    CLOSE_BRACE     reduce using rule 3 (semiExpression -> variable .)


state 4

    (4) semiExpression -> dataStruct .

    COMMENTS        reduce using rule 4 (semiExpression -> dataStruct .)
    LONGCOMMENT     reduce using rule 4 (semiExpression -> dataStruct .)
    NAME            reduce using rule 4 (semiExpression -> dataStruct .)
    PRINT           reduce using rule 4 (semiExpression -> dataStruct .)
    INPUT           reduce using rule 4 (semiExpression -> dataStruct .)
    RETURN          reduce using rule 4 (semiExpression -> dataStruct .)
    FUNCTION        reduce using rule 4 (semiExpression -> dataStruct .)
    CONST           reduce using rule 4 (semiExpression -> dataStruct .)
    LET             reduce using rule 4 (semiExpression -> dataStruct .)
    VAR             reduce using rule 4 (semiExpression -> dataStruct .)
    OPEN_BRACKET    reduce using rule 4 (semiExpression -> dataStruct .)
    NEW             reduce using rule 4 (semiExpression -> dataStruct .)
    WHILE           reduce using rule 4 (semiExpression -> dataStruct .)
    FOR             reduce using rule 4 (semiExpression -> dataStruct .)
    OPEN_BRACE      reduce using rule 4 (semiExpression -> dataStruct .)
    IF              reduce using rule 4 (semiExpression -> dataStruct .)
    $end            reduce using rule 4 (semiExpression -> dataStruct .)
    CLOSE_BRACE     reduce using rule 4 (semiExpression -> dataStruct .)


state 5

    (5) semiExpression -> controlStruct .

    COMMENTS        reduce using rule 5 (semiExpression -> controlStruct .)
    LONGCOMMENT     reduce using rule 5 (semiExpression -> controlStruct .)
    NAME            reduce using rule 5 (semiExpression -> controlStruct .)
    PRINT           reduce using rule 5 (semiExpression -> controlStruct .)
    INPUT           reduce using rule 5 (semiExpression -> controlStruct .)
    RETURN          reduce using rule 5 (semiExpression -> controlStruct .)
    FUNCTION        reduce using rule 5 (semiExpression -> controlStruct .)
    CONST           reduce using rule 5 (semiExpression -> controlStruct .)
    LET             reduce using rule 5 (semiExpression -> controlStruct .)
    VAR             reduce using rule 5 (semiExpression -> controlStruct .)
    OPEN_BRACKET    reduce using rule 5 (semiExpression -> controlStruct .)
    NEW             reduce using rule 5 (semiExpression -> controlStruct .)
    WHILE           reduce using rule 5 (semiExpression -> controlStruct .)
    FOR             reduce using rule 5 (semiExpression -> controlStruct .)
    OPEN_BRACE      reduce using rule 5 (semiExpression -> controlStruct .)
    IF              reduce using rule 5 (semiExpression -> controlStruct .)
    $end            reduce using rule 5 (semiExpression -> controlStruct .)
    CLOSE_BRACE     reduce using rule 5 (semiExpression -> controlStruct .)


state 6

    (6) semiExpression -> methodsSet .

    COMMENTS        reduce using rule 6 (semiExpression -> methodsSet .)
    LONGCOMMENT     reduce using rule 6 (semiExpression -> methodsSet .)
    NAME            reduce using rule 6 (semiExpression -> methodsSet .)
    PRINT           reduce using rule 6 (semiExpression -> methodsSet .)
    INPUT           reduce using rule 6 (semiExpression -> methodsSet .)
    RETURN          reduce using rule 6 (semiExpression -> methodsSet .)
    FUNCTION        reduce using rule 6 (semiExpression -> methodsSet .)
    CONST           reduce using rule 6 (semiExpression -> methodsSet .)
    LET             reduce using rule 6 (semiExpression -> methodsSet .)
    VAR             reduce using rule 6 (semiExpression -> methodsSet .)
    OPEN_BRACKET    reduce using rule 6 (semiExpression -> methodsSet .)
    NEW             reduce using rule 6 (semiExpression -> methodsSet .)
    WHILE           reduce using rule 6 (semiExpression -> methodsSet .)
    FOR             reduce using rule 6 (semiExpression -> methodsSet .)
    OPEN_BRACE      reduce using rule 6 (semiExpression -> methodsSet .)
    IF              reduce using rule 6 (semiExpression -> methodsSet .)
    $end            reduce using rule 6 (semiExpression -> methodsSet .)
    CLOSE_BRACE     reduce using rule 6 (semiExpression -> methodsSet .)


state 7

    (7) semiExpression -> mapFunctions .

    COMMENTS        reduce using rule 7 (semiExpression -> mapFunctions .)
    LONGCOMMENT     reduce using rule 7 (semiExpression -> mapFunctions .)
    NAME            reduce using rule 7 (semiExpression -> mapFunctions .)
    PRINT           reduce using rule 7 (semiExpression -> mapFunctions .)
    INPUT           reduce using rule 7 (semiExpression -> mapFunctions .)
    RETURN          reduce using rule 7 (semiExpression -> mapFunctions .)
    FUNCTION        reduce using rule 7 (semiExpression -> mapFunctions .)
    CONST           reduce using rule 7 (semiExpression -> mapFunctions .)
    LET             reduce using rule 7 (semiExpression -> mapFunctions .)
    VAR             reduce using rule 7 (semiExpression -> mapFunctions .)
    OPEN_BRACKET    reduce using rule 7 (semiExpression -> mapFunctions .)
    NEW             reduce using rule 7 (semiExpression -> mapFunctions .)
    WHILE           reduce using rule 7 (semiExpression -> mapFunctions .)
    FOR             reduce using rule 7 (semiExpression -> mapFunctions .)
    OPEN_BRACE      reduce using rule 7 (semiExpression -> mapFunctions .)
    IF              reduce using rule 7 (semiExpression -> mapFunctions .)
    $end            reduce using rule 7 (semiExpression -> mapFunctions .)
    CLOSE_BRACE     reduce using rule 7 (semiExpression -> mapFunctions .)


state 8

    (8) semiExpression -> arrayFn .

    COMMENTS        reduce using rule 8 (semiExpression -> arrayFn .)
    LONGCOMMENT     reduce using rule 8 (semiExpression -> arrayFn .)
    NAME            reduce using rule 8 (semiExpression -> arrayFn .)
    PRINT           reduce using rule 8 (semiExpression -> arrayFn .)
    INPUT           reduce using rule 8 (semiExpression -> arrayFn .)
    RETURN          reduce using rule 8 (semiExpression -> arrayFn .)
    FUNCTION        reduce using rule 8 (semiExpression -> arrayFn .)
    CONST           reduce using rule 8 (semiExpression -> arrayFn .)
    LET             reduce using rule 8 (semiExpression -> arrayFn .)
    VAR             reduce using rule 8 (semiExpression -> arrayFn .)
    OPEN_BRACKET    reduce using rule 8 (semiExpression -> arrayFn .)
    NEW             reduce using rule 8 (semiExpression -> arrayFn .)
    WHILE           reduce using rule 8 (semiExpression -> arrayFn .)
    FOR             reduce using rule 8 (semiExpression -> arrayFn .)
    OPEN_BRACE      reduce using rule 8 (semiExpression -> arrayFn .)
    IF              reduce using rule 8 (semiExpression -> arrayFn .)
    $end            reduce using rule 8 (semiExpression -> arrayFn .)
    CLOSE_BRACE     reduce using rule 8 (semiExpression -> arrayFn .)


state 9

    (9) semiExpression -> declaration .

    COMMENTS        reduce using rule 9 (semiExpression -> declaration .)
    LONGCOMMENT     reduce using rule 9 (semiExpression -> declaration .)
    NAME            reduce using rule 9 (semiExpression -> declaration .)
    PRINT           reduce using rule 9 (semiExpression -> declaration .)
    INPUT           reduce using rule 9 (semiExpression -> declaration .)
    RETURN          reduce using rule 9 (semiExpression -> declaration .)
    FUNCTION        reduce using rule 9 (semiExpression -> declaration .)
    CONST           reduce using rule 9 (semiExpression -> declaration .)
    LET             reduce using rule 9 (semiExpression -> declaration .)
    VAR             reduce using rule 9 (semiExpression -> declaration .)
    OPEN_BRACKET    reduce using rule 9 (semiExpression -> declaration .)
    NEW             reduce using rule 9 (semiExpression -> declaration .)
    WHILE           reduce using rule 9 (semiExpression -> declaration .)
    FOR             reduce using rule 9 (semiExpression -> declaration .)
    OPEN_BRACE      reduce using rule 9 (semiExpression -> declaration .)
    IF              reduce using rule 9 (semiExpression -> declaration .)
    $end            reduce using rule 9 (semiExpression -> declaration .)
    CLOSE_BRACE     reduce using rule 9 (semiExpression -> declaration .)


state 10

    (10) semiExpression -> print .

    COMMENTS        reduce using rule 10 (semiExpression -> print .)
    LONGCOMMENT     reduce using rule 10 (semiExpression -> print .)
    NAME            reduce using rule 10 (semiExpression -> print .)
    PRINT           reduce using rule 10 (semiExpression -> print .)
    INPUT           reduce using rule 10 (semiExpression -> print .)
    RETURN          reduce using rule 10 (semiExpression -> print .)
    FUNCTION        reduce using rule 10 (semiExpression -> print .)
    CONST           reduce using rule 10 (semiExpression -> print .)
    LET             reduce using rule 10 (semiExpression -> print .)
    VAR             reduce using rule 10 (semiExpression -> print .)
    OPEN_BRACKET    reduce using rule 10 (semiExpression -> print .)
    NEW             reduce using rule 10 (semiExpression -> print .)
    WHILE           reduce using rule 10 (semiExpression -> print .)
    FOR             reduce using rule 10 (semiExpression -> print .)
    OPEN_BRACE      reduce using rule 10 (semiExpression -> print .)
    IF              reduce using rule 10 (semiExpression -> print .)
    $end            reduce using rule 10 (semiExpression -> print .)
    CLOSE_BRACE     reduce using rule 10 (semiExpression -> print .)


state 11

    (11) semiExpression -> input .

    COMMENTS        reduce using rule 11 (semiExpression -> input .)
    LONGCOMMENT     reduce using rule 11 (semiExpression -> input .)
    NAME            reduce using rule 11 (semiExpression -> input .)
    PRINT           reduce using rule 11 (semiExpression -> input .)
    INPUT           reduce using rule 11 (semiExpression -> input .)
    RETURN          reduce using rule 11 (semiExpression -> input .)
    FUNCTION        reduce using rule 11 (semiExpression -> input .)
    CONST           reduce using rule 11 (semiExpression -> input .)
    LET             reduce using rule 11 (semiExpression -> input .)
    VAR             reduce using rule 11 (semiExpression -> input .)
    OPEN_BRACKET    reduce using rule 11 (semiExpression -> input .)
    NEW             reduce using rule 11 (semiExpression -> input .)
    WHILE           reduce using rule 11 (semiExpression -> input .)
    FOR             reduce using rule 11 (semiExpression -> input .)
    OPEN_BRACE      reduce using rule 11 (semiExpression -> input .)
    IF              reduce using rule 11 (semiExpression -> input .)
    $end            reduce using rule 11 (semiExpression -> input .)
    CLOSE_BRACE     reduce using rule 11 (semiExpression -> input .)


state 12

    (12) semiExpression -> return .

    COMMENTS        reduce using rule 12 (semiExpression -> return .)
    LONGCOMMENT     reduce using rule 12 (semiExpression -> return .)
    NAME            reduce using rule 12 (semiExpression -> return .)
    PRINT           reduce using rule 12 (semiExpression -> return .)
    INPUT           reduce using rule 12 (semiExpression -> return .)
    RETURN          reduce using rule 12 (semiExpression -> return .)
    FUNCTION        reduce using rule 12 (semiExpression -> return .)
    CONST           reduce using rule 12 (semiExpression -> return .)
    LET             reduce using rule 12 (semiExpression -> return .)
    VAR             reduce using rule 12 (semiExpression -> return .)
    OPEN_BRACKET    reduce using rule 12 (semiExpression -> return .)
    NEW             reduce using rule 12 (semiExpression -> return .)
    WHILE           reduce using rule 12 (semiExpression -> return .)
    FOR             reduce using rule 12 (semiExpression -> return .)
    OPEN_BRACE      reduce using rule 12 (semiExpression -> return .)
    IF              reduce using rule 12 (semiExpression -> return .)
    $end            reduce using rule 12 (semiExpression -> return .)
    CLOSE_BRACE     reduce using rule 12 (semiExpression -> return .)


state 13

    (13) semiExpression -> function .

    COMMENTS        reduce using rule 13 (semiExpression -> function .)
    LONGCOMMENT     reduce using rule 13 (semiExpression -> function .)
    NAME            reduce using rule 13 (semiExpression -> function .)
    PRINT           reduce using rule 13 (semiExpression -> function .)
    INPUT           reduce using rule 13 (semiExpression -> function .)
    RETURN          reduce using rule 13 (semiExpression -> function .)
    FUNCTION        reduce using rule 13 (semiExpression -> function .)
    CONST           reduce using rule 13 (semiExpression -> function .)
    LET             reduce using rule 13 (semiExpression -> function .)
    VAR             reduce using rule 13 (semiExpression -> function .)
    OPEN_BRACKET    reduce using rule 13 (semiExpression -> function .)
    NEW             reduce using rule 13 (semiExpression -> function .)
    WHILE           reduce using rule 13 (semiExpression -> function .)
    FOR             reduce using rule 13 (semiExpression -> function .)
    OPEN_BRACE      reduce using rule 13 (semiExpression -> function .)
    IF              reduce using rule 13 (semiExpression -> function .)
    $end            reduce using rule 13 (semiExpression -> function .)
    CLOSE_BRACE     reduce using rule 13 (semiExpression -> function .)


state 14

    (14) semiExpression -> COMMENTS .

    COMMENTS        reduce using rule 14 (semiExpression -> COMMENTS .)
    LONGCOMMENT     reduce using rule 14 (semiExpression -> COMMENTS .)
    NAME            reduce using rule 14 (semiExpression -> COMMENTS .)
    PRINT           reduce using rule 14 (semiExpression -> COMMENTS .)
    INPUT           reduce using rule 14 (semiExpression -> COMMENTS .)
    RETURN          reduce using rule 14 (semiExpression -> COMMENTS .)
    FUNCTION        reduce using rule 14 (semiExpression -> COMMENTS .)
    CONST           reduce using rule 14 (semiExpression -> COMMENTS .)
    LET             reduce using rule 14 (semiExpression -> COMMENTS .)
    VAR             reduce using rule 14 (semiExpression -> COMMENTS .)
    OPEN_BRACKET    reduce using rule 14 (semiExpression -> COMMENTS .)
    NEW             reduce using rule 14 (semiExpression -> COMMENTS .)
    WHILE           reduce using rule 14 (semiExpression -> COMMENTS .)
    FOR             reduce using rule 14 (semiExpression -> COMMENTS .)
    OPEN_BRACE      reduce using rule 14 (semiExpression -> COMMENTS .)
    IF              reduce using rule 14 (semiExpression -> COMMENTS .)
    $end            reduce using rule 14 (semiExpression -> COMMENTS .)
    CLOSE_BRACE     reduce using rule 14 (semiExpression -> COMMENTS .)


state 15

    (15) semiExpression -> LONGCOMMENT .

    COMMENTS        reduce using rule 15 (semiExpression -> LONGCOMMENT .)
    LONGCOMMENT     reduce using rule 15 (semiExpression -> LONGCOMMENT .)
    NAME            reduce using rule 15 (semiExpression -> LONGCOMMENT .)
    PRINT           reduce using rule 15 (semiExpression -> LONGCOMMENT .)
    INPUT           reduce using rule 15 (semiExpression -> LONGCOMMENT .)
    RETURN          reduce using rule 15 (semiExpression -> LONGCOMMENT .)
    FUNCTION        reduce using rule 15 (semiExpression -> LONGCOMMENT .)
    CONST           reduce using rule 15 (semiExpression -> LONGCOMMENT .)
    LET             reduce using rule 15 (semiExpression -> LONGCOMMENT .)
    VAR             reduce using rule 15 (semiExpression -> LONGCOMMENT .)
    OPEN_BRACKET    reduce using rule 15 (semiExpression -> LONGCOMMENT .)
    NEW             reduce using rule 15 (semiExpression -> LONGCOMMENT .)
    WHILE           reduce using rule 15 (semiExpression -> LONGCOMMENT .)
    FOR             reduce using rule 15 (semiExpression -> LONGCOMMENT .)
    OPEN_BRACE      reduce using rule 15 (semiExpression -> LONGCOMMENT .)
    IF              reduce using rule 15 (semiExpression -> LONGCOMMENT .)
    $end            reduce using rule 15 (semiExpression -> LONGCOMMENT .)
    CLOSE_BRACE     reduce using rule 15 (semiExpression -> LONGCOMMENT .)


state 16

    (16) semiExpression -> asigOp .

    COMMENTS        reduce using rule 16 (semiExpression -> asigOp .)
    LONGCOMMENT     reduce using rule 16 (semiExpression -> asigOp .)
    NAME            reduce using rule 16 (semiExpression -> asigOp .)
    PRINT           reduce using rule 16 (semiExpression -> asigOp .)
    INPUT           reduce using rule 16 (semiExpression -> asigOp .)
    RETURN          reduce using rule 16 (semiExpression -> asigOp .)
    FUNCTION        reduce using rule 16 (semiExpression -> asigOp .)
    CONST           reduce using rule 16 (semiExpression -> asigOp .)
    LET             reduce using rule 16 (semiExpression -> asigOp .)
    VAR             reduce using rule 16 (semiExpression -> asigOp .)
    OPEN_BRACKET    reduce using rule 16 (semiExpression -> asigOp .)
    NEW             reduce using rule 16 (semiExpression -> asigOp .)
    WHILE           reduce using rule 16 (semiExpression -> asigOp .)
    FOR             reduce using rule 16 (semiExpression -> asigOp .)
    OPEN_BRACE      reduce using rule 16 (semiExpression -> asigOp .)
    IF              reduce using rule 16 (semiExpression -> asigOp .)
    $end            reduce using rule 16 (semiExpression -> asigOp .)
    CLOSE_BRACE     reduce using rule 16 (semiExpression -> asigOp .)


state 17

    (21) variable -> type . NAME IGUAL datatype SEMICOLON
    (23) variable -> type . NAME IGUAL input

    NAME            shift and go to state 43


state 18

    (22) variable -> NAME . IGUAL datatype SEMICOLON
    (24) variable -> NAME . IGUAL input
    (109) methodsSet -> NAME . POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (110) methodsSet -> NAME . POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (111) methodsSet -> NAME . POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (100) mapFunctions -> NAME . POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) mapFunctions -> NAME . POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (102) mapFunctions -> NAME . POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (103) arrayFn -> NAME . POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (104) arrayFn -> NAME . POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (105) arrayFn -> NAME . POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (122) declaration -> NAME . IGUAL element SEMICOLON
    (73) asigOp -> NAME . operadorAsig number SEMICOLON
    (67) operadorAsig -> . MASIGUAL
    (68) operadorAsig -> . MENOSIGUAL
    (69) operadorAsig -> . PORIGUAL
    (70) operadorAsig -> . DIVIGUAL
    (71) operadorAsig -> . MODIGUAL
    (72) operadorAsig -> . POTIGUAL

    IGUAL           shift and go to state 44
    POINT           shift and go to state 45
    MASIGUAL        shift and go to state 47
    MENOSIGUAL      shift and go to state 48
    PORIGUAL        shift and go to state 49
    DIVIGUAL        shift and go to state 50
    MODIGUAL        shift and go to state 51
    POTIGUAL        shift and go to state 52

    operadorAsig                   shift and go to state 46

state 19

    (28) dataStruct -> array .

    COMMENTS        reduce using rule 28 (dataStruct -> array .)
    LONGCOMMENT     reduce using rule 28 (dataStruct -> array .)
    NAME            reduce using rule 28 (dataStruct -> array .)
    PRINT           reduce using rule 28 (dataStruct -> array .)
    INPUT           reduce using rule 28 (dataStruct -> array .)
    RETURN          reduce using rule 28 (dataStruct -> array .)
    FUNCTION        reduce using rule 28 (dataStruct -> array .)
    CONST           reduce using rule 28 (dataStruct -> array .)
    LET             reduce using rule 28 (dataStruct -> array .)
    VAR             reduce using rule 28 (dataStruct -> array .)
    OPEN_BRACKET    reduce using rule 28 (dataStruct -> array .)
    NEW             reduce using rule 28 (dataStruct -> array .)
    WHILE           reduce using rule 28 (dataStruct -> array .)
    FOR             reduce using rule 28 (dataStruct -> array .)
    OPEN_BRACE      reduce using rule 28 (dataStruct -> array .)
    IF              reduce using rule 28 (dataStruct -> array .)
    $end            reduce using rule 28 (dataStruct -> array .)
    CLOSE_BRACE     reduce using rule 28 (dataStruct -> array .)
    SEMICOLON       reduce using rule 28 (dataStruct -> array .)
    COLON           reduce using rule 28 (dataStruct -> array .)
    COMMA           reduce using rule 28 (dataStruct -> array .)
    CLOSE_BRACKET   reduce using rule 28 (dataStruct -> array .)
    CLOSE_PARENTHESIS reduce using rule 28 (dataStruct -> array .)


state 20

    (29) dataStruct -> set .

    COMMENTS        reduce using rule 29 (dataStruct -> set .)
    LONGCOMMENT     reduce using rule 29 (dataStruct -> set .)
    NAME            reduce using rule 29 (dataStruct -> set .)
    PRINT           reduce using rule 29 (dataStruct -> set .)
    INPUT           reduce using rule 29 (dataStruct -> set .)
    RETURN          reduce using rule 29 (dataStruct -> set .)
    FUNCTION        reduce using rule 29 (dataStruct -> set .)
    CONST           reduce using rule 29 (dataStruct -> set .)
    LET             reduce using rule 29 (dataStruct -> set .)
    VAR             reduce using rule 29 (dataStruct -> set .)
    OPEN_BRACKET    reduce using rule 29 (dataStruct -> set .)
    NEW             reduce using rule 29 (dataStruct -> set .)
    WHILE           reduce using rule 29 (dataStruct -> set .)
    FOR             reduce using rule 29 (dataStruct -> set .)
    OPEN_BRACE      reduce using rule 29 (dataStruct -> set .)
    IF              reduce using rule 29 (dataStruct -> set .)
    $end            reduce using rule 29 (dataStruct -> set .)
    CLOSE_BRACE     reduce using rule 29 (dataStruct -> set .)
    SEMICOLON       reduce using rule 29 (dataStruct -> set .)
    COLON           reduce using rule 29 (dataStruct -> set .)
    COMMA           reduce using rule 29 (dataStruct -> set .)
    CLOSE_BRACKET   reduce using rule 29 (dataStruct -> set .)
    CLOSE_PARENTHESIS reduce using rule 29 (dataStruct -> set .)


state 21

    (30) dataStruct -> map .

    COMMENTS        reduce using rule 30 (dataStruct -> map .)
    LONGCOMMENT     reduce using rule 30 (dataStruct -> map .)
    NAME            reduce using rule 30 (dataStruct -> map .)
    PRINT           reduce using rule 30 (dataStruct -> map .)
    INPUT           reduce using rule 30 (dataStruct -> map .)
    RETURN          reduce using rule 30 (dataStruct -> map .)
    FUNCTION        reduce using rule 30 (dataStruct -> map .)
    CONST           reduce using rule 30 (dataStruct -> map .)
    LET             reduce using rule 30 (dataStruct -> map .)
    VAR             reduce using rule 30 (dataStruct -> map .)
    OPEN_BRACKET    reduce using rule 30 (dataStruct -> map .)
    NEW             reduce using rule 30 (dataStruct -> map .)
    WHILE           reduce using rule 30 (dataStruct -> map .)
    FOR             reduce using rule 30 (dataStruct -> map .)
    OPEN_BRACE      reduce using rule 30 (dataStruct -> map .)
    IF              reduce using rule 30 (dataStruct -> map .)
    $end            reduce using rule 30 (dataStruct -> map .)
    CLOSE_BRACE     reduce using rule 30 (dataStruct -> map .)
    SEMICOLON       reduce using rule 30 (dataStruct -> map .)
    COLON           reduce using rule 30 (dataStruct -> map .)
    COMMA           reduce using rule 30 (dataStruct -> map .)
    CLOSE_BRACKET   reduce using rule 30 (dataStruct -> map .)
    CLOSE_PARENTHESIS reduce using rule 30 (dataStruct -> map .)


state 22

    (25) controlStruct -> while .

    COMMENTS        reduce using rule 25 (controlStruct -> while .)
    LONGCOMMENT     reduce using rule 25 (controlStruct -> while .)
    NAME            reduce using rule 25 (controlStruct -> while .)
    PRINT           reduce using rule 25 (controlStruct -> while .)
    INPUT           reduce using rule 25 (controlStruct -> while .)
    RETURN          reduce using rule 25 (controlStruct -> while .)
    FUNCTION        reduce using rule 25 (controlStruct -> while .)
    CONST           reduce using rule 25 (controlStruct -> while .)
    LET             reduce using rule 25 (controlStruct -> while .)
    VAR             reduce using rule 25 (controlStruct -> while .)
    OPEN_BRACKET    reduce using rule 25 (controlStruct -> while .)
    NEW             reduce using rule 25 (controlStruct -> while .)
    WHILE           reduce using rule 25 (controlStruct -> while .)
    FOR             reduce using rule 25 (controlStruct -> while .)
    OPEN_BRACE      reduce using rule 25 (controlStruct -> while .)
    IF              reduce using rule 25 (controlStruct -> while .)
    $end            reduce using rule 25 (controlStruct -> while .)
    CLOSE_BRACE     reduce using rule 25 (controlStruct -> while .)


state 23

    (26) controlStruct -> for .

    COMMENTS        reduce using rule 26 (controlStruct -> for .)
    LONGCOMMENT     reduce using rule 26 (controlStruct -> for .)
    NAME            reduce using rule 26 (controlStruct -> for .)
    PRINT           reduce using rule 26 (controlStruct -> for .)
    INPUT           reduce using rule 26 (controlStruct -> for .)
    RETURN          reduce using rule 26 (controlStruct -> for .)
    FUNCTION        reduce using rule 26 (controlStruct -> for .)
    CONST           reduce using rule 26 (controlStruct -> for .)
    LET             reduce using rule 26 (controlStruct -> for .)
    VAR             reduce using rule 26 (controlStruct -> for .)
    OPEN_BRACKET    reduce using rule 26 (controlStruct -> for .)
    NEW             reduce using rule 26 (controlStruct -> for .)
    WHILE           reduce using rule 26 (controlStruct -> for .)
    FOR             reduce using rule 26 (controlStruct -> for .)
    OPEN_BRACE      reduce using rule 26 (controlStruct -> for .)
    IF              reduce using rule 26 (controlStruct -> for .)
    $end            reduce using rule 26 (controlStruct -> for .)
    CLOSE_BRACE     reduce using rule 26 (controlStruct -> for .)


state 24

    (27) controlStruct -> if .

    COMMENTS        reduce using rule 27 (controlStruct -> if .)
    LONGCOMMENT     reduce using rule 27 (controlStruct -> if .)
    NAME            reduce using rule 27 (controlStruct -> if .)
    PRINT           reduce using rule 27 (controlStruct -> if .)
    INPUT           reduce using rule 27 (controlStruct -> if .)
    RETURN          reduce using rule 27 (controlStruct -> if .)
    FUNCTION        reduce using rule 27 (controlStruct -> if .)
    CONST           reduce using rule 27 (controlStruct -> if .)
    LET             reduce using rule 27 (controlStruct -> if .)
    VAR             reduce using rule 27 (controlStruct -> if .)
    OPEN_BRACKET    reduce using rule 27 (controlStruct -> if .)
    NEW             reduce using rule 27 (controlStruct -> if .)
    WHILE           reduce using rule 27 (controlStruct -> if .)
    FOR             reduce using rule 27 (controlStruct -> if .)
    OPEN_BRACE      reduce using rule 27 (controlStruct -> if .)
    IF              reduce using rule 27 (controlStruct -> if .)
    $end            reduce using rule 27 (controlStruct -> if .)
    CLOSE_BRACE     reduce using rule 27 (controlStruct -> if .)


state 25

    (134) print -> PRINT . OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (135) print -> PRINT . OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 53


state 26

    (136) input -> INPUT . OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON
    (137) input -> INPUT . OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (138) input -> INPUT . OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 54


state 27

    (133) return -> RETURN . datatype SEMICOLON
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    OPEN_BRACE      shift and go to state 29

    datatype                       shift and go to state 55
    number                         shift and go to state 56
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 28

    (129) function -> FUNCTION . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (130) function -> FUNCTION . NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    NAME            shift and go to state 65


state 29

    (91) escribirMap -> OPEN_BRACE . claveValor CLOSE_BRACE
    (95) generarMap -> OPEN_BRACE . tuplas CLOSE_BRACE
    (92) claveValor -> . clave COLON datatype
    (93) claveValor -> . clave COLON datatype COMMA claveValor
    (96) tuplas -> . tupla
    (97) tuplas -> . tupla COMMA tuplas
    (94) clave -> . datatype
    (98) tupla -> . OPEN_BRACKET datatype CLOSE_BRACKET SEMICOLON
    (99) tupla -> . OPEN_BRACKET datatype COMMA datatype CLOSE_BRACKET SEMICOLON
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    OPEN_BRACKET    shift and go to state 71
    NAME            shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    NEW             shift and go to state 34
    OPEN_BRACE      shift and go to state 29

    claveValor                     shift and go to state 66
    tuplas                         shift and go to state 67
    clave                          shift and go to state 68
    datatype                       shift and go to state 69
    tupla                          shift and go to state 70
    number                         shift and go to state 56
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 30

    (76) type -> CONST .

    NAME            reduce using rule 76 (type -> CONST .)


state 31

    (77) type -> LET .

    NAME            reduce using rule 77 (type -> LET .)


state 32

    (78) type -> VAR .

    NAME            reduce using rule 78 (type -> VAR .)


state 33

    (85) array -> OPEN_BRACKET . items CLOSE_BRACKET
    (112) items -> . item
    (113) items -> . item COMMA items
    (114) item -> . number
    (115) item -> . STRING
    (116) item -> . expBoolean
    (117) item -> . NAME
    (118) item -> . datatype
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (125) expBoolean -> . controlArg
    (126) expBoolean -> . bool
    (127) expBoolean -> . NOT expBoolean
    (128) expBoolean -> . expBoolean logicalOperator expBoolean
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (41) controlArg -> . element clause element
    (74) bool -> . TRUE
    (75) bool -> . FALSE
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    STRING          shift and go to state 75
    NAME            shift and go to state 77
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    NOT             shift and go to state 81
    CHAR            shift and go to state 59
    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    OPEN_BRACE      shift and go to state 29

    items                          shift and go to state 72
    item                           shift and go to state 73
    number                         shift and go to state 74
    expBoolean                     shift and go to state 76
    datatype                       shift and go to state 78
    controlArg                     shift and go to state 79
    bool                           shift and go to state 80
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    element                        shift and go to state 82
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 34

    (86) array -> NEW . ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> NEW . SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> NEW . SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> NEW . SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (90) iniciarMap -> NEW . MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS

    ARRAY           shift and go to state 85
    SET             shift and go to state 86
    MAP             shift and go to state 87


state 35

    (87) map -> iniciarMap .

    COMMENTS        reduce using rule 87 (map -> iniciarMap .)
    LONGCOMMENT     reduce using rule 87 (map -> iniciarMap .)
    NAME            reduce using rule 87 (map -> iniciarMap .)
    PRINT           reduce using rule 87 (map -> iniciarMap .)
    INPUT           reduce using rule 87 (map -> iniciarMap .)
    RETURN          reduce using rule 87 (map -> iniciarMap .)
    FUNCTION        reduce using rule 87 (map -> iniciarMap .)
    CONST           reduce using rule 87 (map -> iniciarMap .)
    LET             reduce using rule 87 (map -> iniciarMap .)
    VAR             reduce using rule 87 (map -> iniciarMap .)
    OPEN_BRACKET    reduce using rule 87 (map -> iniciarMap .)
    NEW             reduce using rule 87 (map -> iniciarMap .)
    WHILE           reduce using rule 87 (map -> iniciarMap .)
    FOR             reduce using rule 87 (map -> iniciarMap .)
    OPEN_BRACE      reduce using rule 87 (map -> iniciarMap .)
    IF              reduce using rule 87 (map -> iniciarMap .)
    $end            reduce using rule 87 (map -> iniciarMap .)
    CLOSE_BRACE     reduce using rule 87 (map -> iniciarMap .)
    SEMICOLON       reduce using rule 87 (map -> iniciarMap .)
    COLON           reduce using rule 87 (map -> iniciarMap .)
    COMMA           reduce using rule 87 (map -> iniciarMap .)
    CLOSE_BRACKET   reduce using rule 87 (map -> iniciarMap .)
    CLOSE_PARENTHESIS reduce using rule 87 (map -> iniciarMap .)


state 36

    (88) map -> escribirMap .

    COMMENTS        reduce using rule 88 (map -> escribirMap .)
    LONGCOMMENT     reduce using rule 88 (map -> escribirMap .)
    NAME            reduce using rule 88 (map -> escribirMap .)
    PRINT           reduce using rule 88 (map -> escribirMap .)
    INPUT           reduce using rule 88 (map -> escribirMap .)
    RETURN          reduce using rule 88 (map -> escribirMap .)
    FUNCTION        reduce using rule 88 (map -> escribirMap .)
    CONST           reduce using rule 88 (map -> escribirMap .)
    LET             reduce using rule 88 (map -> escribirMap .)
    VAR             reduce using rule 88 (map -> escribirMap .)
    OPEN_BRACKET    reduce using rule 88 (map -> escribirMap .)
    NEW             reduce using rule 88 (map -> escribirMap .)
    WHILE           reduce using rule 88 (map -> escribirMap .)
    FOR             reduce using rule 88 (map -> escribirMap .)
    OPEN_BRACE      reduce using rule 88 (map -> escribirMap .)
    IF              reduce using rule 88 (map -> escribirMap .)
    $end            reduce using rule 88 (map -> escribirMap .)
    CLOSE_BRACE     reduce using rule 88 (map -> escribirMap .)
    SEMICOLON       reduce using rule 88 (map -> escribirMap .)
    COLON           reduce using rule 88 (map -> escribirMap .)
    COMMA           reduce using rule 88 (map -> escribirMap .)
    CLOSE_BRACKET   reduce using rule 88 (map -> escribirMap .)
    CLOSE_PARENTHESIS reduce using rule 88 (map -> escribirMap .)


state 37

    (89) map -> generarMap .

    COMMENTS        reduce using rule 89 (map -> generarMap .)
    LONGCOMMENT     reduce using rule 89 (map -> generarMap .)
    NAME            reduce using rule 89 (map -> generarMap .)
    PRINT           reduce using rule 89 (map -> generarMap .)
    INPUT           reduce using rule 89 (map -> generarMap .)
    RETURN          reduce using rule 89 (map -> generarMap .)
    FUNCTION        reduce using rule 89 (map -> generarMap .)
    CONST           reduce using rule 89 (map -> generarMap .)
    LET             reduce using rule 89 (map -> generarMap .)
    VAR             reduce using rule 89 (map -> generarMap .)
    OPEN_BRACKET    reduce using rule 89 (map -> generarMap .)
    NEW             reduce using rule 89 (map -> generarMap .)
    WHILE           reduce using rule 89 (map -> generarMap .)
    FOR             reduce using rule 89 (map -> generarMap .)
    OPEN_BRACE      reduce using rule 89 (map -> generarMap .)
    IF              reduce using rule 89 (map -> generarMap .)
    $end            reduce using rule 89 (map -> generarMap .)
    CLOSE_BRACE     reduce using rule 89 (map -> generarMap .)
    SEMICOLON       reduce using rule 89 (map -> generarMap .)
    COLON           reduce using rule 89 (map -> generarMap .)
    COMMA           reduce using rule 89 (map -> generarMap .)
    CLOSE_BRACKET   reduce using rule 89 (map -> generarMap .)
    CLOSE_PARENTHESIS reduce using rule 89 (map -> generarMap .)


state 38

    (31) while -> WHILE . OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (32) while -> WHILE . OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    OPEN_PARENTHESIS shift and go to state 88


state 39

    (42) for -> FOR . OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    OPEN_PARENTHESIS shift and go to state 89


state 40

    (33) if -> soloIf .
    (34) if -> soloIf . elseIf
    (35) if -> soloIf . elseIf else
    (36) if -> soloIf . else
    (38) elseIf -> . ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (39) elseIf -> . ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf
    (40) else -> . ELSE OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        reduce using rule 33 (if -> soloIf .)
    LONGCOMMENT     reduce using rule 33 (if -> soloIf .)
    NAME            reduce using rule 33 (if -> soloIf .)
    PRINT           reduce using rule 33 (if -> soloIf .)
    INPUT           reduce using rule 33 (if -> soloIf .)
    RETURN          reduce using rule 33 (if -> soloIf .)
    FUNCTION        reduce using rule 33 (if -> soloIf .)
    CONST           reduce using rule 33 (if -> soloIf .)
    LET             reduce using rule 33 (if -> soloIf .)
    VAR             reduce using rule 33 (if -> soloIf .)
    OPEN_BRACKET    reduce using rule 33 (if -> soloIf .)
    NEW             reduce using rule 33 (if -> soloIf .)
    WHILE           reduce using rule 33 (if -> soloIf .)
    FOR             reduce using rule 33 (if -> soloIf .)
    OPEN_BRACE      reduce using rule 33 (if -> soloIf .)
    IF              reduce using rule 33 (if -> soloIf .)
    $end            reduce using rule 33 (if -> soloIf .)
    CLOSE_BRACE     reduce using rule 33 (if -> soloIf .)
    ELSEIF          shift and go to state 92
    ELSE            shift and go to state 93

    elseIf                         shift and go to state 90
    else                           shift and go to state 91

state 41

    (37) soloIf -> IF . OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    OPEN_PARENTHESIS shift and go to state 94


state 42

    (2) expression -> semiExpression expression .

    $end            reduce using rule 2 (expression -> semiExpression expression .)
    CLOSE_BRACE     reduce using rule 2 (expression -> semiExpression expression .)


state 43

    (21) variable -> type NAME . IGUAL datatype SEMICOLON
    (23) variable -> type NAME . IGUAL input

    IGUAL           shift and go to state 95


state 44

    (22) variable -> NAME IGUAL . datatype SEMICOLON
    (24) variable -> NAME IGUAL . input
    (122) declaration -> NAME IGUAL . element SEMICOLON
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (136) input -> . INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON
    (137) input -> . INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (138) input -> . INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 96
    STRING          shift and go to state 101
    CHAR            shift and go to state 59
    INPUT           shift and go to state 26
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    OPEN_BRACE      shift and go to state 29

    datatype                       shift and go to state 97
    input                          shift and go to state 98
    element                        shift and go to state 99
    number                         shift and go to state 100
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 45

    (109) methodsSet -> NAME POINT . ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (110) methodsSet -> NAME POINT . DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (111) methodsSet -> NAME POINT . CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (100) mapFunctions -> NAME POINT . CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) mapFunctions -> NAME POINT . GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (102) mapFunctions -> NAME POINT . HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (103) arrayFn -> NAME POINT . POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (104) arrayFn -> NAME POINT . PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (105) arrayFn -> NAME POINT . UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON

    ADD             shift and go to state 102
    DELETE          shift and go to state 103
    CLEAR           shift and go to state 104
    GET             shift and go to state 105
    HAS             shift and go to state 106
    POP             shift and go to state 107
    PUSH            shift and go to state 108
    UNSHIFT         shift and go to state 109


state 46

    (73) asigOp -> NAME operadorAsig . number SEMICOLON
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    number                         shift and go to state 110

state 47

    (67) operadorAsig -> MASIGUAL .

    INTEGER         reduce using rule 67 (operadorAsig -> MASIGUAL .)
    FLOAT           reduce using rule 67 (operadorAsig -> MASIGUAL .)
    OPEN_PARENTHESIS reduce using rule 67 (operadorAsig -> MASIGUAL .)


state 48

    (68) operadorAsig -> MENOSIGUAL .

    INTEGER         reduce using rule 68 (operadorAsig -> MENOSIGUAL .)
    FLOAT           reduce using rule 68 (operadorAsig -> MENOSIGUAL .)
    OPEN_PARENTHESIS reduce using rule 68 (operadorAsig -> MENOSIGUAL .)


state 49

    (69) operadorAsig -> PORIGUAL .

    INTEGER         reduce using rule 69 (operadorAsig -> PORIGUAL .)
    FLOAT           reduce using rule 69 (operadorAsig -> PORIGUAL .)
    OPEN_PARENTHESIS reduce using rule 69 (operadorAsig -> PORIGUAL .)


state 50

    (70) operadorAsig -> DIVIGUAL .

    INTEGER         reduce using rule 70 (operadorAsig -> DIVIGUAL .)
    FLOAT           reduce using rule 70 (operadorAsig -> DIVIGUAL .)
    OPEN_PARENTHESIS reduce using rule 70 (operadorAsig -> DIVIGUAL .)


state 51

    (71) operadorAsig -> MODIGUAL .

    INTEGER         reduce using rule 71 (operadorAsig -> MODIGUAL .)
    FLOAT           reduce using rule 71 (operadorAsig -> MODIGUAL .)
    OPEN_PARENTHESIS reduce using rule 71 (operadorAsig -> MODIGUAL .)


state 52

    (72) operadorAsig -> POTIGUAL .

    INTEGER         reduce using rule 72 (operadorAsig -> POTIGUAL .)
    FLOAT           reduce using rule 72 (operadorAsig -> POTIGUAL .)
    OPEN_PARENTHESIS reduce using rule 72 (operadorAsig -> POTIGUAL .)


state 53

    (134) print -> PRINT OPEN_PARENTHESIS . datatype CLOSE_PARENTHESIS SEMICOLON
    (135) print -> PRINT OPEN_PARENTHESIS . CLOSE_PARENTHESIS SEMICOLON
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    CLOSE_PARENTHESIS shift and go to state 112
    NAME            shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    OPEN_BRACE      shift and go to state 29

    datatype                       shift and go to state 111
    number                         shift and go to state 56
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 54

    (136) input -> INPUT OPEN_PARENTHESIS . element COMMA element CLOSE_PARENTHESIS SEMICOLON
    (137) input -> INPUT OPEN_PARENTHESIS . element CLOSE_PARENTHESIS SEMICOLON
    (138) input -> INPUT OPEN_PARENTHESIS . CLOSE_PARENTHESIS SEMICOLON
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 114
    STRING          shift and go to state 115
    NAME            shift and go to state 117
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    element                        shift and go to state 113
    number                         shift and go to state 116

state 55

    (133) return -> RETURN datatype . SEMICOLON

    SEMICOLON       shift and go to state 118


state 56

    (57) datatype -> number .
    (45) operations -> number . operand number
    (47) operations -> number .
    (48) operations -> number . operand NAME operations
    (50) operations -> number . operand NAME
    (53) operations -> number . operand number operand operations
    (63) operand -> . SUMA
    (64) operand -> . RESTA
    (65) operand -> . MULTIPLICACION
    (66) operand -> . DIVISION

  ! reduce/reduce conflict for SEMICOLON resolved using rule 47 (operations -> number .)
  ! reduce/reduce conflict for COLON resolved using rule 47 (operations -> number .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 47 (operations -> number .)
  ! reduce/reduce conflict for COMMA resolved using rule 47 (operations -> number .)
  ! reduce/reduce conflict for CLOSE_BRACE resolved using rule 47 (operations -> number .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 47 (operations -> number .)
    SEMICOLON       reduce using rule 47 (operations -> number .)
    COLON           reduce using rule 47 (operations -> number .)
    CLOSE_PARENTHESIS reduce using rule 47 (operations -> number .)
    COMMA           reduce using rule 47 (operations -> number .)
    CLOSE_BRACE     reduce using rule 47 (operations -> number .)
    CLOSE_BRACKET   reduce using rule 47 (operations -> number .)
    SUMA            shift and go to state 120
    RESTA           shift and go to state 121
    MULTIPLICACION  shift and go to state 122
    DIVISION        shift and go to state 123

  ! SEMICOLON       [ reduce using rule 57 (datatype -> number .) ]
  ! COLON           [ reduce using rule 57 (datatype -> number .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 57 (datatype -> number .) ]
  ! COMMA           [ reduce using rule 57 (datatype -> number .) ]
  ! CLOSE_BRACE     [ reduce using rule 57 (datatype -> number .) ]
  ! CLOSE_BRACKET   [ reduce using rule 57 (datatype -> number .) ]

    operand                        shift and go to state 119

state 57

    (58) datatype -> NAME .
    (46) operations -> NAME .
    (49) operations -> NAME . operand number operations
    (51) operations -> NAME . operand number
    (52) operations -> NAME . operand NAME operations
    (54) operations -> NAME . SUMA SUMA
    (55) operations -> NAME . operand NAME
    (56) operations -> NAME . RESTA RESTA
    (63) operand -> . SUMA
    (64) operand -> . RESTA
    (65) operand -> . MULTIPLICACION
    (66) operand -> . DIVISION

  ! reduce/reduce conflict for SEMICOLON resolved using rule 46 (operations -> NAME .)
  ! reduce/reduce conflict for COLON resolved using rule 46 (operations -> NAME .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 46 (operations -> NAME .)
  ! reduce/reduce conflict for COMMA resolved using rule 46 (operations -> NAME .)
  ! reduce/reduce conflict for CLOSE_BRACE resolved using rule 46 (operations -> NAME .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 46 (operations -> NAME .)
    SEMICOLON       reduce using rule 46 (operations -> NAME .)
    COLON           reduce using rule 46 (operations -> NAME .)
    CLOSE_PARENTHESIS reduce using rule 46 (operations -> NAME .)
    COMMA           reduce using rule 46 (operations -> NAME .)
    CLOSE_BRACE     reduce using rule 46 (operations -> NAME .)
    CLOSE_BRACKET   reduce using rule 46 (operations -> NAME .)
    SUMA            shift and go to state 125
    RESTA           shift and go to state 126
    MULTIPLICACION  shift and go to state 122
    DIVISION        shift and go to state 123

  ! SEMICOLON       [ reduce using rule 58 (datatype -> NAME .) ]
  ! COLON           [ reduce using rule 58 (datatype -> NAME .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 58 (datatype -> NAME .) ]
  ! COMMA           [ reduce using rule 58 (datatype -> NAME .) ]
  ! CLOSE_BRACE     [ reduce using rule 58 (datatype -> NAME .) ]
  ! CLOSE_BRACKET   [ reduce using rule 58 (datatype -> NAME .) ]

    operand                        shift and go to state 124

state 58

    (59) datatype -> STRING .

    SEMICOLON       reduce using rule 59 (datatype -> STRING .)
    COLON           reduce using rule 59 (datatype -> STRING .)
    CLOSE_PARENTHESIS reduce using rule 59 (datatype -> STRING .)
    COMMA           reduce using rule 59 (datatype -> STRING .)
    CLOSE_BRACE     reduce using rule 59 (datatype -> STRING .)
    CLOSE_BRACKET   reduce using rule 59 (datatype -> STRING .)


state 59

    (60) datatype -> CHAR .

    SEMICOLON       reduce using rule 60 (datatype -> CHAR .)
    COLON           reduce using rule 60 (datatype -> CHAR .)
    COMMA           reduce using rule 60 (datatype -> CHAR .)
    CLOSE_BRACKET   reduce using rule 60 (datatype -> CHAR .)
    CLOSE_PARENTHESIS reduce using rule 60 (datatype -> CHAR .)
    CLOSE_BRACE     reduce using rule 60 (datatype -> CHAR .)


state 60

    (61) datatype -> operations .

    SEMICOLON       reduce using rule 61 (datatype -> operations .)
    COLON           reduce using rule 61 (datatype -> operations .)
    COMMA           reduce using rule 61 (datatype -> operations .)
    CLOSE_BRACKET   reduce using rule 61 (datatype -> operations .)
    CLOSE_PARENTHESIS reduce using rule 61 (datatype -> operations .)
    CLOSE_BRACE     reduce using rule 61 (datatype -> operations .)


state 61

    (62) datatype -> dataStruct .

    SEMICOLON       reduce using rule 62 (datatype -> dataStruct .)
    COLON           reduce using rule 62 (datatype -> dataStruct .)
    COMMA           reduce using rule 62 (datatype -> dataStruct .)
    CLOSE_BRACKET   reduce using rule 62 (datatype -> dataStruct .)
    CLOSE_PARENTHESIS reduce using rule 62 (datatype -> dataStruct .)
    CLOSE_BRACE     reduce using rule 62 (datatype -> dataStruct .)


state 62

    (17) number -> INTEGER .

    SUMA            reduce using rule 17 (number -> INTEGER .)
    RESTA           reduce using rule 17 (number -> INTEGER .)
    MULTIPLICACION  reduce using rule 17 (number -> INTEGER .)
    DIVISION        reduce using rule 17 (number -> INTEGER .)
    SEMICOLON       reduce using rule 17 (number -> INTEGER .)
    COLON           reduce using rule 17 (number -> INTEGER .)
    COMMA           reduce using rule 17 (number -> INTEGER .)
    CLOSE_BRACKET   reduce using rule 17 (number -> INTEGER .)
    IGUALIGUAL      reduce using rule 17 (number -> INTEGER .)
    DIFERENTE       reduce using rule 17 (number -> INTEGER .)
    MAYORQUE        reduce using rule 17 (number -> INTEGER .)
    MAYORIGUALQUE   reduce using rule 17 (number -> INTEGER .)
    MENORQUE        reduce using rule 17 (number -> INTEGER .)
    MENORIGUALQUE   reduce using rule 17 (number -> INTEGER .)
    CLOSE_PARENTHESIS reduce using rule 17 (number -> INTEGER .)
    CLOSE_BRACE     reduce using rule 17 (number -> INTEGER .)
    NAME            reduce using rule 17 (number -> INTEGER .)
    INTEGER         reduce using rule 17 (number -> INTEGER .)
    FLOAT           reduce using rule 17 (number -> INTEGER .)
    OPEN_PARENTHESIS reduce using rule 17 (number -> INTEGER .)
    AND             reduce using rule 17 (number -> INTEGER .)
    OR              reduce using rule 17 (number -> INTEGER .)


state 63

    (18) number -> FLOAT .

    SUMA            reduce using rule 18 (number -> FLOAT .)
    RESTA           reduce using rule 18 (number -> FLOAT .)
    MULTIPLICACION  reduce using rule 18 (number -> FLOAT .)
    DIVISION        reduce using rule 18 (number -> FLOAT .)
    SEMICOLON       reduce using rule 18 (number -> FLOAT .)
    COLON           reduce using rule 18 (number -> FLOAT .)
    COMMA           reduce using rule 18 (number -> FLOAT .)
    CLOSE_BRACKET   reduce using rule 18 (number -> FLOAT .)
    IGUALIGUAL      reduce using rule 18 (number -> FLOAT .)
    DIFERENTE       reduce using rule 18 (number -> FLOAT .)
    MAYORQUE        reduce using rule 18 (number -> FLOAT .)
    MAYORIGUALQUE   reduce using rule 18 (number -> FLOAT .)
    MENORQUE        reduce using rule 18 (number -> FLOAT .)
    MENORIGUALQUE   reduce using rule 18 (number -> FLOAT .)
    CLOSE_PARENTHESIS reduce using rule 18 (number -> FLOAT .)
    CLOSE_BRACE     reduce using rule 18 (number -> FLOAT .)
    NAME            reduce using rule 18 (number -> FLOAT .)
    INTEGER         reduce using rule 18 (number -> FLOAT .)
    FLOAT           reduce using rule 18 (number -> FLOAT .)
    OPEN_PARENTHESIS reduce using rule 18 (number -> FLOAT .)
    AND             reduce using rule 18 (number -> FLOAT .)
    OR              reduce using rule 18 (number -> FLOAT .)


state 64

    (19) number -> OPEN_PARENTHESIS . RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> OPEN_PARENTHESIS . RESTA FLOAT CLOSE_PARENTHESIS

    RESTA           shift and go to state 127


state 65

    (129) function -> FUNCTION NAME . OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (130) function -> FUNCTION NAME . OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    OPEN_PARENTHESIS shift and go to state 128


state 66

    (91) escribirMap -> OPEN_BRACE claveValor . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 129


state 67

    (95) generarMap -> OPEN_BRACE tuplas . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 130


state 68

    (92) claveValor -> clave . COLON datatype
    (93) claveValor -> clave . COLON datatype COMMA claveValor

    COLON           shift and go to state 131


state 69

    (94) clave -> datatype .

    COLON           reduce using rule 94 (clave -> datatype .)
    CLOSE_PARENTHESIS reduce using rule 94 (clave -> datatype .)


state 70

    (96) tuplas -> tupla .
    (97) tuplas -> tupla . COMMA tuplas

    CLOSE_BRACE     reduce using rule 96 (tuplas -> tupla .)
    COMMA           shift and go to state 132


state 71

    (98) tupla -> OPEN_BRACKET . datatype CLOSE_BRACKET SEMICOLON
    (99) tupla -> OPEN_BRACKET . datatype COMMA datatype CLOSE_BRACKET SEMICOLON
    (85) array -> OPEN_BRACKET . items CLOSE_BRACKET
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (112) items -> . item
    (113) items -> . item COMMA items
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (114) item -> . number
    (115) item -> . STRING
    (116) item -> . expBoolean
    (117) item -> . NAME
    (118) item -> . datatype
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (125) expBoolean -> . controlArg
    (126) expBoolean -> . bool
    (127) expBoolean -> . NOT expBoolean
    (128) expBoolean -> . expBoolean logicalOperator expBoolean
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (41) controlArg -> . element clause element
    (74) bool -> . TRUE
    (75) bool -> . FALSE
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME

    NAME            shift and go to state 135
    STRING          shift and go to state 136
    CHAR            shift and go to state 59
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    NOT             shift and go to state 81
    OPEN_BRACE      shift and go to state 29
    TRUE            shift and go to state 83
    FALSE           shift and go to state 84

    datatype                       shift and go to state 133
    items                          shift and go to state 72
    number                         shift and go to state 134
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    item                           shift and go to state 73
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    expBoolean                     shift and go to state 76
    element                        shift and go to state 82
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37
    controlArg                     shift and go to state 79
    bool                           shift and go to state 80

state 72

    (85) array -> OPEN_BRACKET items . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 137


state 73

    (112) items -> item .
    (113) items -> item . COMMA items

    CLOSE_BRACKET   reduce using rule 112 (items -> item .)
    CLOSE_PARENTHESIS reduce using rule 112 (items -> item .)
    COMMA           shift and go to state 138


state 74

    (114) item -> number .
    (57) datatype -> number .
    (45) operations -> number . operand number
    (47) operations -> number .
    (48) operations -> number . operand NAME operations
    (50) operations -> number . operand NAME
    (53) operations -> number . operand number operand operations
    (120) element -> number .
    (63) operand -> . SUMA
    (64) operand -> . RESTA
    (65) operand -> . MULTIPLICACION
    (66) operand -> . DIVISION

  ! reduce/reduce conflict for COMMA resolved using rule 57 (datatype -> number .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 57 (datatype -> number .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 57 (datatype -> number .)
  ! reduce/reduce conflict for COMMA resolved using rule 47 (operations -> number .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 47 (operations -> number .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 47 (operations -> number .)
    COMMA           reduce using rule 47 (operations -> number .)
    CLOSE_BRACKET   reduce using rule 47 (operations -> number .)
    CLOSE_PARENTHESIS reduce using rule 47 (operations -> number .)
    IGUALIGUAL      reduce using rule 120 (element -> number .)
    DIFERENTE       reduce using rule 120 (element -> number .)
    MAYORQUE        reduce using rule 120 (element -> number .)
    MAYORIGUALQUE   reduce using rule 120 (element -> number .)
    MENORQUE        reduce using rule 120 (element -> number .)
    MENORIGUALQUE   reduce using rule 120 (element -> number .)
    SUMA            shift and go to state 120
    RESTA           shift and go to state 121
    MULTIPLICACION  shift and go to state 122
    DIVISION        shift and go to state 123

  ! COMMA           [ reduce using rule 114 (item -> number .) ]
  ! CLOSE_BRACKET   [ reduce using rule 114 (item -> number .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 114 (item -> number .) ]
  ! COMMA           [ reduce using rule 57 (datatype -> number .) ]
  ! CLOSE_BRACKET   [ reduce using rule 57 (datatype -> number .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 57 (datatype -> number .) ]

    operand                        shift and go to state 119

state 75

    (115) item -> STRING .
    (59) datatype -> STRING .
    (119) element -> STRING .

  ! reduce/reduce conflict for COMMA resolved using rule 59 (datatype -> STRING .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 59 (datatype -> STRING .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 59 (datatype -> STRING .)
    COMMA           reduce using rule 59 (datatype -> STRING .)
    CLOSE_BRACKET   reduce using rule 59 (datatype -> STRING .)
    CLOSE_PARENTHESIS reduce using rule 59 (datatype -> STRING .)
    IGUALIGUAL      reduce using rule 119 (element -> STRING .)
    DIFERENTE       reduce using rule 119 (element -> STRING .)
    MAYORQUE        reduce using rule 119 (element -> STRING .)
    MAYORIGUALQUE   reduce using rule 119 (element -> STRING .)
    MENORQUE        reduce using rule 119 (element -> STRING .)
    MENORIGUALQUE   reduce using rule 119 (element -> STRING .)

  ! COMMA           [ reduce using rule 115 (item -> STRING .) ]
  ! CLOSE_BRACKET   [ reduce using rule 115 (item -> STRING .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 115 (item -> STRING .) ]


state 76

    (116) item -> expBoolean .
    (128) expBoolean -> expBoolean . logicalOperator expBoolean
    (123) logicalOperator -> . AND
    (124) logicalOperator -> . OR

    COMMA           reduce using rule 116 (item -> expBoolean .)
    CLOSE_BRACKET   reduce using rule 116 (item -> expBoolean .)
    CLOSE_PARENTHESIS reduce using rule 116 (item -> expBoolean .)
    AND             shift and go to state 140
    OR              shift and go to state 141

    logicalOperator                shift and go to state 139

state 77

    (117) item -> NAME .
    (58) datatype -> NAME .
    (46) operations -> NAME .
    (49) operations -> NAME . operand number operations
    (51) operations -> NAME . operand number
    (52) operations -> NAME . operand NAME operations
    (54) operations -> NAME . SUMA SUMA
    (55) operations -> NAME . operand NAME
    (56) operations -> NAME . RESTA RESTA
    (121) element -> NAME .
    (63) operand -> . SUMA
    (64) operand -> . RESTA
    (65) operand -> . MULTIPLICACION
    (66) operand -> . DIVISION

  ! reduce/reduce conflict for COMMA resolved using rule 58 (datatype -> NAME .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 58 (datatype -> NAME .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 58 (datatype -> NAME .)
  ! reduce/reduce conflict for COMMA resolved using rule 46 (operations -> NAME .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 46 (operations -> NAME .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 46 (operations -> NAME .)
    COMMA           reduce using rule 46 (operations -> NAME .)
    CLOSE_BRACKET   reduce using rule 46 (operations -> NAME .)
    CLOSE_PARENTHESIS reduce using rule 46 (operations -> NAME .)
    SUMA            shift and go to state 125
    RESTA           shift and go to state 126
    IGUALIGUAL      reduce using rule 121 (element -> NAME .)
    DIFERENTE       reduce using rule 121 (element -> NAME .)
    MAYORQUE        reduce using rule 121 (element -> NAME .)
    MAYORIGUALQUE   reduce using rule 121 (element -> NAME .)
    MENORQUE        reduce using rule 121 (element -> NAME .)
    MENORIGUALQUE   reduce using rule 121 (element -> NAME .)
    MULTIPLICACION  shift and go to state 122
    DIVISION        shift and go to state 123

  ! COMMA           [ reduce using rule 117 (item -> NAME .) ]
  ! CLOSE_BRACKET   [ reduce using rule 117 (item -> NAME .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 117 (item -> NAME .) ]
  ! COMMA           [ reduce using rule 58 (datatype -> NAME .) ]
  ! CLOSE_BRACKET   [ reduce using rule 58 (datatype -> NAME .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 58 (datatype -> NAME .) ]

    operand                        shift and go to state 124

state 78

    (118) item -> datatype .

    COMMA           reduce using rule 118 (item -> datatype .)
    CLOSE_BRACKET   reduce using rule 118 (item -> datatype .)
    CLOSE_PARENTHESIS reduce using rule 118 (item -> datatype .)


state 79

    (125) expBoolean -> controlArg .

    AND             reduce using rule 125 (expBoolean -> controlArg .)
    OR              reduce using rule 125 (expBoolean -> controlArg .)
    COMMA           reduce using rule 125 (expBoolean -> controlArg .)
    CLOSE_BRACKET   reduce using rule 125 (expBoolean -> controlArg .)
    CLOSE_PARENTHESIS reduce using rule 125 (expBoolean -> controlArg .)
    SEMICOLON       reduce using rule 125 (expBoolean -> controlArg .)


state 80

    (126) expBoolean -> bool .

    AND             reduce using rule 126 (expBoolean -> bool .)
    OR              reduce using rule 126 (expBoolean -> bool .)
    COMMA           reduce using rule 126 (expBoolean -> bool .)
    CLOSE_BRACKET   reduce using rule 126 (expBoolean -> bool .)
    CLOSE_PARENTHESIS reduce using rule 126 (expBoolean -> bool .)
    SEMICOLON       reduce using rule 126 (expBoolean -> bool .)


state 81

    (127) expBoolean -> NOT . expBoolean
    (125) expBoolean -> . controlArg
    (126) expBoolean -> . bool
    (127) expBoolean -> . NOT expBoolean
    (128) expBoolean -> . expBoolean logicalOperator expBoolean
    (41) controlArg -> . element clause element
    (74) bool -> . TRUE
    (75) bool -> . FALSE
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    NOT             shift and go to state 81
    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    STRING          shift and go to state 115
    NAME            shift and go to state 117
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    expBoolean                     shift and go to state 142
    controlArg                     shift and go to state 79
    bool                           shift and go to state 80
    element                        shift and go to state 82
    number                         shift and go to state 116

state 82

    (41) controlArg -> element . clause element
    (79) clause -> . IGUALIGUAL
    (80) clause -> . DIFERENTE
    (81) clause -> . MAYORQUE
    (82) clause -> . MAYORIGUALQUE
    (83) clause -> . MENORQUE
    (84) clause -> . MENORIGUALQUE

    IGUALIGUAL      shift and go to state 144
    DIFERENTE       shift and go to state 145
    MAYORQUE        shift and go to state 146
    MAYORIGUALQUE   shift and go to state 147
    MENORQUE        shift and go to state 148
    MENORIGUALQUE   shift and go to state 149

    clause                         shift and go to state 143

state 83

    (74) bool -> TRUE .

    AND             reduce using rule 74 (bool -> TRUE .)
    OR              reduce using rule 74 (bool -> TRUE .)
    COMMA           reduce using rule 74 (bool -> TRUE .)
    CLOSE_BRACKET   reduce using rule 74 (bool -> TRUE .)
    CLOSE_PARENTHESIS reduce using rule 74 (bool -> TRUE .)
    SEMICOLON       reduce using rule 74 (bool -> TRUE .)


state 84

    (75) bool -> FALSE .

    AND             reduce using rule 75 (bool -> FALSE .)
    OR              reduce using rule 75 (bool -> FALSE .)
    COMMA           reduce using rule 75 (bool -> FALSE .)
    CLOSE_BRACKET   reduce using rule 75 (bool -> FALSE .)
    CLOSE_PARENTHESIS reduce using rule 75 (bool -> FALSE .)
    SEMICOLON       reduce using rule 75 (bool -> FALSE .)


state 85

    (86) array -> NEW ARRAY . OPEN_PARENTHESIS items CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 150


state 86

    (106) set -> NEW SET . OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> NEW SET . OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> NEW SET . OPEN_PARENTHESIS element CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 151


state 87

    (90) iniciarMap -> NEW MAP . OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 152


state 88

    (31) while -> WHILE OPEN_PARENTHESIS . controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (32) while -> WHILE OPEN_PARENTHESIS . bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (41) controlArg -> . element clause element
    (74) bool -> . TRUE
    (75) bool -> . FALSE
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    STRING          shift and go to state 115
    NAME            shift and go to state 117
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    controlArg                     shift and go to state 153
    bool                           shift and go to state 154
    element                        shift and go to state 82
    number                         shift and go to state 116

state 89

    (42) for -> FOR OPEN_PARENTHESIS . inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (43) inicialization -> . type NAME IGUAL number
    (44) inicialization -> . NAME IGUAL number
    (76) type -> . CONST
    (77) type -> . LET
    (78) type -> . VAR

    NAME            shift and go to state 157
    CONST           shift and go to state 30
    LET             shift and go to state 31
    VAR             shift and go to state 32

    inicialization                 shift and go to state 155
    type                           shift and go to state 156

state 90

    (34) if -> soloIf elseIf .
    (35) if -> soloIf elseIf . else
    (40) else -> . ELSE OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        reduce using rule 34 (if -> soloIf elseIf .)
    LONGCOMMENT     reduce using rule 34 (if -> soloIf elseIf .)
    NAME            reduce using rule 34 (if -> soloIf elseIf .)
    PRINT           reduce using rule 34 (if -> soloIf elseIf .)
    INPUT           reduce using rule 34 (if -> soloIf elseIf .)
    RETURN          reduce using rule 34 (if -> soloIf elseIf .)
    FUNCTION        reduce using rule 34 (if -> soloIf elseIf .)
    CONST           reduce using rule 34 (if -> soloIf elseIf .)
    LET             reduce using rule 34 (if -> soloIf elseIf .)
    VAR             reduce using rule 34 (if -> soloIf elseIf .)
    OPEN_BRACKET    reduce using rule 34 (if -> soloIf elseIf .)
    NEW             reduce using rule 34 (if -> soloIf elseIf .)
    WHILE           reduce using rule 34 (if -> soloIf elseIf .)
    FOR             reduce using rule 34 (if -> soloIf elseIf .)
    OPEN_BRACE      reduce using rule 34 (if -> soloIf elseIf .)
    IF              reduce using rule 34 (if -> soloIf elseIf .)
    $end            reduce using rule 34 (if -> soloIf elseIf .)
    CLOSE_BRACE     reduce using rule 34 (if -> soloIf elseIf .)
    ELSE            shift and go to state 93

    else                           shift and go to state 158

state 91

    (36) if -> soloIf else .

    COMMENTS        reduce using rule 36 (if -> soloIf else .)
    LONGCOMMENT     reduce using rule 36 (if -> soloIf else .)
    NAME            reduce using rule 36 (if -> soloIf else .)
    PRINT           reduce using rule 36 (if -> soloIf else .)
    INPUT           reduce using rule 36 (if -> soloIf else .)
    RETURN          reduce using rule 36 (if -> soloIf else .)
    FUNCTION        reduce using rule 36 (if -> soloIf else .)
    CONST           reduce using rule 36 (if -> soloIf else .)
    LET             reduce using rule 36 (if -> soloIf else .)
    VAR             reduce using rule 36 (if -> soloIf else .)
    OPEN_BRACKET    reduce using rule 36 (if -> soloIf else .)
    NEW             reduce using rule 36 (if -> soloIf else .)
    WHILE           reduce using rule 36 (if -> soloIf else .)
    FOR             reduce using rule 36 (if -> soloIf else .)
    OPEN_BRACE      reduce using rule 36 (if -> soloIf else .)
    IF              reduce using rule 36 (if -> soloIf else .)
    $end            reduce using rule 36 (if -> soloIf else .)
    CLOSE_BRACE     reduce using rule 36 (if -> soloIf else .)


state 92

    (38) elseIf -> ELSEIF . OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (39) elseIf -> ELSEIF . OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf

    OPEN_PARENTHESIS shift and go to state 159


state 93

    (40) else -> ELSE . OPEN_BRACE expression CLOSE_BRACE

    OPEN_BRACE      shift and go to state 160


state 94

    (37) soloIf -> IF OPEN_PARENTHESIS . controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (41) controlArg -> . element clause element
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    STRING          shift and go to state 115
    NAME            shift and go to state 117
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    controlArg                     shift and go to state 161
    element                        shift and go to state 82
    number                         shift and go to state 116

state 95

    (21) variable -> type NAME IGUAL . datatype SEMICOLON
    (23) variable -> type NAME IGUAL . input
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (136) input -> . INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON
    (137) input -> . INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (138) input -> . INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59
    INPUT           shift and go to state 26
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    OPEN_BRACE      shift and go to state 29

    datatype                       shift and go to state 162
    input                          shift and go to state 163
    number                         shift and go to state 56
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 96

    (58) datatype -> NAME .
    (121) element -> NAME .
    (46) operations -> NAME .
    (49) operations -> NAME . operand number operations
    (51) operations -> NAME . operand number
    (52) operations -> NAME . operand NAME operations
    (54) operations -> NAME . SUMA SUMA
    (55) operations -> NAME . operand NAME
    (56) operations -> NAME . RESTA RESTA
    (63) operand -> . SUMA
    (64) operand -> . RESTA
    (65) operand -> . MULTIPLICACION
    (66) operand -> . DIVISION

  ! reduce/reduce conflict for SEMICOLON resolved using rule 58 (datatype -> NAME .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 46 (operations -> NAME .)
    SEMICOLON       reduce using rule 46 (operations -> NAME .)
    SUMA            shift and go to state 125
    RESTA           shift and go to state 126
    MULTIPLICACION  shift and go to state 122
    DIVISION        shift and go to state 123

  ! SEMICOLON       [ reduce using rule 58 (datatype -> NAME .) ]
  ! SEMICOLON       [ reduce using rule 121 (element -> NAME .) ]

    operand                        shift and go to state 124

state 97

    (22) variable -> NAME IGUAL datatype . SEMICOLON

    SEMICOLON       shift and go to state 164


state 98

    (24) variable -> NAME IGUAL input .

    COMMENTS        reduce using rule 24 (variable -> NAME IGUAL input .)
    LONGCOMMENT     reduce using rule 24 (variable -> NAME IGUAL input .)
    NAME            reduce using rule 24 (variable -> NAME IGUAL input .)
    PRINT           reduce using rule 24 (variable -> NAME IGUAL input .)
    INPUT           reduce using rule 24 (variable -> NAME IGUAL input .)
    RETURN          reduce using rule 24 (variable -> NAME IGUAL input .)
    FUNCTION        reduce using rule 24 (variable -> NAME IGUAL input .)
    CONST           reduce using rule 24 (variable -> NAME IGUAL input .)
    LET             reduce using rule 24 (variable -> NAME IGUAL input .)
    VAR             reduce using rule 24 (variable -> NAME IGUAL input .)
    OPEN_BRACKET    reduce using rule 24 (variable -> NAME IGUAL input .)
    NEW             reduce using rule 24 (variable -> NAME IGUAL input .)
    WHILE           reduce using rule 24 (variable -> NAME IGUAL input .)
    FOR             reduce using rule 24 (variable -> NAME IGUAL input .)
    OPEN_BRACE      reduce using rule 24 (variable -> NAME IGUAL input .)
    IF              reduce using rule 24 (variable -> NAME IGUAL input .)
    $end            reduce using rule 24 (variable -> NAME IGUAL input .)
    CLOSE_BRACE     reduce using rule 24 (variable -> NAME IGUAL input .)


state 99

    (122) declaration -> NAME IGUAL element . SEMICOLON

    SEMICOLON       shift and go to state 165


state 100

    (57) datatype -> number .
    (120) element -> number .
    (45) operations -> number . operand number
    (47) operations -> number .
    (48) operations -> number . operand NAME operations
    (50) operations -> number . operand NAME
    (53) operations -> number . operand number operand operations
    (63) operand -> . SUMA
    (64) operand -> . RESTA
    (65) operand -> . MULTIPLICACION
    (66) operand -> . DIVISION

  ! reduce/reduce conflict for SEMICOLON resolved using rule 57 (datatype -> number .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 47 (operations -> number .)
    SEMICOLON       reduce using rule 47 (operations -> number .)
    SUMA            shift and go to state 120
    RESTA           shift and go to state 121
    MULTIPLICACION  shift and go to state 122
    DIVISION        shift and go to state 123

  ! SEMICOLON       [ reduce using rule 57 (datatype -> number .) ]
  ! SEMICOLON       [ reduce using rule 120 (element -> number .) ]

    operand                        shift and go to state 119

state 101

    (59) datatype -> STRING .
    (119) element -> STRING .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 59 (datatype -> STRING .)
    SEMICOLON       reduce using rule 59 (datatype -> STRING .)

  ! SEMICOLON       [ reduce using rule 119 (element -> STRING .) ]


state 102

    (109) methodsSet -> NAME POINT ADD . OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 166


state 103

    (110) methodsSet -> NAME POINT DELETE . OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 167


state 104

    (111) methodsSet -> NAME POINT CLEAR . OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (100) mapFunctions -> NAME POINT CLEAR . OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 168


state 105

    (101) mapFunctions -> NAME POINT GET . OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 169


state 106

    (102) mapFunctions -> NAME POINT HAS . OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 170


state 107

    (103) arrayFn -> NAME POINT POP . OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 171


state 108

    (104) arrayFn -> NAME POINT PUSH . OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 172


state 109

    (105) arrayFn -> NAME POINT UNSHIFT . OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 173


state 110

    (73) asigOp -> NAME operadorAsig number . SEMICOLON

    SEMICOLON       shift and go to state 174


state 111

    (134) print -> PRINT OPEN_PARENTHESIS datatype . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 175


state 112

    (135) print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 176


state 113

    (136) input -> INPUT OPEN_PARENTHESIS element . COMMA element CLOSE_PARENTHESIS SEMICOLON
    (137) input -> INPUT OPEN_PARENTHESIS element . CLOSE_PARENTHESIS SEMICOLON

    COMMA           shift and go to state 177
    CLOSE_PARENTHESIS shift and go to state 178


state 114

    (138) input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 179


state 115

    (119) element -> STRING .

    COMMA           reduce using rule 119 (element -> STRING .)
    CLOSE_PARENTHESIS reduce using rule 119 (element -> STRING .)
    IGUALIGUAL      reduce using rule 119 (element -> STRING .)
    DIFERENTE       reduce using rule 119 (element -> STRING .)
    MAYORQUE        reduce using rule 119 (element -> STRING .)
    MAYORIGUALQUE   reduce using rule 119 (element -> STRING .)
    MENORQUE        reduce using rule 119 (element -> STRING .)
    MENORIGUALQUE   reduce using rule 119 (element -> STRING .)
    AND             reduce using rule 119 (element -> STRING .)
    OR              reduce using rule 119 (element -> STRING .)
    CLOSE_BRACKET   reduce using rule 119 (element -> STRING .)
    SEMICOLON       reduce using rule 119 (element -> STRING .)


state 116

    (120) element -> number .

    COMMA           reduce using rule 120 (element -> number .)
    CLOSE_PARENTHESIS reduce using rule 120 (element -> number .)
    IGUALIGUAL      reduce using rule 120 (element -> number .)
    DIFERENTE       reduce using rule 120 (element -> number .)
    MAYORQUE        reduce using rule 120 (element -> number .)
    MAYORIGUALQUE   reduce using rule 120 (element -> number .)
    MENORQUE        reduce using rule 120 (element -> number .)
    MENORIGUALQUE   reduce using rule 120 (element -> number .)
    AND             reduce using rule 120 (element -> number .)
    OR              reduce using rule 120 (element -> number .)
    CLOSE_BRACKET   reduce using rule 120 (element -> number .)
    SEMICOLON       reduce using rule 120 (element -> number .)


state 117

    (121) element -> NAME .

    COMMA           reduce using rule 121 (element -> NAME .)
    CLOSE_PARENTHESIS reduce using rule 121 (element -> NAME .)
    IGUALIGUAL      reduce using rule 121 (element -> NAME .)
    DIFERENTE       reduce using rule 121 (element -> NAME .)
    MAYORQUE        reduce using rule 121 (element -> NAME .)
    MAYORIGUALQUE   reduce using rule 121 (element -> NAME .)
    MENORQUE        reduce using rule 121 (element -> NAME .)
    MENORIGUALQUE   reduce using rule 121 (element -> NAME .)
    AND             reduce using rule 121 (element -> NAME .)
    OR              reduce using rule 121 (element -> NAME .)
    CLOSE_BRACKET   reduce using rule 121 (element -> NAME .)
    SEMICOLON       reduce using rule 121 (element -> NAME .)


state 118

    (133) return -> RETURN datatype SEMICOLON .

    COMMENTS        reduce using rule 133 (return -> RETURN datatype SEMICOLON .)
    LONGCOMMENT     reduce using rule 133 (return -> RETURN datatype SEMICOLON .)
    NAME            reduce using rule 133 (return -> RETURN datatype SEMICOLON .)
    PRINT           reduce using rule 133 (return -> RETURN datatype SEMICOLON .)
    INPUT           reduce using rule 133 (return -> RETURN datatype SEMICOLON .)
    RETURN          reduce using rule 133 (return -> RETURN datatype SEMICOLON .)
    FUNCTION        reduce using rule 133 (return -> RETURN datatype SEMICOLON .)
    CONST           reduce using rule 133 (return -> RETURN datatype SEMICOLON .)
    LET             reduce using rule 133 (return -> RETURN datatype SEMICOLON .)
    VAR             reduce using rule 133 (return -> RETURN datatype SEMICOLON .)
    OPEN_BRACKET    reduce using rule 133 (return -> RETURN datatype SEMICOLON .)
    NEW             reduce using rule 133 (return -> RETURN datatype SEMICOLON .)
    WHILE           reduce using rule 133 (return -> RETURN datatype SEMICOLON .)
    FOR             reduce using rule 133 (return -> RETURN datatype SEMICOLON .)
    OPEN_BRACE      reduce using rule 133 (return -> RETURN datatype SEMICOLON .)
    IF              reduce using rule 133 (return -> RETURN datatype SEMICOLON .)
    $end            reduce using rule 133 (return -> RETURN datatype SEMICOLON .)
    CLOSE_BRACE     reduce using rule 133 (return -> RETURN datatype SEMICOLON .)


state 119

    (45) operations -> number operand . number
    (48) operations -> number operand . NAME operations
    (50) operations -> number operand . NAME
    (53) operations -> number operand . number operand operations
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    NAME            shift and go to state 181
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    number                         shift and go to state 180

state 120

    (63) operand -> SUMA .

    NAME            reduce using rule 63 (operand -> SUMA .)
    INTEGER         reduce using rule 63 (operand -> SUMA .)
    FLOAT           reduce using rule 63 (operand -> SUMA .)
    OPEN_PARENTHESIS reduce using rule 63 (operand -> SUMA .)


state 121

    (64) operand -> RESTA .

    NAME            reduce using rule 64 (operand -> RESTA .)
    INTEGER         reduce using rule 64 (operand -> RESTA .)
    FLOAT           reduce using rule 64 (operand -> RESTA .)
    OPEN_PARENTHESIS reduce using rule 64 (operand -> RESTA .)


state 122

    (65) operand -> MULTIPLICACION .

    NAME            reduce using rule 65 (operand -> MULTIPLICACION .)
    INTEGER         reduce using rule 65 (operand -> MULTIPLICACION .)
    FLOAT           reduce using rule 65 (operand -> MULTIPLICACION .)
    OPEN_PARENTHESIS reduce using rule 65 (operand -> MULTIPLICACION .)


state 123

    (66) operand -> DIVISION .

    NAME            reduce using rule 66 (operand -> DIVISION .)
    INTEGER         reduce using rule 66 (operand -> DIVISION .)
    FLOAT           reduce using rule 66 (operand -> DIVISION .)
    OPEN_PARENTHESIS reduce using rule 66 (operand -> DIVISION .)


state 124

    (49) operations -> NAME operand . number operations
    (51) operations -> NAME operand . number
    (52) operations -> NAME operand . NAME operations
    (55) operations -> NAME operand . NAME
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    NAME            shift and go to state 182
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    number                         shift and go to state 183

state 125

    (54) operations -> NAME SUMA . SUMA
    (63) operand -> SUMA .

    SUMA            shift and go to state 184
    NAME            reduce using rule 63 (operand -> SUMA .)
    INTEGER         reduce using rule 63 (operand -> SUMA .)
    FLOAT           reduce using rule 63 (operand -> SUMA .)
    OPEN_PARENTHESIS reduce using rule 63 (operand -> SUMA .)


state 126

    (56) operations -> NAME RESTA . RESTA
    (64) operand -> RESTA .

    RESTA           shift and go to state 185
    NAME            reduce using rule 64 (operand -> RESTA .)
    INTEGER         reduce using rule 64 (operand -> RESTA .)
    FLOAT           reduce using rule 64 (operand -> RESTA .)
    OPEN_PARENTHESIS reduce using rule 64 (operand -> RESTA .)


state 127

    (19) number -> OPEN_PARENTHESIS RESTA . INTEGER CLOSE_PARENTHESIS
    (20) number -> OPEN_PARENTHESIS RESTA . FLOAT CLOSE_PARENTHESIS

    INTEGER         shift and go to state 186
    FLOAT           shift and go to state 187


state 128

    (129) function -> FUNCTION NAME OPEN_PARENTHESIS . CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (130) function -> FUNCTION NAME OPEN_PARENTHESIS . parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (131) parameter -> . datatype
    (132) parameter -> . datatype COMMA parameter
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    CLOSE_PARENTHESIS shift and go to state 188
    NAME            shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    OPEN_BRACE      shift and go to state 29

    parameter                      shift and go to state 189
    datatype                       shift and go to state 190
    number                         shift and go to state 56
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 129

    (91) escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .

    COMMENTS        reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    NAME            reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    PRINT           reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    INPUT           reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    RETURN          reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    FUNCTION        reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    CONST           reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    LET             reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    VAR             reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    NEW             reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    WHILE           reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    FOR             reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    IF              reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    $end            reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    SEMICOLON       reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    COLON           reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    COMMA           reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    CLOSE_BRACKET   reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    CLOSE_PARENTHESIS reduce using rule 91 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)


state 130

    (95) generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .

    COMMENTS        reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    NAME            reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    PRINT           reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    INPUT           reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    RETURN          reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    FUNCTION        reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    CONST           reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    LET             reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    VAR             reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    NEW             reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    WHILE           reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    FOR             reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    IF              reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    $end            reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    SEMICOLON       reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    COLON           reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    COMMA           reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    CLOSE_BRACKET   reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    CLOSE_PARENTHESIS reduce using rule 95 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)


state 131

    (92) claveValor -> clave COLON . datatype
    (93) claveValor -> clave COLON . datatype COMMA claveValor
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    OPEN_BRACE      shift and go to state 29

    datatype                       shift and go to state 191
    number                         shift and go to state 56
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 132

    (97) tuplas -> tupla COMMA . tuplas
    (96) tuplas -> . tupla
    (97) tuplas -> . tupla COMMA tuplas
    (98) tupla -> . OPEN_BRACKET datatype CLOSE_BRACKET SEMICOLON
    (99) tupla -> . OPEN_BRACKET datatype COMMA datatype CLOSE_BRACKET SEMICOLON

    OPEN_BRACKET    shift and go to state 193

    tupla                          shift and go to state 70
    tuplas                         shift and go to state 192

state 133

    (98) tupla -> OPEN_BRACKET datatype . CLOSE_BRACKET SEMICOLON
    (99) tupla -> OPEN_BRACKET datatype . COMMA datatype CLOSE_BRACKET SEMICOLON
    (118) item -> datatype .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for CLOSE_BRACKET resolved as shift
    CLOSE_BRACKET   shift and go to state 194
    COMMA           shift and go to state 195

  ! COMMA           [ reduce using rule 118 (item -> datatype .) ]
  ! CLOSE_BRACKET   [ reduce using rule 118 (item -> datatype .) ]


state 134

    (57) datatype -> number .
    (45) operations -> number . operand number
    (47) operations -> number .
    (48) operations -> number . operand NAME operations
    (50) operations -> number . operand NAME
    (53) operations -> number . operand number operand operations
    (114) item -> number .
    (120) element -> number .
    (63) operand -> . SUMA
    (64) operand -> . RESTA
    (65) operand -> . MULTIPLICACION
    (66) operand -> . DIVISION

  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 47 (operations -> number .)
  ! reduce/reduce conflict for COMMA resolved using rule 47 (operations -> number .)
  ! reduce/reduce conflict for COMMA resolved using rule 47 (operations -> number .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 47 (operations -> number .)
    CLOSE_BRACKET   reduce using rule 47 (operations -> number .)
    COMMA           reduce using rule 47 (operations -> number .)
    IGUALIGUAL      reduce using rule 120 (element -> number .)
    DIFERENTE       reduce using rule 120 (element -> number .)
    MAYORQUE        reduce using rule 120 (element -> number .)
    MAYORIGUALQUE   reduce using rule 120 (element -> number .)
    MENORQUE        reduce using rule 120 (element -> number .)
    MENORIGUALQUE   reduce using rule 120 (element -> number .)
    SUMA            shift and go to state 120
    RESTA           shift and go to state 121
    MULTIPLICACION  shift and go to state 122
    DIVISION        shift and go to state 123

  ! CLOSE_BRACKET   [ reduce using rule 57 (datatype -> number .) ]
  ! COMMA           [ reduce using rule 57 (datatype -> number .) ]
  ! COMMA           [ reduce using rule 114 (item -> number .) ]
  ! CLOSE_BRACKET   [ reduce using rule 114 (item -> number .) ]

    operand                        shift and go to state 119

state 135

    (58) datatype -> NAME .
    (46) operations -> NAME .
    (49) operations -> NAME . operand number operations
    (51) operations -> NAME . operand number
    (52) operations -> NAME . operand NAME operations
    (54) operations -> NAME . SUMA SUMA
    (55) operations -> NAME . operand NAME
    (56) operations -> NAME . RESTA RESTA
    (117) item -> NAME .
    (121) element -> NAME .
    (63) operand -> . SUMA
    (64) operand -> . RESTA
    (65) operand -> . MULTIPLICACION
    (66) operand -> . DIVISION

  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 46 (operations -> NAME .)
  ! reduce/reduce conflict for COMMA resolved using rule 46 (operations -> NAME .)
  ! reduce/reduce conflict for COMMA resolved using rule 46 (operations -> NAME .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 46 (operations -> NAME .)
    CLOSE_BRACKET   reduce using rule 46 (operations -> NAME .)
    COMMA           reduce using rule 46 (operations -> NAME .)
    SUMA            shift and go to state 125
    RESTA           shift and go to state 126
    IGUALIGUAL      reduce using rule 121 (element -> NAME .)
    DIFERENTE       reduce using rule 121 (element -> NAME .)
    MAYORQUE        reduce using rule 121 (element -> NAME .)
    MAYORIGUALQUE   reduce using rule 121 (element -> NAME .)
    MENORQUE        reduce using rule 121 (element -> NAME .)
    MENORIGUALQUE   reduce using rule 121 (element -> NAME .)
    MULTIPLICACION  shift and go to state 122
    DIVISION        shift and go to state 123

  ! CLOSE_BRACKET   [ reduce using rule 58 (datatype -> NAME .) ]
  ! COMMA           [ reduce using rule 58 (datatype -> NAME .) ]
  ! COMMA           [ reduce using rule 117 (item -> NAME .) ]
  ! CLOSE_BRACKET   [ reduce using rule 117 (item -> NAME .) ]

    operand                        shift and go to state 124

state 136

    (59) datatype -> STRING .
    (115) item -> STRING .
    (119) element -> STRING .

  ! reduce/reduce conflict for COMMA resolved using rule 59 (datatype -> STRING .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 59 (datatype -> STRING .)
    CLOSE_BRACKET   reduce using rule 59 (datatype -> STRING .)
    COMMA           reduce using rule 59 (datatype -> STRING .)
    IGUALIGUAL      reduce using rule 119 (element -> STRING .)
    DIFERENTE       reduce using rule 119 (element -> STRING .)
    MAYORQUE        reduce using rule 119 (element -> STRING .)
    MAYORIGUALQUE   reduce using rule 119 (element -> STRING .)
    MENORQUE        reduce using rule 119 (element -> STRING .)
    MENORIGUALQUE   reduce using rule 119 (element -> STRING .)

  ! COMMA           [ reduce using rule 115 (item -> STRING .) ]
  ! CLOSE_BRACKET   [ reduce using rule 115 (item -> STRING .) ]


state 137

    (85) array -> OPEN_BRACKET items CLOSE_BRACKET .

    COMMENTS        reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    LONGCOMMENT     reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    NAME            reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    PRINT           reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    INPUT           reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    RETURN          reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    FUNCTION        reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    CONST           reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    LET             reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    VAR             reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    OPEN_BRACKET    reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    NEW             reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    WHILE           reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    FOR             reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    OPEN_BRACE      reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    IF              reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    $end            reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    CLOSE_BRACE     reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    SEMICOLON       reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    COLON           reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    COMMA           reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 85 (array -> OPEN_BRACKET items CLOSE_BRACKET .)


state 138

    (113) items -> item COMMA . items
    (112) items -> . item
    (113) items -> . item COMMA items
    (114) item -> . number
    (115) item -> . STRING
    (116) item -> . expBoolean
    (117) item -> . NAME
    (118) item -> . datatype
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (125) expBoolean -> . controlArg
    (126) expBoolean -> . bool
    (127) expBoolean -> . NOT expBoolean
    (128) expBoolean -> . expBoolean logicalOperator expBoolean
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (41) controlArg -> . element clause element
    (74) bool -> . TRUE
    (75) bool -> . FALSE
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    STRING          shift and go to state 75
    NAME            shift and go to state 77
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    NOT             shift and go to state 81
    CHAR            shift and go to state 59
    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    OPEN_BRACE      shift and go to state 29

    item                           shift and go to state 73
    items                          shift and go to state 196
    number                         shift and go to state 74
    expBoolean                     shift and go to state 76
    datatype                       shift and go to state 78
    controlArg                     shift and go to state 79
    bool                           shift and go to state 80
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    element                        shift and go to state 82
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 139

    (128) expBoolean -> expBoolean logicalOperator . expBoolean
    (125) expBoolean -> . controlArg
    (126) expBoolean -> . bool
    (127) expBoolean -> . NOT expBoolean
    (128) expBoolean -> . expBoolean logicalOperator expBoolean
    (41) controlArg -> . element clause element
    (74) bool -> . TRUE
    (75) bool -> . FALSE
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    NOT             shift and go to state 81
    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    STRING          shift and go to state 115
    NAME            shift and go to state 117
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    expBoolean                     shift and go to state 197
    controlArg                     shift and go to state 79
    bool                           shift and go to state 80
    element                        shift and go to state 82
    number                         shift and go to state 116

state 140

    (123) logicalOperator -> AND .

    NOT             reduce using rule 123 (logicalOperator -> AND .)
    TRUE            reduce using rule 123 (logicalOperator -> AND .)
    FALSE           reduce using rule 123 (logicalOperator -> AND .)
    STRING          reduce using rule 123 (logicalOperator -> AND .)
    NAME            reduce using rule 123 (logicalOperator -> AND .)
    INTEGER         reduce using rule 123 (logicalOperator -> AND .)
    FLOAT           reduce using rule 123 (logicalOperator -> AND .)
    OPEN_PARENTHESIS reduce using rule 123 (logicalOperator -> AND .)


state 141

    (124) logicalOperator -> OR .

    NOT             reduce using rule 124 (logicalOperator -> OR .)
    TRUE            reduce using rule 124 (logicalOperator -> OR .)
    FALSE           reduce using rule 124 (logicalOperator -> OR .)
    STRING          reduce using rule 124 (logicalOperator -> OR .)
    NAME            reduce using rule 124 (logicalOperator -> OR .)
    INTEGER         reduce using rule 124 (logicalOperator -> OR .)
    FLOAT           reduce using rule 124 (logicalOperator -> OR .)
    OPEN_PARENTHESIS reduce using rule 124 (logicalOperator -> OR .)


state 142

    (127) expBoolean -> NOT expBoolean .
    (128) expBoolean -> expBoolean . logicalOperator expBoolean
    (123) logicalOperator -> . AND
    (124) logicalOperator -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    COMMA           reduce using rule 127 (expBoolean -> NOT expBoolean .)
    CLOSE_BRACKET   reduce using rule 127 (expBoolean -> NOT expBoolean .)
    CLOSE_PARENTHESIS reduce using rule 127 (expBoolean -> NOT expBoolean .)
    SEMICOLON       reduce using rule 127 (expBoolean -> NOT expBoolean .)
    AND             shift and go to state 140
    OR              shift and go to state 141

  ! AND             [ reduce using rule 127 (expBoolean -> NOT expBoolean .) ]
  ! OR              [ reduce using rule 127 (expBoolean -> NOT expBoolean .) ]

    logicalOperator                shift and go to state 139

state 143

    (41) controlArg -> element clause . element
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    STRING          shift and go to state 115
    NAME            shift and go to state 117
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    element                        shift and go to state 198
    number                         shift and go to state 116

state 144

    (79) clause -> IGUALIGUAL .

    STRING          reduce using rule 79 (clause -> IGUALIGUAL .)
    NAME            reduce using rule 79 (clause -> IGUALIGUAL .)
    INTEGER         reduce using rule 79 (clause -> IGUALIGUAL .)
    FLOAT           reduce using rule 79 (clause -> IGUALIGUAL .)
    OPEN_PARENTHESIS reduce using rule 79 (clause -> IGUALIGUAL .)


state 145

    (80) clause -> DIFERENTE .

    STRING          reduce using rule 80 (clause -> DIFERENTE .)
    NAME            reduce using rule 80 (clause -> DIFERENTE .)
    INTEGER         reduce using rule 80 (clause -> DIFERENTE .)
    FLOAT           reduce using rule 80 (clause -> DIFERENTE .)
    OPEN_PARENTHESIS reduce using rule 80 (clause -> DIFERENTE .)


state 146

    (81) clause -> MAYORQUE .

    STRING          reduce using rule 81 (clause -> MAYORQUE .)
    NAME            reduce using rule 81 (clause -> MAYORQUE .)
    INTEGER         reduce using rule 81 (clause -> MAYORQUE .)
    FLOAT           reduce using rule 81 (clause -> MAYORQUE .)
    OPEN_PARENTHESIS reduce using rule 81 (clause -> MAYORQUE .)


state 147

    (82) clause -> MAYORIGUALQUE .

    STRING          reduce using rule 82 (clause -> MAYORIGUALQUE .)
    NAME            reduce using rule 82 (clause -> MAYORIGUALQUE .)
    INTEGER         reduce using rule 82 (clause -> MAYORIGUALQUE .)
    FLOAT           reduce using rule 82 (clause -> MAYORIGUALQUE .)
    OPEN_PARENTHESIS reduce using rule 82 (clause -> MAYORIGUALQUE .)


state 148

    (83) clause -> MENORQUE .

    STRING          reduce using rule 83 (clause -> MENORQUE .)
    NAME            reduce using rule 83 (clause -> MENORQUE .)
    INTEGER         reduce using rule 83 (clause -> MENORQUE .)
    FLOAT           reduce using rule 83 (clause -> MENORQUE .)
    OPEN_PARENTHESIS reduce using rule 83 (clause -> MENORQUE .)


state 149

    (84) clause -> MENORIGUALQUE .

    STRING          reduce using rule 84 (clause -> MENORIGUALQUE .)
    NAME            reduce using rule 84 (clause -> MENORIGUALQUE .)
    INTEGER         reduce using rule 84 (clause -> MENORIGUALQUE .)
    FLOAT           reduce using rule 84 (clause -> MENORIGUALQUE .)
    OPEN_PARENTHESIS reduce using rule 84 (clause -> MENORIGUALQUE .)


state 150

    (86) array -> NEW ARRAY OPEN_PARENTHESIS . items CLOSE_PARENTHESIS
    (112) items -> . item
    (113) items -> . item COMMA items
    (114) item -> . number
    (115) item -> . STRING
    (116) item -> . expBoolean
    (117) item -> . NAME
    (118) item -> . datatype
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (125) expBoolean -> . controlArg
    (126) expBoolean -> . bool
    (127) expBoolean -> . NOT expBoolean
    (128) expBoolean -> . expBoolean logicalOperator expBoolean
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (41) controlArg -> . element clause element
    (74) bool -> . TRUE
    (75) bool -> . FALSE
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    STRING          shift and go to state 75
    NAME            shift and go to state 77
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    NOT             shift and go to state 81
    CHAR            shift and go to state 59
    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    OPEN_BRACE      shift and go to state 29

    items                          shift and go to state 199
    item                           shift and go to state 73
    number                         shift and go to state 74
    expBoolean                     shift and go to state 76
    datatype                       shift and go to state 78
    controlArg                     shift and go to state 79
    bool                           shift and go to state 80
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    element                        shift and go to state 82
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 151

    (106) set -> NEW SET OPEN_PARENTHESIS . CLOSE_PARENTHESIS
    (107) set -> NEW SET OPEN_PARENTHESIS . OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> NEW SET OPEN_PARENTHESIS . element CLOSE_PARENTHESIS
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 200
    OPEN_BRACKET    shift and go to state 201
    STRING          shift and go to state 115
    NAME            shift and go to state 117
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    element                        shift and go to state 202
    number                         shift and go to state 116

state 152

    (90) iniciarMap -> NEW MAP OPEN_PARENTHESIS . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 203


state 153

    (31) while -> WHILE OPEN_PARENTHESIS controlArg . CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    CLOSE_PARENTHESIS shift and go to state 204


state 154

    (32) while -> WHILE OPEN_PARENTHESIS bool . CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    CLOSE_PARENTHESIS shift and go to state 205


state 155

    (42) for -> FOR OPEN_PARENTHESIS inicialization . SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    SEMICOLON       shift and go to state 206


state 156

    (43) inicialization -> type . NAME IGUAL number

    NAME            shift and go to state 207


state 157

    (44) inicialization -> NAME . IGUAL number

    IGUAL           shift and go to state 208


state 158

    (35) if -> soloIf elseIf else .

    COMMENTS        reduce using rule 35 (if -> soloIf elseIf else .)
    LONGCOMMENT     reduce using rule 35 (if -> soloIf elseIf else .)
    NAME            reduce using rule 35 (if -> soloIf elseIf else .)
    PRINT           reduce using rule 35 (if -> soloIf elseIf else .)
    INPUT           reduce using rule 35 (if -> soloIf elseIf else .)
    RETURN          reduce using rule 35 (if -> soloIf elseIf else .)
    FUNCTION        reduce using rule 35 (if -> soloIf elseIf else .)
    CONST           reduce using rule 35 (if -> soloIf elseIf else .)
    LET             reduce using rule 35 (if -> soloIf elseIf else .)
    VAR             reduce using rule 35 (if -> soloIf elseIf else .)
    OPEN_BRACKET    reduce using rule 35 (if -> soloIf elseIf else .)
    NEW             reduce using rule 35 (if -> soloIf elseIf else .)
    WHILE           reduce using rule 35 (if -> soloIf elseIf else .)
    FOR             reduce using rule 35 (if -> soloIf elseIf else .)
    OPEN_BRACE      reduce using rule 35 (if -> soloIf elseIf else .)
    IF              reduce using rule 35 (if -> soloIf elseIf else .)
    $end            reduce using rule 35 (if -> soloIf elseIf else .)
    CLOSE_BRACE     reduce using rule 35 (if -> soloIf elseIf else .)


state 159

    (38) elseIf -> ELSEIF OPEN_PARENTHESIS . controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (39) elseIf -> ELSEIF OPEN_PARENTHESIS . controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf
    (41) controlArg -> . element clause element
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    STRING          shift and go to state 115
    NAME            shift and go to state 117
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    controlArg                     shift and go to state 209
    element                        shift and go to state 82
    number                         shift and go to state 116

state 160

    (40) else -> ELSE OPEN_BRACE . expression CLOSE_BRACE
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . input
    (12) semiExpression -> . return
    (13) semiExpression -> . function
    (14) semiExpression -> . COMMENTS
    (15) semiExpression -> . LONGCOMMENT
    (16) semiExpression -> . asigOp
    (21) variable -> . type NAME IGUAL datatype SEMICOLON
    (22) variable -> . NAME IGUAL datatype SEMICOLON
    (23) variable -> . type NAME IGUAL input
    (24) variable -> . NAME IGUAL input
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (25) controlStruct -> . while
    (26) controlStruct -> . for
    (27) controlStruct -> . if
    (109) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (110) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (111) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (100) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (102) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (103) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (104) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (105) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (122) declaration -> . NAME IGUAL element SEMICOLON
    (134) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (135) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (136) input -> . INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON
    (137) input -> . INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (138) input -> . INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (133) return -> . RETURN datatype SEMICOLON
    (129) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (130) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (73) asigOp -> . NAME operadorAsig number SEMICOLON
    (76) type -> . CONST
    (77) type -> . LET
    (78) type -> . VAR
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (31) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (32) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (42) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (33) if -> . soloIf
    (34) if -> . soloIf elseIf
    (35) if -> . soloIf elseIf else
    (36) if -> . soloIf else
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (37) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 14
    LONGCOMMENT     shift and go to state 15
    NAME            shift and go to state 18
    PRINT           shift and go to state 25
    INPUT           shift and go to state 26
    RETURN          shift and go to state 27
    FUNCTION        shift and go to state 28
    CONST           shift and go to state 30
    LET             shift and go to state 31
    VAR             shift and go to state 32
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    WHILE           shift and go to state 38
    FOR             shift and go to state 39
    OPEN_BRACE      shift and go to state 29
    IF              shift and go to state 41

    expression                     shift and go to state 210
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    input                          shift and go to state 11
    return                         shift and go to state 12
    function                       shift and go to state 13
    asigOp                         shift and go to state 16
    type                           shift and go to state 17
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    while                          shift and go to state 22
    for                            shift and go to state 23
    if                             shift and go to state 24
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37
    soloIf                         shift and go to state 40

state 161

    (37) soloIf -> IF OPEN_PARENTHESIS controlArg . CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    CLOSE_PARENTHESIS shift and go to state 211


state 162

    (21) variable -> type NAME IGUAL datatype . SEMICOLON

    SEMICOLON       shift and go to state 212


state 163

    (23) variable -> type NAME IGUAL input .

    COMMENTS        reduce using rule 23 (variable -> type NAME IGUAL input .)
    LONGCOMMENT     reduce using rule 23 (variable -> type NAME IGUAL input .)
    NAME            reduce using rule 23 (variable -> type NAME IGUAL input .)
    PRINT           reduce using rule 23 (variable -> type NAME IGUAL input .)
    INPUT           reduce using rule 23 (variable -> type NAME IGUAL input .)
    RETURN          reduce using rule 23 (variable -> type NAME IGUAL input .)
    FUNCTION        reduce using rule 23 (variable -> type NAME IGUAL input .)
    CONST           reduce using rule 23 (variable -> type NAME IGUAL input .)
    LET             reduce using rule 23 (variable -> type NAME IGUAL input .)
    VAR             reduce using rule 23 (variable -> type NAME IGUAL input .)
    OPEN_BRACKET    reduce using rule 23 (variable -> type NAME IGUAL input .)
    NEW             reduce using rule 23 (variable -> type NAME IGUAL input .)
    WHILE           reduce using rule 23 (variable -> type NAME IGUAL input .)
    FOR             reduce using rule 23 (variable -> type NAME IGUAL input .)
    OPEN_BRACE      reduce using rule 23 (variable -> type NAME IGUAL input .)
    IF              reduce using rule 23 (variable -> type NAME IGUAL input .)
    $end            reduce using rule 23 (variable -> type NAME IGUAL input .)
    CLOSE_BRACE     reduce using rule 23 (variable -> type NAME IGUAL input .)


state 164

    (22) variable -> NAME IGUAL datatype SEMICOLON .

    COMMENTS        reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)
    LONGCOMMENT     reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)
    NAME            reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)
    PRINT           reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)
    INPUT           reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)
    RETURN          reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)
    FUNCTION        reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)
    CONST           reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)
    LET             reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)
    VAR             reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)
    OPEN_BRACKET    reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)
    NEW             reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)
    WHILE           reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)
    FOR             reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)
    OPEN_BRACE      reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)
    IF              reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)
    $end            reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)
    CLOSE_BRACE     reduce using rule 22 (variable -> NAME IGUAL datatype SEMICOLON .)


state 165

    (122) declaration -> NAME IGUAL element SEMICOLON .

    COMMENTS        reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)
    LONGCOMMENT     reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)
    NAME            reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)
    PRINT           reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)
    INPUT           reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)
    RETURN          reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)
    FUNCTION        reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)
    CONST           reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)
    LET             reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)
    VAR             reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)
    OPEN_BRACKET    reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)
    NEW             reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)
    WHILE           reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)
    FOR             reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)
    OPEN_BRACE      reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)
    IF              reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)
    $end            reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)
    CLOSE_BRACE     reduce using rule 122 (declaration -> NAME IGUAL element SEMICOLON .)


state 166

    (109) methodsSet -> NAME POINT ADD OPEN_PARENTHESIS . element CLOSE_PARENTHESIS SEMICOLON
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    STRING          shift and go to state 115
    NAME            shift and go to state 117
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    element                        shift and go to state 213
    number                         shift and go to state 116

state 167

    (110) methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS . element CLOSE_PARENTHESIS SEMICOLON
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    STRING          shift and go to state 115
    NAME            shift and go to state 117
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    element                        shift and go to state 214
    number                         shift and go to state 116

state 168

    (111) methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS . CLOSE_PARENTHESIS SEMICOLON
    (100) mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 215


state 169

    (101) mapFunctions -> NAME POINT GET OPEN_PARENTHESIS . clave CLOSE_PARENTHESIS SEMICOLON
    (94) clave -> . datatype
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    OPEN_BRACE      shift and go to state 29

    clave                          shift and go to state 216
    datatype                       shift and go to state 69
    number                         shift and go to state 56
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 170

    (102) mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS . clave CLOSE_PARENTHESIS SEMICOLON
    (94) clave -> . datatype
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    OPEN_BRACE      shift and go to state 29

    clave                          shift and go to state 217
    datatype                       shift and go to state 69
    number                         shift and go to state 56
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 171

    (103) arrayFn -> NAME POINT POP OPEN_PARENTHESIS . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 218


state 172

    (104) arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS . element CLOSE_PARENTHESIS SEMICOLON
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    STRING          shift and go to state 115
    NAME            shift and go to state 117
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    element                        shift and go to state 219
    number                         shift and go to state 116

state 173

    (105) arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS . element CLOSE_PARENTHESIS SEMICOLON
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    STRING          shift and go to state 115
    NAME            shift and go to state 117
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    element                        shift and go to state 220
    number                         shift and go to state 116

state 174

    (73) asigOp -> NAME operadorAsig number SEMICOLON .

    COMMENTS        reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)
    LONGCOMMENT     reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)
    NAME            reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)
    PRINT           reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)
    INPUT           reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)
    RETURN          reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)
    FUNCTION        reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)
    CONST           reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)
    LET             reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)
    VAR             reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)
    OPEN_BRACKET    reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)
    NEW             reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)
    WHILE           reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)
    FOR             reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)
    OPEN_BRACE      reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)
    IF              reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)
    $end            reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)
    CLOSE_BRACE     reduce using rule 73 (asigOp -> NAME operadorAsig number SEMICOLON .)


state 175

    (134) print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 221


state 176

    (135) print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    INPUT           reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 135 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)


state 177

    (136) input -> INPUT OPEN_PARENTHESIS element COMMA . element CLOSE_PARENTHESIS SEMICOLON
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    STRING          shift and go to state 115
    NAME            shift and go to state 117
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    element                        shift and go to state 222
    number                         shift and go to state 116

state 178

    (137) input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 223


state 179

    (138) input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    INPUT           reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 138 (input -> INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)


state 180

    (45) operations -> number operand number .
    (53) operations -> number operand number . operand operations
    (63) operand -> . SUMA
    (64) operand -> . RESTA
    (65) operand -> . MULTIPLICACION
    (66) operand -> . DIVISION

    SEMICOLON       reduce using rule 45 (operations -> number operand number .)
    COLON           reduce using rule 45 (operations -> number operand number .)
    COMMA           reduce using rule 45 (operations -> number operand number .)
    CLOSE_BRACKET   reduce using rule 45 (operations -> number operand number .)
    CLOSE_PARENTHESIS reduce using rule 45 (operations -> number operand number .)
    CLOSE_BRACE     reduce using rule 45 (operations -> number operand number .)
    SUMA            shift and go to state 120
    RESTA           shift and go to state 121
    MULTIPLICACION  shift and go to state 122
    DIVISION        shift and go to state 123

    operand                        shift and go to state 224

state 181

    (48) operations -> number operand NAME . operations
    (50) operations -> number operand NAME .
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    SEMICOLON       reduce using rule 50 (operations -> number operand NAME .)
    COLON           reduce using rule 50 (operations -> number operand NAME .)
    COMMA           reduce using rule 50 (operations -> number operand NAME .)
    CLOSE_BRACKET   reduce using rule 50 (operations -> number operand NAME .)
    CLOSE_PARENTHESIS reduce using rule 50 (operations -> number operand NAME .)
    CLOSE_BRACE     reduce using rule 50 (operations -> number operand NAME .)
    NAME            shift and go to state 226
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    number                         shift and go to state 225
    operations                     shift and go to state 227

state 182

    (52) operations -> NAME operand NAME . operations
    (55) operations -> NAME operand NAME .
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    SEMICOLON       reduce using rule 55 (operations -> NAME operand NAME .)
    COLON           reduce using rule 55 (operations -> NAME operand NAME .)
    COMMA           reduce using rule 55 (operations -> NAME operand NAME .)
    CLOSE_BRACKET   reduce using rule 55 (operations -> NAME operand NAME .)
    CLOSE_PARENTHESIS reduce using rule 55 (operations -> NAME operand NAME .)
    CLOSE_BRACE     reduce using rule 55 (operations -> NAME operand NAME .)
    NAME            shift and go to state 226
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    operations                     shift and go to state 228
    number                         shift and go to state 225

state 183

    (49) operations -> NAME operand number . operations
    (51) operations -> NAME operand number .
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    SEMICOLON       reduce using rule 51 (operations -> NAME operand number .)
    COLON           reduce using rule 51 (operations -> NAME operand number .)
    COMMA           reduce using rule 51 (operations -> NAME operand number .)
    CLOSE_BRACKET   reduce using rule 51 (operations -> NAME operand number .)
    CLOSE_PARENTHESIS reduce using rule 51 (operations -> NAME operand number .)
    CLOSE_BRACE     reduce using rule 51 (operations -> NAME operand number .)
    NAME            shift and go to state 226
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    number                         shift and go to state 225
    operations                     shift and go to state 229

state 184

    (54) operations -> NAME SUMA SUMA .

    SEMICOLON       reduce using rule 54 (operations -> NAME SUMA SUMA .)
    COLON           reduce using rule 54 (operations -> NAME SUMA SUMA .)
    COMMA           reduce using rule 54 (operations -> NAME SUMA SUMA .)
    CLOSE_BRACKET   reduce using rule 54 (operations -> NAME SUMA SUMA .)
    CLOSE_PARENTHESIS reduce using rule 54 (operations -> NAME SUMA SUMA .)
    CLOSE_BRACE     reduce using rule 54 (operations -> NAME SUMA SUMA .)


state 185

    (56) operations -> NAME RESTA RESTA .

    SEMICOLON       reduce using rule 56 (operations -> NAME RESTA RESTA .)
    COLON           reduce using rule 56 (operations -> NAME RESTA RESTA .)
    COMMA           reduce using rule 56 (operations -> NAME RESTA RESTA .)
    CLOSE_BRACKET   reduce using rule 56 (operations -> NAME RESTA RESTA .)
    CLOSE_PARENTHESIS reduce using rule 56 (operations -> NAME RESTA RESTA .)
    CLOSE_BRACE     reduce using rule 56 (operations -> NAME RESTA RESTA .)


state 186

    (19) number -> OPEN_PARENTHESIS RESTA INTEGER . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 230


state 187

    (20) number -> OPEN_PARENTHESIS RESTA FLOAT . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 231


state 188

    (129) function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS . OPEN_BRACE expression CLOSE_BRACE

    OPEN_BRACE      shift and go to state 232


state 189

    (130) function -> FUNCTION NAME OPEN_PARENTHESIS parameter . CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    CLOSE_PARENTHESIS shift and go to state 233


state 190

    (131) parameter -> datatype .
    (132) parameter -> datatype . COMMA parameter

    CLOSE_PARENTHESIS reduce using rule 131 (parameter -> datatype .)
    COMMA           shift and go to state 234


state 191

    (92) claveValor -> clave COLON datatype .
    (93) claveValor -> clave COLON datatype . COMMA claveValor

    CLOSE_BRACE     reduce using rule 92 (claveValor -> clave COLON datatype .)
    COMMA           shift and go to state 235


state 192

    (97) tuplas -> tupla COMMA tuplas .

    CLOSE_BRACE     reduce using rule 97 (tuplas -> tupla COMMA tuplas .)


state 193

    (98) tupla -> OPEN_BRACKET . datatype CLOSE_BRACKET SEMICOLON
    (99) tupla -> OPEN_BRACKET . datatype COMMA datatype CLOSE_BRACKET SEMICOLON
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    OPEN_BRACE      shift and go to state 29

    datatype                       shift and go to state 236
    number                         shift and go to state 56
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 194

    (98) tupla -> OPEN_BRACKET datatype CLOSE_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 237


state 195

    (99) tupla -> OPEN_BRACKET datatype COMMA . datatype CLOSE_BRACKET SEMICOLON
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    OPEN_BRACE      shift and go to state 29

    datatype                       shift and go to state 238
    number                         shift and go to state 56
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 196

    (113) items -> item COMMA items .

    CLOSE_BRACKET   reduce using rule 113 (items -> item COMMA items .)
    CLOSE_PARENTHESIS reduce using rule 113 (items -> item COMMA items .)


state 197

    (128) expBoolean -> expBoolean logicalOperator expBoolean .
    (128) expBoolean -> expBoolean . logicalOperator expBoolean
    (123) logicalOperator -> . AND
    (124) logicalOperator -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    COMMA           reduce using rule 128 (expBoolean -> expBoolean logicalOperator expBoolean .)
    CLOSE_BRACKET   reduce using rule 128 (expBoolean -> expBoolean logicalOperator expBoolean .)
    CLOSE_PARENTHESIS reduce using rule 128 (expBoolean -> expBoolean logicalOperator expBoolean .)
    SEMICOLON       reduce using rule 128 (expBoolean -> expBoolean logicalOperator expBoolean .)
    AND             shift and go to state 140
    OR              shift and go to state 141

  ! AND             [ reduce using rule 128 (expBoolean -> expBoolean logicalOperator expBoolean .) ]
  ! OR              [ reduce using rule 128 (expBoolean -> expBoolean logicalOperator expBoolean .) ]

    logicalOperator                shift and go to state 139

state 198

    (41) controlArg -> element clause element .

    AND             reduce using rule 41 (controlArg -> element clause element .)
    OR              reduce using rule 41 (controlArg -> element clause element .)
    COMMA           reduce using rule 41 (controlArg -> element clause element .)
    CLOSE_BRACKET   reduce using rule 41 (controlArg -> element clause element .)
    CLOSE_PARENTHESIS reduce using rule 41 (controlArg -> element clause element .)
    SEMICOLON       reduce using rule 41 (controlArg -> element clause element .)


state 199

    (86) array -> NEW ARRAY OPEN_PARENTHESIS items . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 239


state 200

    (106) set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .

    COMMENTS        reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    LONGCOMMENT     reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    NAME            reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    PRINT           reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    INPUT           reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FUNCTION        reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CONST           reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    LET             reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    VAR             reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OPEN_BRACKET    reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    NEW             reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    WHILE           reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FOR             reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OPEN_BRACE      reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    IF              reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    $end            reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_BRACE     reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COLON           reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 106 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)


state 201

    (107) set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET . items CLOSE_BRACKET CLOSE_PARENTHESIS
    (112) items -> . item
    (113) items -> . item COMMA items
    (114) item -> . number
    (115) item -> . STRING
    (116) item -> . expBoolean
    (117) item -> . NAME
    (118) item -> . datatype
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (125) expBoolean -> . controlArg
    (126) expBoolean -> . bool
    (127) expBoolean -> . NOT expBoolean
    (128) expBoolean -> . expBoolean logicalOperator expBoolean
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (41) controlArg -> . element clause element
    (74) bool -> . TRUE
    (75) bool -> . FALSE
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    STRING          shift and go to state 75
    NAME            shift and go to state 77
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    NOT             shift and go to state 81
    CHAR            shift and go to state 59
    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    OPEN_BRACE      shift and go to state 29

    items                          shift and go to state 240
    item                           shift and go to state 73
    number                         shift and go to state 74
    expBoolean                     shift and go to state 76
    datatype                       shift and go to state 78
    controlArg                     shift and go to state 79
    bool                           shift and go to state 80
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    element                        shift and go to state 82
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 202

    (108) set -> NEW SET OPEN_PARENTHESIS element . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 241


state 203

    (90) iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .

    COMMENTS        reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    LONGCOMMENT     reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    NAME            reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    PRINT           reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    INPUT           reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FUNCTION        reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CONST           reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    LET             reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    VAR             reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OPEN_BRACKET    reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    NEW             reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    WHILE           reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FOR             reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OPEN_BRACE      reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    IF              reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    $end            reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_BRACE     reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COLON           reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 90 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)


state 204

    (31) while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS . OPEN_BRACE expression CLOSE_BRACE

    OPEN_BRACE      shift and go to state 242


state 205

    (32) while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS . OPEN_BRACE expression CLOSE_BRACE

    OPEN_BRACE      shift and go to state 243


state 206

    (42) for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON . expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (125) expBoolean -> . controlArg
    (126) expBoolean -> . bool
    (127) expBoolean -> . NOT expBoolean
    (128) expBoolean -> . expBoolean logicalOperator expBoolean
    (41) controlArg -> . element clause element
    (74) bool -> . TRUE
    (75) bool -> . FALSE
    (119) element -> . STRING
    (120) element -> . number
    (121) element -> . NAME
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    NOT             shift and go to state 81
    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    STRING          shift and go to state 115
    NAME            shift and go to state 117
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    expBoolean                     shift and go to state 244
    controlArg                     shift and go to state 79
    bool                           shift and go to state 80
    element                        shift and go to state 82
    number                         shift and go to state 116

state 207

    (43) inicialization -> type NAME . IGUAL number

    IGUAL           shift and go to state 245


state 208

    (44) inicialization -> NAME IGUAL . number
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    number                         shift and go to state 246

state 209

    (38) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg . CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (39) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg . CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf

    CLOSE_PARENTHESIS shift and go to state 247


state 210

    (40) else -> ELSE OPEN_BRACE expression . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 248


state 211

    (37) soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS . OPEN_BRACE expression CLOSE_BRACE

    OPEN_BRACE      shift and go to state 249


state 212

    (21) variable -> type NAME IGUAL datatype SEMICOLON .

    COMMENTS        reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)
    LONGCOMMENT     reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)
    NAME            reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)
    PRINT           reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)
    INPUT           reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)
    RETURN          reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)
    FUNCTION        reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)
    CONST           reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)
    LET             reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)
    VAR             reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)
    OPEN_BRACKET    reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)
    NEW             reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)
    WHILE           reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)
    FOR             reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)
    OPEN_BRACE      reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)
    IF              reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)
    $end            reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)
    CLOSE_BRACE     reduce using rule 21 (variable -> type NAME IGUAL datatype SEMICOLON .)


state 213

    (109) methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 250


state 214

    (110) methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 251


state 215

    (111) methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS . SEMICOLON
    (100) mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 252


state 216

    (101) mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 253


state 217

    (102) mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 254


state 218

    (103) arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 255


state 219

    (104) arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 256


state 220

    (105) arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 257


state 221

    (134) print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    INPUT           reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 134 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)


state 222

    (136) input -> INPUT OPEN_PARENTHESIS element COMMA element . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 258


state 223

    (137) input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    INPUT           reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 137 (input -> INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)


state 224

    (53) operations -> number operand number operand . operations
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    NAME            shift and go to state 226
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    number                         shift and go to state 225
    operations                     shift and go to state 259

state 225

    (45) operations -> number . operand number
    (47) operations -> number .
    (48) operations -> number . operand NAME operations
    (50) operations -> number . operand NAME
    (53) operations -> number . operand number operand operations
    (63) operand -> . SUMA
    (64) operand -> . RESTA
    (65) operand -> . MULTIPLICACION
    (66) operand -> . DIVISION

    SEMICOLON       reduce using rule 47 (operations -> number .)
    COLON           reduce using rule 47 (operations -> number .)
    COMMA           reduce using rule 47 (operations -> number .)
    CLOSE_BRACKET   reduce using rule 47 (operations -> number .)
    CLOSE_PARENTHESIS reduce using rule 47 (operations -> number .)
    CLOSE_BRACE     reduce using rule 47 (operations -> number .)
    SUMA            shift and go to state 120
    RESTA           shift and go to state 121
    MULTIPLICACION  shift and go to state 122
    DIVISION        shift and go to state 123

    operand                        shift and go to state 119

state 226

    (46) operations -> NAME .
    (49) operations -> NAME . operand number operations
    (51) operations -> NAME . operand number
    (52) operations -> NAME . operand NAME operations
    (54) operations -> NAME . SUMA SUMA
    (55) operations -> NAME . operand NAME
    (56) operations -> NAME . RESTA RESTA
    (63) operand -> . SUMA
    (64) operand -> . RESTA
    (65) operand -> . MULTIPLICACION
    (66) operand -> . DIVISION

    SEMICOLON       reduce using rule 46 (operations -> NAME .)
    COLON           reduce using rule 46 (operations -> NAME .)
    COMMA           reduce using rule 46 (operations -> NAME .)
    CLOSE_BRACKET   reduce using rule 46 (operations -> NAME .)
    CLOSE_PARENTHESIS reduce using rule 46 (operations -> NAME .)
    CLOSE_BRACE     reduce using rule 46 (operations -> NAME .)
    SUMA            shift and go to state 125
    RESTA           shift and go to state 126
    MULTIPLICACION  shift and go to state 122
    DIVISION        shift and go to state 123

    operand                        shift and go to state 124

state 227

    (48) operations -> number operand NAME operations .

    SEMICOLON       reduce using rule 48 (operations -> number operand NAME operations .)
    COLON           reduce using rule 48 (operations -> number operand NAME operations .)
    COMMA           reduce using rule 48 (operations -> number operand NAME operations .)
    CLOSE_BRACKET   reduce using rule 48 (operations -> number operand NAME operations .)
    CLOSE_PARENTHESIS reduce using rule 48 (operations -> number operand NAME operations .)
    CLOSE_BRACE     reduce using rule 48 (operations -> number operand NAME operations .)


state 228

    (52) operations -> NAME operand NAME operations .

    SEMICOLON       reduce using rule 52 (operations -> NAME operand NAME operations .)
    COLON           reduce using rule 52 (operations -> NAME operand NAME operations .)
    COMMA           reduce using rule 52 (operations -> NAME operand NAME operations .)
    CLOSE_BRACKET   reduce using rule 52 (operations -> NAME operand NAME operations .)
    CLOSE_PARENTHESIS reduce using rule 52 (operations -> NAME operand NAME operations .)
    CLOSE_BRACE     reduce using rule 52 (operations -> NAME operand NAME operations .)


state 229

    (49) operations -> NAME operand number operations .

    SEMICOLON       reduce using rule 49 (operations -> NAME operand number operations .)
    COLON           reduce using rule 49 (operations -> NAME operand number operations .)
    COMMA           reduce using rule 49 (operations -> NAME operand number operations .)
    CLOSE_BRACKET   reduce using rule 49 (operations -> NAME operand number operations .)
    CLOSE_PARENTHESIS reduce using rule 49 (operations -> NAME operand number operations .)
    CLOSE_BRACE     reduce using rule 49 (operations -> NAME operand number operations .)


state 230

    (19) number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .

    SUMA            reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    RESTA           reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    MULTIPLICACION  reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    DIVISION        reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    COLON           reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    IGUALIGUAL      reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    DIFERENTE       reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    MAYORQUE        reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    MAYORIGUALQUE   reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    MENORQUE        reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    MENORIGUALQUE   reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    CLOSE_BRACE     reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    NAME            reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    INTEGER         reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    FLOAT           reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    OPEN_PARENTHESIS reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    AND             reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    OR              reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)


state 231

    (20) number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .

    SUMA            reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    RESTA           reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    MULTIPLICACION  reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    DIVISION        reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    COLON           reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    IGUALIGUAL      reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    DIFERENTE       reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    MAYORQUE        reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    MAYORIGUALQUE   reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    MENORQUE        reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    MENORIGUALQUE   reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    CLOSE_BRACE     reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    NAME            reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    INTEGER         reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    FLOAT           reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    OPEN_PARENTHESIS reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    AND             reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    OR              reduce using rule 20 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)


state 232

    (129) function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE . expression CLOSE_BRACE
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . input
    (12) semiExpression -> . return
    (13) semiExpression -> . function
    (14) semiExpression -> . COMMENTS
    (15) semiExpression -> . LONGCOMMENT
    (16) semiExpression -> . asigOp
    (21) variable -> . type NAME IGUAL datatype SEMICOLON
    (22) variable -> . NAME IGUAL datatype SEMICOLON
    (23) variable -> . type NAME IGUAL input
    (24) variable -> . NAME IGUAL input
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (25) controlStruct -> . while
    (26) controlStruct -> . for
    (27) controlStruct -> . if
    (109) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (110) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (111) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (100) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (102) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (103) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (104) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (105) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (122) declaration -> . NAME IGUAL element SEMICOLON
    (134) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (135) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (136) input -> . INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON
    (137) input -> . INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (138) input -> . INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (133) return -> . RETURN datatype SEMICOLON
    (129) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (130) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (73) asigOp -> . NAME operadorAsig number SEMICOLON
    (76) type -> . CONST
    (77) type -> . LET
    (78) type -> . VAR
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (31) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (32) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (42) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (33) if -> . soloIf
    (34) if -> . soloIf elseIf
    (35) if -> . soloIf elseIf else
    (36) if -> . soloIf else
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (37) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 14
    LONGCOMMENT     shift and go to state 15
    NAME            shift and go to state 18
    PRINT           shift and go to state 25
    INPUT           shift and go to state 26
    RETURN          shift and go to state 27
    FUNCTION        shift and go to state 28
    CONST           shift and go to state 30
    LET             shift and go to state 31
    VAR             shift and go to state 32
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    WHILE           shift and go to state 38
    FOR             shift and go to state 39
    OPEN_BRACE      shift and go to state 29
    IF              shift and go to state 41

    expression                     shift and go to state 260
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    input                          shift and go to state 11
    return                         shift and go to state 12
    function                       shift and go to state 13
    asigOp                         shift and go to state 16
    type                           shift and go to state 17
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    while                          shift and go to state 22
    for                            shift and go to state 23
    if                             shift and go to state 24
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37
    soloIf                         shift and go to state 40

state 233

    (130) function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS . OPEN_BRACE expression CLOSE_BRACE

    OPEN_BRACE      shift and go to state 261


state 234

    (132) parameter -> datatype COMMA . parameter
    (131) parameter -> . datatype
    (132) parameter -> . datatype COMMA parameter
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    OPEN_BRACE      shift and go to state 29

    datatype                       shift and go to state 190
    parameter                      shift and go to state 262
    number                         shift and go to state 56
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 235

    (93) claveValor -> clave COLON datatype COMMA . claveValor
    (92) claveValor -> . clave COLON datatype
    (93) claveValor -> . clave COLON datatype COMMA claveValor
    (94) clave -> . datatype
    (57) datatype -> . number
    (58) datatype -> . NAME
    (59) datatype -> . STRING
    (60) datatype -> . CHAR
    (61) datatype -> . operations
    (62) datatype -> . dataStruct
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 57
    STRING          shift and go to state 58
    CHAR            shift and go to state 59
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    OPEN_BRACE      shift and go to state 29

    clave                          shift and go to state 68
    datatype                       shift and go to state 69
    claveValor                     shift and go to state 263
    number                         shift and go to state 56
    operations                     shift and go to state 60
    dataStruct                     shift and go to state 61
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 236

    (98) tupla -> OPEN_BRACKET datatype . CLOSE_BRACKET SEMICOLON
    (99) tupla -> OPEN_BRACKET datatype . COMMA datatype CLOSE_BRACKET SEMICOLON

    CLOSE_BRACKET   shift and go to state 194
    COMMA           shift and go to state 195


state 237

    (98) tupla -> OPEN_BRACKET datatype CLOSE_BRACKET SEMICOLON .

    COMMA           reduce using rule 98 (tupla -> OPEN_BRACKET datatype CLOSE_BRACKET SEMICOLON .)
    CLOSE_BRACE     reduce using rule 98 (tupla -> OPEN_BRACKET datatype CLOSE_BRACKET SEMICOLON .)


state 238

    (99) tupla -> OPEN_BRACKET datatype COMMA datatype . CLOSE_BRACKET SEMICOLON

    CLOSE_BRACKET   shift and go to state 264


state 239

    (86) array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .

    COMMENTS        reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    LONGCOMMENT     reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    NAME            reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    PRINT           reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    INPUT           reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    FUNCTION        reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    CONST           reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    LET             reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    VAR             reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    OPEN_BRACKET    reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    NEW             reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    WHILE           reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    FOR             reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    OPEN_BRACE      reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    IF              reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    $end            reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    CLOSE_BRACE     reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    COLON           reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 86 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)


state 240

    (107) set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items . CLOSE_BRACKET CLOSE_PARENTHESIS

    CLOSE_BRACKET   shift and go to state 265


state 241

    (108) set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .

    COMMENTS        reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    LONGCOMMENT     reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    NAME            reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    PRINT           reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    INPUT           reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    FUNCTION        reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    CONST           reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    LET             reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    VAR             reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    OPEN_BRACKET    reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    NEW             reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    WHILE           reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    FOR             reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    OPEN_BRACE      reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    IF              reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    $end            reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    CLOSE_BRACE     reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    COLON           reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 108 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)


state 242

    (31) while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE . expression CLOSE_BRACE
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . input
    (12) semiExpression -> . return
    (13) semiExpression -> . function
    (14) semiExpression -> . COMMENTS
    (15) semiExpression -> . LONGCOMMENT
    (16) semiExpression -> . asigOp
    (21) variable -> . type NAME IGUAL datatype SEMICOLON
    (22) variable -> . NAME IGUAL datatype SEMICOLON
    (23) variable -> . type NAME IGUAL input
    (24) variable -> . NAME IGUAL input
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (25) controlStruct -> . while
    (26) controlStruct -> . for
    (27) controlStruct -> . if
    (109) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (110) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (111) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (100) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (102) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (103) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (104) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (105) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (122) declaration -> . NAME IGUAL element SEMICOLON
    (134) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (135) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (136) input -> . INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON
    (137) input -> . INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (138) input -> . INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (133) return -> . RETURN datatype SEMICOLON
    (129) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (130) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (73) asigOp -> . NAME operadorAsig number SEMICOLON
    (76) type -> . CONST
    (77) type -> . LET
    (78) type -> . VAR
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (31) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (32) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (42) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (33) if -> . soloIf
    (34) if -> . soloIf elseIf
    (35) if -> . soloIf elseIf else
    (36) if -> . soloIf else
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (37) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 14
    LONGCOMMENT     shift and go to state 15
    NAME            shift and go to state 18
    PRINT           shift and go to state 25
    INPUT           shift and go to state 26
    RETURN          shift and go to state 27
    FUNCTION        shift and go to state 28
    CONST           shift and go to state 30
    LET             shift and go to state 31
    VAR             shift and go to state 32
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    WHILE           shift and go to state 38
    FOR             shift and go to state 39
    OPEN_BRACE      shift and go to state 29
    IF              shift and go to state 41

    expression                     shift and go to state 266
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    input                          shift and go to state 11
    return                         shift and go to state 12
    function                       shift and go to state 13
    asigOp                         shift and go to state 16
    type                           shift and go to state 17
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    while                          shift and go to state 22
    for                            shift and go to state 23
    if                             shift and go to state 24
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37
    soloIf                         shift and go to state 40

state 243

    (32) while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE . expression CLOSE_BRACE
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . input
    (12) semiExpression -> . return
    (13) semiExpression -> . function
    (14) semiExpression -> . COMMENTS
    (15) semiExpression -> . LONGCOMMENT
    (16) semiExpression -> . asigOp
    (21) variable -> . type NAME IGUAL datatype SEMICOLON
    (22) variable -> . NAME IGUAL datatype SEMICOLON
    (23) variable -> . type NAME IGUAL input
    (24) variable -> . NAME IGUAL input
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (25) controlStruct -> . while
    (26) controlStruct -> . for
    (27) controlStruct -> . if
    (109) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (110) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (111) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (100) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (102) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (103) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (104) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (105) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (122) declaration -> . NAME IGUAL element SEMICOLON
    (134) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (135) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (136) input -> . INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON
    (137) input -> . INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (138) input -> . INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (133) return -> . RETURN datatype SEMICOLON
    (129) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (130) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (73) asigOp -> . NAME operadorAsig number SEMICOLON
    (76) type -> . CONST
    (77) type -> . LET
    (78) type -> . VAR
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (31) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (32) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (42) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (33) if -> . soloIf
    (34) if -> . soloIf elseIf
    (35) if -> . soloIf elseIf else
    (36) if -> . soloIf else
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (37) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 14
    LONGCOMMENT     shift and go to state 15
    NAME            shift and go to state 18
    PRINT           shift and go to state 25
    INPUT           shift and go to state 26
    RETURN          shift and go to state 27
    FUNCTION        shift and go to state 28
    CONST           shift and go to state 30
    LET             shift and go to state 31
    VAR             shift and go to state 32
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    WHILE           shift and go to state 38
    FOR             shift and go to state 39
    OPEN_BRACE      shift and go to state 29
    IF              shift and go to state 41

    expression                     shift and go to state 267
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    input                          shift and go to state 11
    return                         shift and go to state 12
    function                       shift and go to state 13
    asigOp                         shift and go to state 16
    type                           shift and go to state 17
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    while                          shift and go to state 22
    for                            shift and go to state 23
    if                             shift and go to state 24
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37
    soloIf                         shift and go to state 40

state 244

    (42) for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean . SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (128) expBoolean -> expBoolean . logicalOperator expBoolean
    (123) logicalOperator -> . AND
    (124) logicalOperator -> . OR

    SEMICOLON       shift and go to state 268
    AND             shift and go to state 140
    OR              shift and go to state 141

    logicalOperator                shift and go to state 139

state 245

    (43) inicialization -> type NAME IGUAL . number
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    number                         shift and go to state 269

state 246

    (44) inicialization -> NAME IGUAL number .

    SEMICOLON       reduce using rule 44 (inicialization -> NAME IGUAL number .)


state 247

    (38) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS . OPEN_BRACE expression CLOSE_BRACE
    (39) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS . OPEN_BRACE expression CLOSE_BRACE soloIf

    OPEN_BRACE      shift and go to state 270


state 248

    (40) else -> ELSE OPEN_BRACE expression CLOSE_BRACE .

    COMMENTS        reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    NAME            reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    PRINT           reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    INPUT           reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    RETURN          reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    FUNCTION        reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    CONST           reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    LET             reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    VAR             reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    NEW             reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    WHILE           reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    FOR             reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    IF              reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    $end            reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 40 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)


state 249

    (37) soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE . expression CLOSE_BRACE
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . input
    (12) semiExpression -> . return
    (13) semiExpression -> . function
    (14) semiExpression -> . COMMENTS
    (15) semiExpression -> . LONGCOMMENT
    (16) semiExpression -> . asigOp
    (21) variable -> . type NAME IGUAL datatype SEMICOLON
    (22) variable -> . NAME IGUAL datatype SEMICOLON
    (23) variable -> . type NAME IGUAL input
    (24) variable -> . NAME IGUAL input
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (25) controlStruct -> . while
    (26) controlStruct -> . for
    (27) controlStruct -> . if
    (109) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (110) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (111) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (100) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (102) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (103) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (104) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (105) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (122) declaration -> . NAME IGUAL element SEMICOLON
    (134) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (135) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (136) input -> . INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON
    (137) input -> . INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (138) input -> . INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (133) return -> . RETURN datatype SEMICOLON
    (129) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (130) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (73) asigOp -> . NAME operadorAsig number SEMICOLON
    (76) type -> . CONST
    (77) type -> . LET
    (78) type -> . VAR
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (31) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (32) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (42) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (33) if -> . soloIf
    (34) if -> . soloIf elseIf
    (35) if -> . soloIf elseIf else
    (36) if -> . soloIf else
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (37) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 14
    LONGCOMMENT     shift and go to state 15
    NAME            shift and go to state 18
    PRINT           shift and go to state 25
    INPUT           shift and go to state 26
    RETURN          shift and go to state 27
    FUNCTION        shift and go to state 28
    CONST           shift and go to state 30
    LET             shift and go to state 31
    VAR             shift and go to state 32
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    WHILE           shift and go to state 38
    FOR             shift and go to state 39
    OPEN_BRACE      shift and go to state 29
    IF              shift and go to state 41

    expression                     shift and go to state 271
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    input                          shift and go to state 11
    return                         shift and go to state 12
    function                       shift and go to state 13
    asigOp                         shift and go to state 16
    type                           shift and go to state 17
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    while                          shift and go to state 22
    for                            shift and go to state 23
    if                             shift and go to state 24
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37
    soloIf                         shift and go to state 40

state 250

    (109) methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 272


state 251

    (110) methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 273


state 252

    (111) methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .
    (100) mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .

  ! reduce/reduce conflict for COMMENTS resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for LONGCOMMENT resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for NAME resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for PRINT resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for INPUT resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for RETURN resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for CONST resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for LET resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for VAR resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for OPEN_BRACKET resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for NEW resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for WHILE resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for FOR resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for OPEN_BRACE resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for IF resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for $end resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for CLOSE_BRACE resolved using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    COMMENTS        reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    INPUT           reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 100 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)

  ! COMMENTS        [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! LONGCOMMENT     [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! NAME            [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! PRINT           [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! INPUT           [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! RETURN          [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! FUNCTION        [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! CONST           [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! LET             [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! VAR             [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! OPEN_BRACKET    [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! NEW             [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! WHILE           [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! FOR             [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! OPEN_BRACE      [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! IF              [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! $end            [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! CLOSE_BRACE     [ reduce using rule 111 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]


state 253

    (101) mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 274


state 254

    (102) mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 275


state 255

    (103) arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    INPUT           reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 103 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)


state 256

    (104) arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 276


state 257

    (105) arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 277


state 258

    (136) input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 278


state 259

    (53) operations -> number operand number operand operations .

    SEMICOLON       reduce using rule 53 (operations -> number operand number operand operations .)
    COLON           reduce using rule 53 (operations -> number operand number operand operations .)
    COMMA           reduce using rule 53 (operations -> number operand number operand operations .)
    CLOSE_BRACKET   reduce using rule 53 (operations -> number operand number operand operations .)
    CLOSE_PARENTHESIS reduce using rule 53 (operations -> number operand number operand operations .)
    CLOSE_BRACE     reduce using rule 53 (operations -> number operand number operand operations .)


state 260

    (129) function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 279


state 261

    (130) function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE . expression CLOSE_BRACE
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . input
    (12) semiExpression -> . return
    (13) semiExpression -> . function
    (14) semiExpression -> . COMMENTS
    (15) semiExpression -> . LONGCOMMENT
    (16) semiExpression -> . asigOp
    (21) variable -> . type NAME IGUAL datatype SEMICOLON
    (22) variable -> . NAME IGUAL datatype SEMICOLON
    (23) variable -> . type NAME IGUAL input
    (24) variable -> . NAME IGUAL input
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (25) controlStruct -> . while
    (26) controlStruct -> . for
    (27) controlStruct -> . if
    (109) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (110) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (111) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (100) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (102) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (103) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (104) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (105) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (122) declaration -> . NAME IGUAL element SEMICOLON
    (134) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (135) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (136) input -> . INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON
    (137) input -> . INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (138) input -> . INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (133) return -> . RETURN datatype SEMICOLON
    (129) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (130) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (73) asigOp -> . NAME operadorAsig number SEMICOLON
    (76) type -> . CONST
    (77) type -> . LET
    (78) type -> . VAR
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (31) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (32) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (42) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (33) if -> . soloIf
    (34) if -> . soloIf elseIf
    (35) if -> . soloIf elseIf else
    (36) if -> . soloIf else
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (37) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 14
    LONGCOMMENT     shift and go to state 15
    NAME            shift and go to state 18
    PRINT           shift and go to state 25
    INPUT           shift and go to state 26
    RETURN          shift and go to state 27
    FUNCTION        shift and go to state 28
    CONST           shift and go to state 30
    LET             shift and go to state 31
    VAR             shift and go to state 32
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    WHILE           shift and go to state 38
    FOR             shift and go to state 39
    OPEN_BRACE      shift and go to state 29
    IF              shift and go to state 41

    expression                     shift and go to state 280
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    input                          shift and go to state 11
    return                         shift and go to state 12
    function                       shift and go to state 13
    asigOp                         shift and go to state 16
    type                           shift and go to state 17
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    while                          shift and go to state 22
    for                            shift and go to state 23
    if                             shift and go to state 24
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37
    soloIf                         shift and go to state 40

state 262

    (132) parameter -> datatype COMMA parameter .

    CLOSE_PARENTHESIS reduce using rule 132 (parameter -> datatype COMMA parameter .)


state 263

    (93) claveValor -> clave COLON datatype COMMA claveValor .

    CLOSE_BRACE     reduce using rule 93 (claveValor -> clave COLON datatype COMMA claveValor .)


state 264

    (99) tupla -> OPEN_BRACKET datatype COMMA datatype CLOSE_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 281


state 265

    (107) set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 282


state 266

    (31) while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 283


state 267

    (32) while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 284


state 268

    (42) for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON . operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (45) operations -> . number operand number
    (46) operations -> . NAME
    (47) operations -> . number
    (48) operations -> . number operand NAME operations
    (49) operations -> . NAME operand number operations
    (50) operations -> . number operand NAME
    (51) operations -> . NAME operand number
    (52) operations -> . NAME operand NAME operations
    (53) operations -> . number operand number operand operations
    (54) operations -> . NAME SUMA SUMA
    (55) operations -> . NAME operand NAME
    (56) operations -> . NAME RESTA RESTA
    (17) number -> . INTEGER
    (18) number -> . FLOAT
    (19) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (20) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    NAME            shift and go to state 226
    INTEGER         shift and go to state 62
    FLOAT           shift and go to state 63
    OPEN_PARENTHESIS shift and go to state 64

    operations                     shift and go to state 285
    number                         shift and go to state 225

state 269

    (43) inicialization -> type NAME IGUAL number .

    SEMICOLON       reduce using rule 43 (inicialization -> type NAME IGUAL number .)


state 270

    (38) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE . expression CLOSE_BRACE
    (39) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE . expression CLOSE_BRACE soloIf
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . input
    (12) semiExpression -> . return
    (13) semiExpression -> . function
    (14) semiExpression -> . COMMENTS
    (15) semiExpression -> . LONGCOMMENT
    (16) semiExpression -> . asigOp
    (21) variable -> . type NAME IGUAL datatype SEMICOLON
    (22) variable -> . NAME IGUAL datatype SEMICOLON
    (23) variable -> . type NAME IGUAL input
    (24) variable -> . NAME IGUAL input
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (25) controlStruct -> . while
    (26) controlStruct -> . for
    (27) controlStruct -> . if
    (109) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (110) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (111) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (100) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (102) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (103) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (104) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (105) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (122) declaration -> . NAME IGUAL element SEMICOLON
    (134) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (135) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (136) input -> . INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON
    (137) input -> . INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (138) input -> . INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (133) return -> . RETURN datatype SEMICOLON
    (129) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (130) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (73) asigOp -> . NAME operadorAsig number SEMICOLON
    (76) type -> . CONST
    (77) type -> . LET
    (78) type -> . VAR
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (31) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (32) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (42) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (33) if -> . soloIf
    (34) if -> . soloIf elseIf
    (35) if -> . soloIf elseIf else
    (36) if -> . soloIf else
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (37) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 14
    LONGCOMMENT     shift and go to state 15
    NAME            shift and go to state 18
    PRINT           shift and go to state 25
    INPUT           shift and go to state 26
    RETURN          shift and go to state 27
    FUNCTION        shift and go to state 28
    CONST           shift and go to state 30
    LET             shift and go to state 31
    VAR             shift and go to state 32
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    WHILE           shift and go to state 38
    FOR             shift and go to state 39
    OPEN_BRACE      shift and go to state 29
    IF              shift and go to state 41

    expression                     shift and go to state 286
    soloIf                         shift and go to state 40
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    input                          shift and go to state 11
    return                         shift and go to state 12
    function                       shift and go to state 13
    asigOp                         shift and go to state 16
    type                           shift and go to state 17
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    while                          shift and go to state 22
    for                            shift and go to state 23
    if                             shift and go to state 24
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37

state 271

    (37) soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 287


state 272

    (109) methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    INPUT           reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 109 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)


state 273

    (110) methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    INPUT           reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 110 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)


state 274

    (101) mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    INPUT           reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 101 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)


state 275

    (102) mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    INPUT           reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 102 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)


state 276

    (104) arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    INPUT           reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 104 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)


state 277

    (105) arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    INPUT           reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 105 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)


state 278

    (136) input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)
    INPUT           reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 136 (input -> INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON .)


state 279

    (129) function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .

    COMMENTS        reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NAME            reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    PRINT           reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    INPUT           reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    RETURN          reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FUNCTION        reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CONST           reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LET             reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    VAR             reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NEW             reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    WHILE           reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FOR             reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    IF              reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    $end            reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 129 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)


state 280

    (130) function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 288


state 281

    (99) tupla -> OPEN_BRACKET datatype COMMA datatype CLOSE_BRACKET SEMICOLON .

    COMMA           reduce using rule 99 (tupla -> OPEN_BRACKET datatype COMMA datatype CLOSE_BRACKET SEMICOLON .)
    CLOSE_BRACE     reduce using rule 99 (tupla -> OPEN_BRACKET datatype COMMA datatype CLOSE_BRACKET SEMICOLON .)


state 282

    (107) set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .

    COMMENTS        reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    LONGCOMMENT     reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    NAME            reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    PRINT           reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    INPUT           reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    FUNCTION        reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    CONST           reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    LET             reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    VAR             reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    OPEN_BRACKET    reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    NEW             reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    WHILE           reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    FOR             reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    OPEN_BRACE      reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    IF              reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    $end            reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    CLOSE_BRACE     reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    COLON           reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 107 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)


state 283

    (31) while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .

    COMMENTS        reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NAME            reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    PRINT           reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    INPUT           reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    RETURN          reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FUNCTION        reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CONST           reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LET             reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    VAR             reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NEW             reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    WHILE           reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FOR             reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    IF              reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    $end            reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 31 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)


state 284

    (32) while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .

    COMMENTS        reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NAME            reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    PRINT           reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    INPUT           reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    RETURN          reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FUNCTION        reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CONST           reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LET             reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    VAR             reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NEW             reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    WHILE           reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FOR             reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    IF              reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    $end            reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 32 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)


state 285

    (42) for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations . CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    CLOSE_PARENTHESIS shift and go to state 289


state 286

    (38) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression . CLOSE_BRACE
    (39) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression . CLOSE_BRACE soloIf

    CLOSE_BRACE     shift and go to state 290


state 287

    (37) soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .

    ELSEIF          reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    ELSE            reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    COMMENTS        reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NAME            reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    PRINT           reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    INPUT           reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    RETURN          reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FUNCTION        reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CONST           reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LET             reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    VAR             reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NEW             reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    WHILE           reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FOR             reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    IF              reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    $end            reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 37 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)


state 288

    (130) function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .

    COMMENTS        reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NAME            reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    PRINT           reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    INPUT           reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    RETURN          reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FUNCTION        reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CONST           reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LET             reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    VAR             reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NEW             reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    WHILE           reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FOR             reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    IF              reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    $end            reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 130 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)


state 289

    (42) for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS . OPEN_BRACE expression CLOSE_BRACE

    OPEN_BRACE      shift and go to state 291


state 290

    (38) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .
    (39) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE . soloIf
    (37) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

  ! shift/reduce conflict for IF resolved as shift
    ELSE            reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    COMMENTS        reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NAME            reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    PRINT           reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    INPUT           reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    RETURN          reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FUNCTION        reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CONST           reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LET             reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    VAR             reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NEW             reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    WHILE           reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FOR             reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    $end            reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    IF              shift and go to state 41

  ! IF              [ reduce using rule 38 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .) ]

    soloIf                         shift and go to state 292

state 291

    (42) for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE . expression CLOSE_BRACE
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . input
    (12) semiExpression -> . return
    (13) semiExpression -> . function
    (14) semiExpression -> . COMMENTS
    (15) semiExpression -> . LONGCOMMENT
    (16) semiExpression -> . asigOp
    (21) variable -> . type NAME IGUAL datatype SEMICOLON
    (22) variable -> . NAME IGUAL datatype SEMICOLON
    (23) variable -> . type NAME IGUAL input
    (24) variable -> . NAME IGUAL input
    (28) dataStruct -> . array
    (29) dataStruct -> . set
    (30) dataStruct -> . map
    (25) controlStruct -> . while
    (26) controlStruct -> . for
    (27) controlStruct -> . if
    (109) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (110) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (111) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (100) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (102) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (103) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (104) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (105) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (122) declaration -> . NAME IGUAL element SEMICOLON
    (134) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (135) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (136) input -> . INPUT OPEN_PARENTHESIS element COMMA element CLOSE_PARENTHESIS SEMICOLON
    (137) input -> . INPUT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (138) input -> . INPUT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (133) return -> . RETURN datatype SEMICOLON
    (129) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (130) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (73) asigOp -> . NAME operadorAsig number SEMICOLON
    (76) type -> . CONST
    (77) type -> . LET
    (78) type -> . VAR
    (85) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (86) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (106) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (107) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (108) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) map -> . iniciarMap
    (88) map -> . escribirMap
    (89) map -> . generarMap
    (31) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (32) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (42) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (33) if -> . soloIf
    (34) if -> . soloIf elseIf
    (35) if -> . soloIf elseIf else
    (36) if -> . soloIf else
    (90) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (91) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (95) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (37) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 14
    LONGCOMMENT     shift and go to state 15
    NAME            shift and go to state 18
    PRINT           shift and go to state 25
    INPUT           shift and go to state 26
    RETURN          shift and go to state 27
    FUNCTION        shift and go to state 28
    CONST           shift and go to state 30
    LET             shift and go to state 31
    VAR             shift and go to state 32
    OPEN_BRACKET    shift and go to state 33
    NEW             shift and go to state 34
    WHILE           shift and go to state 38
    FOR             shift and go to state 39
    OPEN_BRACE      shift and go to state 29
    IF              shift and go to state 41

    expression                     shift and go to state 293
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    input                          shift and go to state 11
    return                         shift and go to state 12
    function                       shift and go to state 13
    asigOp                         shift and go to state 16
    type                           shift and go to state 17
    array                          shift and go to state 19
    set                            shift and go to state 20
    map                            shift and go to state 21
    while                          shift and go to state 22
    for                            shift and go to state 23
    if                             shift and go to state 24
    iniciarMap                     shift and go to state 35
    escribirMap                    shift and go to state 36
    generarMap                     shift and go to state 37
    soloIf                         shift and go to state 40

state 292

    (39) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .

    ELSE            reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    COMMENTS        reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    LONGCOMMENT     reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    NAME            reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    PRINT           reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    INPUT           reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    RETURN          reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    FUNCTION        reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    CONST           reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    LET             reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    VAR             reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    OPEN_BRACKET    reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    NEW             reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    WHILE           reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    FOR             reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    OPEN_BRACE      reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    IF              reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    $end            reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    CLOSE_BRACE     reduce using rule 39 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)


state 293

    (42) for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 294


state 294

    (42) for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .

    COMMENTS        reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NAME            reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    PRINT           reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    INPUT           reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    RETURN          reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FUNCTION        reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CONST           reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LET             reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    VAR             reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NEW             reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    WHILE           reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FOR             reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    IF              reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    $end            reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 42 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 133 resolved as shift
WARNING: shift/reduce conflict for CLOSE_BRACKET in state 133 resolved as shift
WARNING: shift/reduce conflict for AND in state 142 resolved as shift
WARNING: shift/reduce conflict for OR in state 142 resolved as shift
WARNING: shift/reduce conflict for AND in state 197 resolved as shift
WARNING: shift/reduce conflict for OR in state 197 resolved as shift
WARNING: shift/reduce conflict for IF in state 290 resolved as shift
WARNING: reduce/reduce conflict in state 56 resolved using rule (operations -> number)
WARNING: rejected rule (datatype -> number) in state 56
WARNING: reduce/reduce conflict in state 57 resolved using rule (operations -> NAME)
WARNING: rejected rule (datatype -> NAME) in state 57
WARNING: reduce/reduce conflict in state 74 resolved using rule (datatype -> number)
WARNING: rejected rule (item -> number) in state 74
WARNING: reduce/reduce conflict in state 74 resolved using rule (operations -> number)
WARNING: rejected rule (datatype -> number) in state 74
WARNING: reduce/reduce conflict in state 75 resolved using rule (datatype -> STRING)
WARNING: rejected rule (item -> STRING) in state 75
WARNING: reduce/reduce conflict in state 77 resolved using rule (datatype -> NAME)
WARNING: rejected rule (item -> NAME) in state 77
WARNING: reduce/reduce conflict in state 77 resolved using rule (operations -> NAME)
WARNING: rejected rule (datatype -> NAME) in state 77
WARNING: reduce/reduce conflict in state 96 resolved using rule (datatype -> NAME)
WARNING: rejected rule (element -> NAME) in state 96
WARNING: reduce/reduce conflict in state 96 resolved using rule (operations -> NAME)
WARNING: rejected rule (datatype -> NAME) in state 96
WARNING: reduce/reduce conflict in state 100 resolved using rule (datatype -> number)
WARNING: rejected rule (element -> number) in state 100
WARNING: reduce/reduce conflict in state 100 resolved using rule (operations -> number)
WARNING: rejected rule (datatype -> number) in state 100
WARNING: reduce/reduce conflict in state 101 resolved using rule (datatype -> STRING)
WARNING: rejected rule (element -> STRING) in state 101
WARNING: reduce/reduce conflict in state 134 resolved using rule (operations -> number)
WARNING: rejected rule (datatype -> number) in state 134
WARNING: reduce/reduce conflict in state 134 resolved using rule (operations -> number)
WARNING: rejected rule (item -> number) in state 134
WARNING: reduce/reduce conflict in state 135 resolved using rule (operations -> NAME)
WARNING: rejected rule (datatype -> NAME) in state 135
WARNING: reduce/reduce conflict in state 135 resolved using rule (operations -> NAME)
WARNING: rejected rule (item -> NAME) in state 135
WARNING: reduce/reduce conflict in state 136 resolved using rule (datatype -> STRING)
WARNING: rejected rule (item -> STRING) in state 136
WARNING: reduce/reduce conflict in state 252 resolved using rule (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON)
WARNING: rejected rule (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON) in state 252
WARNING: Rule (datatype -> number) is never reduced
WARNING: Rule (datatype -> NAME) is never reduced
WARNING: Rule (item -> number) is never reduced
WARNING: Rule (item -> STRING) is never reduced
WARNING: Rule (item -> NAME) is never reduced
WARNING: Rule (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON) is never reduced

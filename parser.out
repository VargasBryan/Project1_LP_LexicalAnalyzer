Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> semiExpression
Rule 2     expression -> semiExpression expression
Rule 3     semiExpression -> variable
Rule 4     semiExpression -> dataStruct
Rule 5     semiExpression -> controlStruct
Rule 6     semiExpression -> methodsSet
Rule 7     semiExpression -> mapFunctions
Rule 8     semiExpression -> arrayFn
Rule 9     semiExpression -> declaration
Rule 10    semiExpression -> print
Rule 11    semiExpression -> return
Rule 12    semiExpression -> function
Rule 13    semiExpression -> COMMENTS
Rule 14    semiExpression -> LONGCOMMENT
Rule 15    semiExpression -> asigOp
Rule 16    number -> INTEGER
Rule 17    number -> FLOAT
Rule 18    number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
Rule 19    number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
Rule 20    variable -> type NAME IGUAL datatype SEMICOLON
Rule 21    variable -> NAME IGUAL datatype SEMICOLON
Rule 22    controlStruct -> while
Rule 23    controlStruct -> for
Rule 24    controlStruct -> if
Rule 25    dataStruct -> array
Rule 26    dataStruct -> set
Rule 27    dataStruct -> map
Rule 28    while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
Rule 29    while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
Rule 30    if -> soloIf
Rule 31    if -> soloIf elseIf
Rule 32    if -> soloIf elseIf else
Rule 33    if -> soloIf else
Rule 34    soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
Rule 35    elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
Rule 36    elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf
Rule 37    else -> ELSE OPEN_BRACE expression CLOSE_BRACE
Rule 38    controlArg -> element clause element
Rule 39    for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
Rule 40    inicialization -> type NAME IGUAL number
Rule 41    inicialization -> NAME IGUAL number
Rule 42    operations -> number operand number
Rule 43    operations -> NAME
Rule 44    operations -> number
Rule 45    operations -> number operand NAME operations
Rule 46    operations -> NAME operand number operations
Rule 47    operations -> number operand NAME
Rule 48    operations -> NAME operand number
Rule 49    operations -> NAME operand NAME operations
Rule 50    operations -> number operand number operand operations
Rule 51    operations -> NAME SUMA SUMA
Rule 52    operations -> NAME operand NAME
Rule 53    operations -> NAME RESTA RESTA
Rule 54    datatype -> number
Rule 55    datatype -> NAME
Rule 56    datatype -> STRING
Rule 57    datatype -> CHAR
Rule 58    datatype -> operations
Rule 59    datatype -> dataStruct
Rule 60    operand -> SUMA
Rule 61    operand -> RESTA
Rule 62    operand -> MULTIPLICACION
Rule 63    operand -> DIVISION
Rule 64    operadorAsig -> MASIGUAL
Rule 65    operadorAsig -> MENOSIGUAL
Rule 66    operadorAsig -> PORIGUAL
Rule 67    operadorAsig -> DIVIGUAL
Rule 68    operadorAsig -> MODIGUAL
Rule 69    operadorAsig -> POTIGUAL
Rule 70    asigOp -> NAME operadorAsig number SEMICOLON
Rule 71    bool -> TRUE
Rule 72    bool -> FALSE
Rule 73    type -> CONST
Rule 74    type -> LET
Rule 75    type -> VAR
Rule 76    clause -> IGUALIGUAL
Rule 77    clause -> DIFERENTE
Rule 78    clause -> MAYORQUE
Rule 79    clause -> MAYORIGUALQUE
Rule 80    clause -> MENORQUE
Rule 81    clause -> MENORIGUALQUE
Rule 82    array -> OPEN_BRACKET items CLOSE_BRACKET
Rule 83    array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
Rule 84    map -> iniciarMap
Rule 85    map -> escribirMap
Rule 86    map -> generarMap
Rule 87    iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
Rule 88    escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE
Rule 89    claveValor -> clave COLON datatype
Rule 90    claveValor -> clave COLON datatype COMMA claveValor
Rule 91    clave -> datatype
Rule 92    generarMap -> OPEN_BRACE tuplas CLOSE_BRACE
Rule 93    tuplas -> tupla
Rule 94    tuplas -> tupla COMMA tuplas
Rule 95    tupla -> OPEN_BRACKET datatype CLOSE_BRACKET SEMICOLON
Rule 96    tupla -> OPEN_BRACKET datatype COMMA datatype CLOSE_BRACKET SEMICOLON
Rule 97    mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
Rule 98    mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
Rule 99    mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
Rule 100   arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
Rule 101   arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
Rule 102   arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
Rule 103   set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
Rule 104   set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
Rule 105   set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
Rule 106   methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
Rule 107   methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
Rule 108   methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
Rule 109   items -> item
Rule 110   items -> item COMMA items
Rule 111   item -> number
Rule 112   item -> STRING
Rule 113   item -> expBoolean
Rule 114   item -> NAME
Rule 115   item -> datatype
Rule 116   element -> STRING
Rule 117   element -> number
Rule 118   element -> NAME
Rule 119   declaration -> NAME IGUAL element SEMICOLON
Rule 120   logicalOperator -> AND
Rule 121   logicalOperator -> OR
Rule 122   expBoolean -> controlArg
Rule 123   expBoolean -> bool
Rule 124   expBoolean -> NOT expBoolean
Rule 125   expBoolean -> expBoolean logicalOperator expBoolean
Rule 126   function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
Rule 127   function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
Rule 128   parameter -> datatype
Rule 129   parameter -> datatype COMMA parameter
Rule 130   return -> RETURN datatype SEMICOLON
Rule 131   print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
Rule 132   print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON

Terminals, with rules where they appear

ADD                  : 106
AND                  : 120
ARRAY                : 83
CHAR                 : 57
CLEAR                : 97 108
CLOSE_BRACE          : 28 29 34 35 36 37 39 88 92 126 127
CLOSE_BRACKET        : 82 95 96 104
CLOSE_PARENTHESIS    : 18 19 28 29 34 35 36 39 83 87 97 98 99 100 101 102 103 104 105 106 107 108 126 127 131 132
COLON                : 89 90
COMMA                : 90 94 96 110 129
COMMENTS             : 13
CONST                : 73
DELETE               : 107
DIFERENTE            : 77
DIVIGUAL             : 67
DIVISION             : 63
ELSE                 : 37
ELSEIF               : 35 36
FALSE                : 72
FLOAT                : 17 19
FOR                  : 39
FUNCTION             : 126 127
GET                  : 98
HAS                  : 99
IF                   : 34
IGUAL                : 20 21 40 41 119
IGUALIGUAL           : 76
INTEGER              : 16 18
LET                  : 74
LONGCOMMENT          : 14
MAP                  : 87
MASIGUAL             : 64
MAYORIGUALQUE        : 79
MAYORQUE             : 78
MENORIGUALQUE        : 81
MENORQUE             : 80
MENOSIGUAL           : 65
MODIGUAL             : 68
MULTIPLICACION       : 62
NAME                 : 20 21 40 41 43 45 46 47 48 49 49 51 52 52 53 55 70 97 98 99 100 101 102 106 107 108 114 118 119 126 127
NEW                  : 83 87 103 104 105
NOT                  : 124
OPEN_BRACE           : 28 29 34 35 36 37 39 88 92 126 127
OPEN_BRACKET         : 82 95 96 104
OPEN_PARENTHESIS     : 18 19 28 29 34 35 36 39 83 87 97 98 99 100 101 102 103 104 105 106 107 108 126 127 131 132
OR                   : 121
POINT                : 97 98 99 100 101 102 106 107 108
POP                  : 100
PORIGUAL             : 66
POTIGUAL             : 69
PRINT                : 131 132
PUSH                 : 101
RESTA                : 18 19 53 53 61
RETURN               : 130
SEMICOLON            : 20 21 39 39 70 95 96 97 98 99 100 101 102 106 107 108 119 130 131 132
SET                  : 103 104 105
STRING               : 56 112 116
SUMA                 : 51 51 60
TRUE                 : 71
UNSHIFT              : 102
VAR                  : 75
WHILE                : 28 29
error                : 

Nonterminals, with rules where they appear

array                : 25
arrayFn              : 8
asigOp               : 15
bool                 : 29 123
clause               : 38
clave                : 89 90 98 99
claveValor           : 88 90
controlArg           : 28 34 35 36 122
controlStruct        : 5
dataStruct           : 4 59
datatype             : 20 21 89 90 91 95 96 96 115 128 129 130 131
declaration          : 9
element              : 38 38 101 102 105 106 107 119
else                 : 32 33
elseIf               : 31 32
escribirMap          : 85
expBoolean           : 39 113 124 125 125
expression           : 2 28 29 34 35 36 37 39 126 127 0
for                  : 23
function             : 12
generarMap           : 86
if                   : 24
inicialization       : 39
iniciarMap           : 84
item                 : 109 110
items                : 82 83 104 110
logicalOperator      : 125
map                  : 27
mapFunctions         : 7
methodsSet           : 6
number               : 40 41 42 42 44 45 46 47 48 50 50 54 70 111 117
operadorAsig         : 70
operand              : 42 45 46 47 48 49 50 50 52
operations           : 39 45 46 49 50 58
parameter            : 127 129
print                : 10
return               : 11
semiExpression       : 1 2
set                  : 26
soloIf               : 30 31 32 33 36
tupla                : 93 94
tuplas               : 92 94
type                 : 20 40
variable             : 3
while                : 22

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . return
    (12) semiExpression -> . function
    (13) semiExpression -> . COMMENTS
    (14) semiExpression -> . LONGCOMMENT
    (15) semiExpression -> . asigOp
    (20) variable -> . type NAME IGUAL datatype SEMICOLON
    (21) variable -> . NAME IGUAL datatype SEMICOLON
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (22) controlStruct -> . while
    (23) controlStruct -> . for
    (24) controlStruct -> . if
    (106) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (107) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (108) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (97) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (98) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (99) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (100) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (102) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (119) declaration -> . NAME IGUAL element SEMICOLON
    (131) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (132) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (130) return -> . RETURN datatype SEMICOLON
    (126) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (127) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (70) asigOp -> . NAME operadorAsig number SEMICOLON
    (73) type -> . CONST
    (74) type -> . LET
    (75) type -> . VAR
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (28) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (29) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (39) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (30) if -> . soloIf
    (31) if -> . soloIf elseIf
    (32) if -> . soloIf elseIf else
    (33) if -> . soloIf else
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (34) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 13
    LONGCOMMENT     shift and go to state 14
    NAME            shift and go to state 17
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION        shift and go to state 26
    CONST           shift and go to state 28
    LET             shift and go to state 29
    VAR             shift and go to state 30
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    OPEN_BRACE      shift and go to state 27
    IF              shift and go to state 39

    expression                     shift and go to state 1
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    return                         shift and go to state 11
    function                       shift and go to state 12
    asigOp                         shift and go to state 15
    type                           shift and go to state 16
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    while                          shift and go to state 21
    for                            shift and go to state 22
    if                             shift and go to state 23
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35
    soloIf                         shift and go to state 38

state 1

    (0) S' -> expression .



state 2

    (1) expression -> semiExpression .
    (2) expression -> semiExpression . expression
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . return
    (12) semiExpression -> . function
    (13) semiExpression -> . COMMENTS
    (14) semiExpression -> . LONGCOMMENT
    (15) semiExpression -> . asigOp
    (20) variable -> . type NAME IGUAL datatype SEMICOLON
    (21) variable -> . NAME IGUAL datatype SEMICOLON
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (22) controlStruct -> . while
    (23) controlStruct -> . for
    (24) controlStruct -> . if
    (106) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (107) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (108) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (97) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (98) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (99) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (100) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (102) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (119) declaration -> . NAME IGUAL element SEMICOLON
    (131) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (132) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (130) return -> . RETURN datatype SEMICOLON
    (126) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (127) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (70) asigOp -> . NAME operadorAsig number SEMICOLON
    (73) type -> . CONST
    (74) type -> . LET
    (75) type -> . VAR
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (28) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (29) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (39) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (30) if -> . soloIf
    (31) if -> . soloIf elseIf
    (32) if -> . soloIf elseIf else
    (33) if -> . soloIf else
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (34) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    $end            reduce using rule 1 (expression -> semiExpression .)
    CLOSE_BRACE     reduce using rule 1 (expression -> semiExpression .)
    COMMENTS        shift and go to state 13
    LONGCOMMENT     shift and go to state 14
    NAME            shift and go to state 17
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION        shift and go to state 26
    CONST           shift and go to state 28
    LET             shift and go to state 29
    VAR             shift and go to state 30
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    OPEN_BRACE      shift and go to state 27
    IF              shift and go to state 39

    semiExpression                 shift and go to state 2
    expression                     shift and go to state 40
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    return                         shift and go to state 11
    function                       shift and go to state 12
    asigOp                         shift and go to state 15
    type                           shift and go to state 16
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    while                          shift and go to state 21
    for                            shift and go to state 22
    if                             shift and go to state 23
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35
    soloIf                         shift and go to state 38

state 3

    (3) semiExpression -> variable .

    COMMENTS        reduce using rule 3 (semiExpression -> variable .)
    LONGCOMMENT     reduce using rule 3 (semiExpression -> variable .)
    NAME            reduce using rule 3 (semiExpression -> variable .)
    PRINT           reduce using rule 3 (semiExpression -> variable .)
    RETURN          reduce using rule 3 (semiExpression -> variable .)
    FUNCTION        reduce using rule 3 (semiExpression -> variable .)
    CONST           reduce using rule 3 (semiExpression -> variable .)
    LET             reduce using rule 3 (semiExpression -> variable .)
    VAR             reduce using rule 3 (semiExpression -> variable .)
    OPEN_BRACKET    reduce using rule 3 (semiExpression -> variable .)
    NEW             reduce using rule 3 (semiExpression -> variable .)
    WHILE           reduce using rule 3 (semiExpression -> variable .)
    FOR             reduce using rule 3 (semiExpression -> variable .)
    OPEN_BRACE      reduce using rule 3 (semiExpression -> variable .)
    IF              reduce using rule 3 (semiExpression -> variable .)
    $end            reduce using rule 3 (semiExpression -> variable .)
    CLOSE_BRACE     reduce using rule 3 (semiExpression -> variable .)


state 4

    (4) semiExpression -> dataStruct .

    COMMENTS        reduce using rule 4 (semiExpression -> dataStruct .)
    LONGCOMMENT     reduce using rule 4 (semiExpression -> dataStruct .)
    NAME            reduce using rule 4 (semiExpression -> dataStruct .)
    PRINT           reduce using rule 4 (semiExpression -> dataStruct .)
    RETURN          reduce using rule 4 (semiExpression -> dataStruct .)
    FUNCTION        reduce using rule 4 (semiExpression -> dataStruct .)
    CONST           reduce using rule 4 (semiExpression -> dataStruct .)
    LET             reduce using rule 4 (semiExpression -> dataStruct .)
    VAR             reduce using rule 4 (semiExpression -> dataStruct .)
    OPEN_BRACKET    reduce using rule 4 (semiExpression -> dataStruct .)
    NEW             reduce using rule 4 (semiExpression -> dataStruct .)
    WHILE           reduce using rule 4 (semiExpression -> dataStruct .)
    FOR             reduce using rule 4 (semiExpression -> dataStruct .)
    OPEN_BRACE      reduce using rule 4 (semiExpression -> dataStruct .)
    IF              reduce using rule 4 (semiExpression -> dataStruct .)
    $end            reduce using rule 4 (semiExpression -> dataStruct .)
    CLOSE_BRACE     reduce using rule 4 (semiExpression -> dataStruct .)


state 5

    (5) semiExpression -> controlStruct .

    COMMENTS        reduce using rule 5 (semiExpression -> controlStruct .)
    LONGCOMMENT     reduce using rule 5 (semiExpression -> controlStruct .)
    NAME            reduce using rule 5 (semiExpression -> controlStruct .)
    PRINT           reduce using rule 5 (semiExpression -> controlStruct .)
    RETURN          reduce using rule 5 (semiExpression -> controlStruct .)
    FUNCTION        reduce using rule 5 (semiExpression -> controlStruct .)
    CONST           reduce using rule 5 (semiExpression -> controlStruct .)
    LET             reduce using rule 5 (semiExpression -> controlStruct .)
    VAR             reduce using rule 5 (semiExpression -> controlStruct .)
    OPEN_BRACKET    reduce using rule 5 (semiExpression -> controlStruct .)
    NEW             reduce using rule 5 (semiExpression -> controlStruct .)
    WHILE           reduce using rule 5 (semiExpression -> controlStruct .)
    FOR             reduce using rule 5 (semiExpression -> controlStruct .)
    OPEN_BRACE      reduce using rule 5 (semiExpression -> controlStruct .)
    IF              reduce using rule 5 (semiExpression -> controlStruct .)
    $end            reduce using rule 5 (semiExpression -> controlStruct .)
    CLOSE_BRACE     reduce using rule 5 (semiExpression -> controlStruct .)


state 6

    (6) semiExpression -> methodsSet .

    COMMENTS        reduce using rule 6 (semiExpression -> methodsSet .)
    LONGCOMMENT     reduce using rule 6 (semiExpression -> methodsSet .)
    NAME            reduce using rule 6 (semiExpression -> methodsSet .)
    PRINT           reduce using rule 6 (semiExpression -> methodsSet .)
    RETURN          reduce using rule 6 (semiExpression -> methodsSet .)
    FUNCTION        reduce using rule 6 (semiExpression -> methodsSet .)
    CONST           reduce using rule 6 (semiExpression -> methodsSet .)
    LET             reduce using rule 6 (semiExpression -> methodsSet .)
    VAR             reduce using rule 6 (semiExpression -> methodsSet .)
    OPEN_BRACKET    reduce using rule 6 (semiExpression -> methodsSet .)
    NEW             reduce using rule 6 (semiExpression -> methodsSet .)
    WHILE           reduce using rule 6 (semiExpression -> methodsSet .)
    FOR             reduce using rule 6 (semiExpression -> methodsSet .)
    OPEN_BRACE      reduce using rule 6 (semiExpression -> methodsSet .)
    IF              reduce using rule 6 (semiExpression -> methodsSet .)
    $end            reduce using rule 6 (semiExpression -> methodsSet .)
    CLOSE_BRACE     reduce using rule 6 (semiExpression -> methodsSet .)


state 7

    (7) semiExpression -> mapFunctions .

    COMMENTS        reduce using rule 7 (semiExpression -> mapFunctions .)
    LONGCOMMENT     reduce using rule 7 (semiExpression -> mapFunctions .)
    NAME            reduce using rule 7 (semiExpression -> mapFunctions .)
    PRINT           reduce using rule 7 (semiExpression -> mapFunctions .)
    RETURN          reduce using rule 7 (semiExpression -> mapFunctions .)
    FUNCTION        reduce using rule 7 (semiExpression -> mapFunctions .)
    CONST           reduce using rule 7 (semiExpression -> mapFunctions .)
    LET             reduce using rule 7 (semiExpression -> mapFunctions .)
    VAR             reduce using rule 7 (semiExpression -> mapFunctions .)
    OPEN_BRACKET    reduce using rule 7 (semiExpression -> mapFunctions .)
    NEW             reduce using rule 7 (semiExpression -> mapFunctions .)
    WHILE           reduce using rule 7 (semiExpression -> mapFunctions .)
    FOR             reduce using rule 7 (semiExpression -> mapFunctions .)
    OPEN_BRACE      reduce using rule 7 (semiExpression -> mapFunctions .)
    IF              reduce using rule 7 (semiExpression -> mapFunctions .)
    $end            reduce using rule 7 (semiExpression -> mapFunctions .)
    CLOSE_BRACE     reduce using rule 7 (semiExpression -> mapFunctions .)


state 8

    (8) semiExpression -> arrayFn .

    COMMENTS        reduce using rule 8 (semiExpression -> arrayFn .)
    LONGCOMMENT     reduce using rule 8 (semiExpression -> arrayFn .)
    NAME            reduce using rule 8 (semiExpression -> arrayFn .)
    PRINT           reduce using rule 8 (semiExpression -> arrayFn .)
    RETURN          reduce using rule 8 (semiExpression -> arrayFn .)
    FUNCTION        reduce using rule 8 (semiExpression -> arrayFn .)
    CONST           reduce using rule 8 (semiExpression -> arrayFn .)
    LET             reduce using rule 8 (semiExpression -> arrayFn .)
    VAR             reduce using rule 8 (semiExpression -> arrayFn .)
    OPEN_BRACKET    reduce using rule 8 (semiExpression -> arrayFn .)
    NEW             reduce using rule 8 (semiExpression -> arrayFn .)
    WHILE           reduce using rule 8 (semiExpression -> arrayFn .)
    FOR             reduce using rule 8 (semiExpression -> arrayFn .)
    OPEN_BRACE      reduce using rule 8 (semiExpression -> arrayFn .)
    IF              reduce using rule 8 (semiExpression -> arrayFn .)
    $end            reduce using rule 8 (semiExpression -> arrayFn .)
    CLOSE_BRACE     reduce using rule 8 (semiExpression -> arrayFn .)


state 9

    (9) semiExpression -> declaration .

    COMMENTS        reduce using rule 9 (semiExpression -> declaration .)
    LONGCOMMENT     reduce using rule 9 (semiExpression -> declaration .)
    NAME            reduce using rule 9 (semiExpression -> declaration .)
    PRINT           reduce using rule 9 (semiExpression -> declaration .)
    RETURN          reduce using rule 9 (semiExpression -> declaration .)
    FUNCTION        reduce using rule 9 (semiExpression -> declaration .)
    CONST           reduce using rule 9 (semiExpression -> declaration .)
    LET             reduce using rule 9 (semiExpression -> declaration .)
    VAR             reduce using rule 9 (semiExpression -> declaration .)
    OPEN_BRACKET    reduce using rule 9 (semiExpression -> declaration .)
    NEW             reduce using rule 9 (semiExpression -> declaration .)
    WHILE           reduce using rule 9 (semiExpression -> declaration .)
    FOR             reduce using rule 9 (semiExpression -> declaration .)
    OPEN_BRACE      reduce using rule 9 (semiExpression -> declaration .)
    IF              reduce using rule 9 (semiExpression -> declaration .)
    $end            reduce using rule 9 (semiExpression -> declaration .)
    CLOSE_BRACE     reduce using rule 9 (semiExpression -> declaration .)


state 10

    (10) semiExpression -> print .

    COMMENTS        reduce using rule 10 (semiExpression -> print .)
    LONGCOMMENT     reduce using rule 10 (semiExpression -> print .)
    NAME            reduce using rule 10 (semiExpression -> print .)
    PRINT           reduce using rule 10 (semiExpression -> print .)
    RETURN          reduce using rule 10 (semiExpression -> print .)
    FUNCTION        reduce using rule 10 (semiExpression -> print .)
    CONST           reduce using rule 10 (semiExpression -> print .)
    LET             reduce using rule 10 (semiExpression -> print .)
    VAR             reduce using rule 10 (semiExpression -> print .)
    OPEN_BRACKET    reduce using rule 10 (semiExpression -> print .)
    NEW             reduce using rule 10 (semiExpression -> print .)
    WHILE           reduce using rule 10 (semiExpression -> print .)
    FOR             reduce using rule 10 (semiExpression -> print .)
    OPEN_BRACE      reduce using rule 10 (semiExpression -> print .)
    IF              reduce using rule 10 (semiExpression -> print .)
    $end            reduce using rule 10 (semiExpression -> print .)
    CLOSE_BRACE     reduce using rule 10 (semiExpression -> print .)


state 11

    (11) semiExpression -> return .

    COMMENTS        reduce using rule 11 (semiExpression -> return .)
    LONGCOMMENT     reduce using rule 11 (semiExpression -> return .)
    NAME            reduce using rule 11 (semiExpression -> return .)
    PRINT           reduce using rule 11 (semiExpression -> return .)
    RETURN          reduce using rule 11 (semiExpression -> return .)
    FUNCTION        reduce using rule 11 (semiExpression -> return .)
    CONST           reduce using rule 11 (semiExpression -> return .)
    LET             reduce using rule 11 (semiExpression -> return .)
    VAR             reduce using rule 11 (semiExpression -> return .)
    OPEN_BRACKET    reduce using rule 11 (semiExpression -> return .)
    NEW             reduce using rule 11 (semiExpression -> return .)
    WHILE           reduce using rule 11 (semiExpression -> return .)
    FOR             reduce using rule 11 (semiExpression -> return .)
    OPEN_BRACE      reduce using rule 11 (semiExpression -> return .)
    IF              reduce using rule 11 (semiExpression -> return .)
    $end            reduce using rule 11 (semiExpression -> return .)
    CLOSE_BRACE     reduce using rule 11 (semiExpression -> return .)


state 12

    (12) semiExpression -> function .

    COMMENTS        reduce using rule 12 (semiExpression -> function .)
    LONGCOMMENT     reduce using rule 12 (semiExpression -> function .)
    NAME            reduce using rule 12 (semiExpression -> function .)
    PRINT           reduce using rule 12 (semiExpression -> function .)
    RETURN          reduce using rule 12 (semiExpression -> function .)
    FUNCTION        reduce using rule 12 (semiExpression -> function .)
    CONST           reduce using rule 12 (semiExpression -> function .)
    LET             reduce using rule 12 (semiExpression -> function .)
    VAR             reduce using rule 12 (semiExpression -> function .)
    OPEN_BRACKET    reduce using rule 12 (semiExpression -> function .)
    NEW             reduce using rule 12 (semiExpression -> function .)
    WHILE           reduce using rule 12 (semiExpression -> function .)
    FOR             reduce using rule 12 (semiExpression -> function .)
    OPEN_BRACE      reduce using rule 12 (semiExpression -> function .)
    IF              reduce using rule 12 (semiExpression -> function .)
    $end            reduce using rule 12 (semiExpression -> function .)
    CLOSE_BRACE     reduce using rule 12 (semiExpression -> function .)


state 13

    (13) semiExpression -> COMMENTS .

    COMMENTS        reduce using rule 13 (semiExpression -> COMMENTS .)
    LONGCOMMENT     reduce using rule 13 (semiExpression -> COMMENTS .)
    NAME            reduce using rule 13 (semiExpression -> COMMENTS .)
    PRINT           reduce using rule 13 (semiExpression -> COMMENTS .)
    RETURN          reduce using rule 13 (semiExpression -> COMMENTS .)
    FUNCTION        reduce using rule 13 (semiExpression -> COMMENTS .)
    CONST           reduce using rule 13 (semiExpression -> COMMENTS .)
    LET             reduce using rule 13 (semiExpression -> COMMENTS .)
    VAR             reduce using rule 13 (semiExpression -> COMMENTS .)
    OPEN_BRACKET    reduce using rule 13 (semiExpression -> COMMENTS .)
    NEW             reduce using rule 13 (semiExpression -> COMMENTS .)
    WHILE           reduce using rule 13 (semiExpression -> COMMENTS .)
    FOR             reduce using rule 13 (semiExpression -> COMMENTS .)
    OPEN_BRACE      reduce using rule 13 (semiExpression -> COMMENTS .)
    IF              reduce using rule 13 (semiExpression -> COMMENTS .)
    $end            reduce using rule 13 (semiExpression -> COMMENTS .)
    CLOSE_BRACE     reduce using rule 13 (semiExpression -> COMMENTS .)


state 14

    (14) semiExpression -> LONGCOMMENT .

    COMMENTS        reduce using rule 14 (semiExpression -> LONGCOMMENT .)
    LONGCOMMENT     reduce using rule 14 (semiExpression -> LONGCOMMENT .)
    NAME            reduce using rule 14 (semiExpression -> LONGCOMMENT .)
    PRINT           reduce using rule 14 (semiExpression -> LONGCOMMENT .)
    RETURN          reduce using rule 14 (semiExpression -> LONGCOMMENT .)
    FUNCTION        reduce using rule 14 (semiExpression -> LONGCOMMENT .)
    CONST           reduce using rule 14 (semiExpression -> LONGCOMMENT .)
    LET             reduce using rule 14 (semiExpression -> LONGCOMMENT .)
    VAR             reduce using rule 14 (semiExpression -> LONGCOMMENT .)
    OPEN_BRACKET    reduce using rule 14 (semiExpression -> LONGCOMMENT .)
    NEW             reduce using rule 14 (semiExpression -> LONGCOMMENT .)
    WHILE           reduce using rule 14 (semiExpression -> LONGCOMMENT .)
    FOR             reduce using rule 14 (semiExpression -> LONGCOMMENT .)
    OPEN_BRACE      reduce using rule 14 (semiExpression -> LONGCOMMENT .)
    IF              reduce using rule 14 (semiExpression -> LONGCOMMENT .)
    $end            reduce using rule 14 (semiExpression -> LONGCOMMENT .)
    CLOSE_BRACE     reduce using rule 14 (semiExpression -> LONGCOMMENT .)


state 15

    (15) semiExpression -> asigOp .

    COMMENTS        reduce using rule 15 (semiExpression -> asigOp .)
    LONGCOMMENT     reduce using rule 15 (semiExpression -> asigOp .)
    NAME            reduce using rule 15 (semiExpression -> asigOp .)
    PRINT           reduce using rule 15 (semiExpression -> asigOp .)
    RETURN          reduce using rule 15 (semiExpression -> asigOp .)
    FUNCTION        reduce using rule 15 (semiExpression -> asigOp .)
    CONST           reduce using rule 15 (semiExpression -> asigOp .)
    LET             reduce using rule 15 (semiExpression -> asigOp .)
    VAR             reduce using rule 15 (semiExpression -> asigOp .)
    OPEN_BRACKET    reduce using rule 15 (semiExpression -> asigOp .)
    NEW             reduce using rule 15 (semiExpression -> asigOp .)
    WHILE           reduce using rule 15 (semiExpression -> asigOp .)
    FOR             reduce using rule 15 (semiExpression -> asigOp .)
    OPEN_BRACE      reduce using rule 15 (semiExpression -> asigOp .)
    IF              reduce using rule 15 (semiExpression -> asigOp .)
    $end            reduce using rule 15 (semiExpression -> asigOp .)
    CLOSE_BRACE     reduce using rule 15 (semiExpression -> asigOp .)


state 16

    (20) variable -> type . NAME IGUAL datatype SEMICOLON

    NAME            shift and go to state 41


state 17

    (21) variable -> NAME . IGUAL datatype SEMICOLON
    (106) methodsSet -> NAME . POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (107) methodsSet -> NAME . POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (108) methodsSet -> NAME . POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (97) mapFunctions -> NAME . POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (98) mapFunctions -> NAME . POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (99) mapFunctions -> NAME . POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (100) arrayFn -> NAME . POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) arrayFn -> NAME . POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (102) arrayFn -> NAME . POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (119) declaration -> NAME . IGUAL element SEMICOLON
    (70) asigOp -> NAME . operadorAsig number SEMICOLON
    (64) operadorAsig -> . MASIGUAL
    (65) operadorAsig -> . MENOSIGUAL
    (66) operadorAsig -> . PORIGUAL
    (67) operadorAsig -> . DIVIGUAL
    (68) operadorAsig -> . MODIGUAL
    (69) operadorAsig -> . POTIGUAL

    IGUAL           shift and go to state 42
    POINT           shift and go to state 43
    MASIGUAL        shift and go to state 45
    MENOSIGUAL      shift and go to state 46
    PORIGUAL        shift and go to state 47
    DIVIGUAL        shift and go to state 48
    MODIGUAL        shift and go to state 49
    POTIGUAL        shift and go to state 50

    operadorAsig                   shift and go to state 44

state 18

    (25) dataStruct -> array .

    COMMENTS        reduce using rule 25 (dataStruct -> array .)
    LONGCOMMENT     reduce using rule 25 (dataStruct -> array .)
    NAME            reduce using rule 25 (dataStruct -> array .)
    PRINT           reduce using rule 25 (dataStruct -> array .)
    RETURN          reduce using rule 25 (dataStruct -> array .)
    FUNCTION        reduce using rule 25 (dataStruct -> array .)
    CONST           reduce using rule 25 (dataStruct -> array .)
    LET             reduce using rule 25 (dataStruct -> array .)
    VAR             reduce using rule 25 (dataStruct -> array .)
    OPEN_BRACKET    reduce using rule 25 (dataStruct -> array .)
    NEW             reduce using rule 25 (dataStruct -> array .)
    WHILE           reduce using rule 25 (dataStruct -> array .)
    FOR             reduce using rule 25 (dataStruct -> array .)
    OPEN_BRACE      reduce using rule 25 (dataStruct -> array .)
    IF              reduce using rule 25 (dataStruct -> array .)
    $end            reduce using rule 25 (dataStruct -> array .)
    CLOSE_BRACE     reduce using rule 25 (dataStruct -> array .)
    SEMICOLON       reduce using rule 25 (dataStruct -> array .)
    COLON           reduce using rule 25 (dataStruct -> array .)
    COMMA           reduce using rule 25 (dataStruct -> array .)
    CLOSE_BRACKET   reduce using rule 25 (dataStruct -> array .)
    CLOSE_PARENTHESIS reduce using rule 25 (dataStruct -> array .)


state 19

    (26) dataStruct -> set .

    COMMENTS        reduce using rule 26 (dataStruct -> set .)
    LONGCOMMENT     reduce using rule 26 (dataStruct -> set .)
    NAME            reduce using rule 26 (dataStruct -> set .)
    PRINT           reduce using rule 26 (dataStruct -> set .)
    RETURN          reduce using rule 26 (dataStruct -> set .)
    FUNCTION        reduce using rule 26 (dataStruct -> set .)
    CONST           reduce using rule 26 (dataStruct -> set .)
    LET             reduce using rule 26 (dataStruct -> set .)
    VAR             reduce using rule 26 (dataStruct -> set .)
    OPEN_BRACKET    reduce using rule 26 (dataStruct -> set .)
    NEW             reduce using rule 26 (dataStruct -> set .)
    WHILE           reduce using rule 26 (dataStruct -> set .)
    FOR             reduce using rule 26 (dataStruct -> set .)
    OPEN_BRACE      reduce using rule 26 (dataStruct -> set .)
    IF              reduce using rule 26 (dataStruct -> set .)
    $end            reduce using rule 26 (dataStruct -> set .)
    CLOSE_BRACE     reduce using rule 26 (dataStruct -> set .)
    SEMICOLON       reduce using rule 26 (dataStruct -> set .)
    COLON           reduce using rule 26 (dataStruct -> set .)
    COMMA           reduce using rule 26 (dataStruct -> set .)
    CLOSE_BRACKET   reduce using rule 26 (dataStruct -> set .)
    CLOSE_PARENTHESIS reduce using rule 26 (dataStruct -> set .)


state 20

    (27) dataStruct -> map .

    COMMENTS        reduce using rule 27 (dataStruct -> map .)
    LONGCOMMENT     reduce using rule 27 (dataStruct -> map .)
    NAME            reduce using rule 27 (dataStruct -> map .)
    PRINT           reduce using rule 27 (dataStruct -> map .)
    RETURN          reduce using rule 27 (dataStruct -> map .)
    FUNCTION        reduce using rule 27 (dataStruct -> map .)
    CONST           reduce using rule 27 (dataStruct -> map .)
    LET             reduce using rule 27 (dataStruct -> map .)
    VAR             reduce using rule 27 (dataStruct -> map .)
    OPEN_BRACKET    reduce using rule 27 (dataStruct -> map .)
    NEW             reduce using rule 27 (dataStruct -> map .)
    WHILE           reduce using rule 27 (dataStruct -> map .)
    FOR             reduce using rule 27 (dataStruct -> map .)
    OPEN_BRACE      reduce using rule 27 (dataStruct -> map .)
    IF              reduce using rule 27 (dataStruct -> map .)
    $end            reduce using rule 27 (dataStruct -> map .)
    CLOSE_BRACE     reduce using rule 27 (dataStruct -> map .)
    SEMICOLON       reduce using rule 27 (dataStruct -> map .)
    COLON           reduce using rule 27 (dataStruct -> map .)
    COMMA           reduce using rule 27 (dataStruct -> map .)
    CLOSE_BRACKET   reduce using rule 27 (dataStruct -> map .)
    CLOSE_PARENTHESIS reduce using rule 27 (dataStruct -> map .)


state 21

    (22) controlStruct -> while .

    COMMENTS        reduce using rule 22 (controlStruct -> while .)
    LONGCOMMENT     reduce using rule 22 (controlStruct -> while .)
    NAME            reduce using rule 22 (controlStruct -> while .)
    PRINT           reduce using rule 22 (controlStruct -> while .)
    RETURN          reduce using rule 22 (controlStruct -> while .)
    FUNCTION        reduce using rule 22 (controlStruct -> while .)
    CONST           reduce using rule 22 (controlStruct -> while .)
    LET             reduce using rule 22 (controlStruct -> while .)
    VAR             reduce using rule 22 (controlStruct -> while .)
    OPEN_BRACKET    reduce using rule 22 (controlStruct -> while .)
    NEW             reduce using rule 22 (controlStruct -> while .)
    WHILE           reduce using rule 22 (controlStruct -> while .)
    FOR             reduce using rule 22 (controlStruct -> while .)
    OPEN_BRACE      reduce using rule 22 (controlStruct -> while .)
    IF              reduce using rule 22 (controlStruct -> while .)
    $end            reduce using rule 22 (controlStruct -> while .)
    CLOSE_BRACE     reduce using rule 22 (controlStruct -> while .)


state 22

    (23) controlStruct -> for .

    COMMENTS        reduce using rule 23 (controlStruct -> for .)
    LONGCOMMENT     reduce using rule 23 (controlStruct -> for .)
    NAME            reduce using rule 23 (controlStruct -> for .)
    PRINT           reduce using rule 23 (controlStruct -> for .)
    RETURN          reduce using rule 23 (controlStruct -> for .)
    FUNCTION        reduce using rule 23 (controlStruct -> for .)
    CONST           reduce using rule 23 (controlStruct -> for .)
    LET             reduce using rule 23 (controlStruct -> for .)
    VAR             reduce using rule 23 (controlStruct -> for .)
    OPEN_BRACKET    reduce using rule 23 (controlStruct -> for .)
    NEW             reduce using rule 23 (controlStruct -> for .)
    WHILE           reduce using rule 23 (controlStruct -> for .)
    FOR             reduce using rule 23 (controlStruct -> for .)
    OPEN_BRACE      reduce using rule 23 (controlStruct -> for .)
    IF              reduce using rule 23 (controlStruct -> for .)
    $end            reduce using rule 23 (controlStruct -> for .)
    CLOSE_BRACE     reduce using rule 23 (controlStruct -> for .)


state 23

    (24) controlStruct -> if .

    COMMENTS        reduce using rule 24 (controlStruct -> if .)
    LONGCOMMENT     reduce using rule 24 (controlStruct -> if .)
    NAME            reduce using rule 24 (controlStruct -> if .)
    PRINT           reduce using rule 24 (controlStruct -> if .)
    RETURN          reduce using rule 24 (controlStruct -> if .)
    FUNCTION        reduce using rule 24 (controlStruct -> if .)
    CONST           reduce using rule 24 (controlStruct -> if .)
    LET             reduce using rule 24 (controlStruct -> if .)
    VAR             reduce using rule 24 (controlStruct -> if .)
    OPEN_BRACKET    reduce using rule 24 (controlStruct -> if .)
    NEW             reduce using rule 24 (controlStruct -> if .)
    WHILE           reduce using rule 24 (controlStruct -> if .)
    FOR             reduce using rule 24 (controlStruct -> if .)
    OPEN_BRACE      reduce using rule 24 (controlStruct -> if .)
    IF              reduce using rule 24 (controlStruct -> if .)
    $end            reduce using rule 24 (controlStruct -> if .)
    CLOSE_BRACE     reduce using rule 24 (controlStruct -> if .)


state 24

    (131) print -> PRINT . OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (132) print -> PRINT . OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 51


state 25

    (130) return -> RETURN . datatype SEMICOLON
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 54
    STRING          shift and go to state 55
    CHAR            shift and go to state 56
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    OPEN_BRACE      shift and go to state 27

    datatype                       shift and go to state 52
    number                         shift and go to state 53
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 26

    (126) function -> FUNCTION . NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (127) function -> FUNCTION . NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    NAME            shift and go to state 62


state 27

    (88) escribirMap -> OPEN_BRACE . claveValor CLOSE_BRACE
    (92) generarMap -> OPEN_BRACE . tuplas CLOSE_BRACE
    (89) claveValor -> . clave COLON datatype
    (90) claveValor -> . clave COLON datatype COMMA claveValor
    (93) tuplas -> . tupla
    (94) tuplas -> . tupla COMMA tuplas
    (91) clave -> . datatype
    (95) tupla -> . OPEN_BRACKET datatype CLOSE_BRACKET SEMICOLON
    (96) tupla -> . OPEN_BRACKET datatype COMMA datatype CLOSE_BRACKET SEMICOLON
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    OPEN_BRACKET    shift and go to state 68
    NAME            shift and go to state 54
    STRING          shift and go to state 55
    CHAR            shift and go to state 56
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    NEW             shift and go to state 32
    OPEN_BRACE      shift and go to state 27

    claveValor                     shift and go to state 63
    tuplas                         shift and go to state 64
    clave                          shift and go to state 65
    datatype                       shift and go to state 66
    tupla                          shift and go to state 67
    number                         shift and go to state 53
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 28

    (73) type -> CONST .

    NAME            reduce using rule 73 (type -> CONST .)


state 29

    (74) type -> LET .

    NAME            reduce using rule 74 (type -> LET .)


state 30

    (75) type -> VAR .

    NAME            reduce using rule 75 (type -> VAR .)


state 31

    (82) array -> OPEN_BRACKET . items CLOSE_BRACKET
    (109) items -> . item
    (110) items -> . item COMMA items
    (111) item -> . number
    (112) item -> . STRING
    (113) item -> . expBoolean
    (114) item -> . NAME
    (115) item -> . datatype
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (122) expBoolean -> . controlArg
    (123) expBoolean -> . bool
    (124) expBoolean -> . NOT expBoolean
    (125) expBoolean -> . expBoolean logicalOperator expBoolean
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (38) controlArg -> . element clause element
    (71) bool -> . TRUE
    (72) bool -> . FALSE
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    STRING          shift and go to state 72
    NAME            shift and go to state 74
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    NOT             shift and go to state 78
    CHAR            shift and go to state 56
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    OPEN_BRACE      shift and go to state 27

    items                          shift and go to state 69
    item                           shift and go to state 70
    number                         shift and go to state 71
    expBoolean                     shift and go to state 73
    datatype                       shift and go to state 75
    controlArg                     shift and go to state 76
    bool                           shift and go to state 77
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    element                        shift and go to state 79
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 32

    (83) array -> NEW . ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> NEW . SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> NEW . SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> NEW . SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (87) iniciarMap -> NEW . MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS

    ARRAY           shift and go to state 82
    SET             shift and go to state 83
    MAP             shift and go to state 84


state 33

    (84) map -> iniciarMap .

    COMMENTS        reduce using rule 84 (map -> iniciarMap .)
    LONGCOMMENT     reduce using rule 84 (map -> iniciarMap .)
    NAME            reduce using rule 84 (map -> iniciarMap .)
    PRINT           reduce using rule 84 (map -> iniciarMap .)
    RETURN          reduce using rule 84 (map -> iniciarMap .)
    FUNCTION        reduce using rule 84 (map -> iniciarMap .)
    CONST           reduce using rule 84 (map -> iniciarMap .)
    LET             reduce using rule 84 (map -> iniciarMap .)
    VAR             reduce using rule 84 (map -> iniciarMap .)
    OPEN_BRACKET    reduce using rule 84 (map -> iniciarMap .)
    NEW             reduce using rule 84 (map -> iniciarMap .)
    WHILE           reduce using rule 84 (map -> iniciarMap .)
    FOR             reduce using rule 84 (map -> iniciarMap .)
    OPEN_BRACE      reduce using rule 84 (map -> iniciarMap .)
    IF              reduce using rule 84 (map -> iniciarMap .)
    $end            reduce using rule 84 (map -> iniciarMap .)
    CLOSE_BRACE     reduce using rule 84 (map -> iniciarMap .)
    SEMICOLON       reduce using rule 84 (map -> iniciarMap .)
    COLON           reduce using rule 84 (map -> iniciarMap .)
    COMMA           reduce using rule 84 (map -> iniciarMap .)
    CLOSE_BRACKET   reduce using rule 84 (map -> iniciarMap .)
    CLOSE_PARENTHESIS reduce using rule 84 (map -> iniciarMap .)


state 34

    (85) map -> escribirMap .

    COMMENTS        reduce using rule 85 (map -> escribirMap .)
    LONGCOMMENT     reduce using rule 85 (map -> escribirMap .)
    NAME            reduce using rule 85 (map -> escribirMap .)
    PRINT           reduce using rule 85 (map -> escribirMap .)
    RETURN          reduce using rule 85 (map -> escribirMap .)
    FUNCTION        reduce using rule 85 (map -> escribirMap .)
    CONST           reduce using rule 85 (map -> escribirMap .)
    LET             reduce using rule 85 (map -> escribirMap .)
    VAR             reduce using rule 85 (map -> escribirMap .)
    OPEN_BRACKET    reduce using rule 85 (map -> escribirMap .)
    NEW             reduce using rule 85 (map -> escribirMap .)
    WHILE           reduce using rule 85 (map -> escribirMap .)
    FOR             reduce using rule 85 (map -> escribirMap .)
    OPEN_BRACE      reduce using rule 85 (map -> escribirMap .)
    IF              reduce using rule 85 (map -> escribirMap .)
    $end            reduce using rule 85 (map -> escribirMap .)
    CLOSE_BRACE     reduce using rule 85 (map -> escribirMap .)
    SEMICOLON       reduce using rule 85 (map -> escribirMap .)
    COLON           reduce using rule 85 (map -> escribirMap .)
    COMMA           reduce using rule 85 (map -> escribirMap .)
    CLOSE_BRACKET   reduce using rule 85 (map -> escribirMap .)
    CLOSE_PARENTHESIS reduce using rule 85 (map -> escribirMap .)


state 35

    (86) map -> generarMap .

    COMMENTS        reduce using rule 86 (map -> generarMap .)
    LONGCOMMENT     reduce using rule 86 (map -> generarMap .)
    NAME            reduce using rule 86 (map -> generarMap .)
    PRINT           reduce using rule 86 (map -> generarMap .)
    RETURN          reduce using rule 86 (map -> generarMap .)
    FUNCTION        reduce using rule 86 (map -> generarMap .)
    CONST           reduce using rule 86 (map -> generarMap .)
    LET             reduce using rule 86 (map -> generarMap .)
    VAR             reduce using rule 86 (map -> generarMap .)
    OPEN_BRACKET    reduce using rule 86 (map -> generarMap .)
    NEW             reduce using rule 86 (map -> generarMap .)
    WHILE           reduce using rule 86 (map -> generarMap .)
    FOR             reduce using rule 86 (map -> generarMap .)
    OPEN_BRACE      reduce using rule 86 (map -> generarMap .)
    IF              reduce using rule 86 (map -> generarMap .)
    $end            reduce using rule 86 (map -> generarMap .)
    CLOSE_BRACE     reduce using rule 86 (map -> generarMap .)
    SEMICOLON       reduce using rule 86 (map -> generarMap .)
    COLON           reduce using rule 86 (map -> generarMap .)
    COMMA           reduce using rule 86 (map -> generarMap .)
    CLOSE_BRACKET   reduce using rule 86 (map -> generarMap .)
    CLOSE_PARENTHESIS reduce using rule 86 (map -> generarMap .)


state 36

    (28) while -> WHILE . OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (29) while -> WHILE . OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    OPEN_PARENTHESIS shift and go to state 85


state 37

    (39) for -> FOR . OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    OPEN_PARENTHESIS shift and go to state 86


state 38

    (30) if -> soloIf .
    (31) if -> soloIf . elseIf
    (32) if -> soloIf . elseIf else
    (33) if -> soloIf . else
    (35) elseIf -> . ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (36) elseIf -> . ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf
    (37) else -> . ELSE OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        reduce using rule 30 (if -> soloIf .)
    LONGCOMMENT     reduce using rule 30 (if -> soloIf .)
    NAME            reduce using rule 30 (if -> soloIf .)
    PRINT           reduce using rule 30 (if -> soloIf .)
    RETURN          reduce using rule 30 (if -> soloIf .)
    FUNCTION        reduce using rule 30 (if -> soloIf .)
    CONST           reduce using rule 30 (if -> soloIf .)
    LET             reduce using rule 30 (if -> soloIf .)
    VAR             reduce using rule 30 (if -> soloIf .)
    OPEN_BRACKET    reduce using rule 30 (if -> soloIf .)
    NEW             reduce using rule 30 (if -> soloIf .)
    WHILE           reduce using rule 30 (if -> soloIf .)
    FOR             reduce using rule 30 (if -> soloIf .)
    OPEN_BRACE      reduce using rule 30 (if -> soloIf .)
    IF              reduce using rule 30 (if -> soloIf .)
    $end            reduce using rule 30 (if -> soloIf .)
    CLOSE_BRACE     reduce using rule 30 (if -> soloIf .)
    ELSEIF          shift and go to state 89
    ELSE            shift and go to state 90

    elseIf                         shift and go to state 87
    else                           shift and go to state 88

state 39

    (34) soloIf -> IF . OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    OPEN_PARENTHESIS shift and go to state 91


state 40

    (2) expression -> semiExpression expression .

    $end            reduce using rule 2 (expression -> semiExpression expression .)
    CLOSE_BRACE     reduce using rule 2 (expression -> semiExpression expression .)


state 41

    (20) variable -> type NAME . IGUAL datatype SEMICOLON

    IGUAL           shift and go to state 92


state 42

    (21) variable -> NAME IGUAL . datatype SEMICOLON
    (119) declaration -> NAME IGUAL . element SEMICOLON
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 93
    STRING          shift and go to state 97
    CHAR            shift and go to state 56
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    OPEN_BRACE      shift and go to state 27

    datatype                       shift and go to state 94
    element                        shift and go to state 95
    number                         shift and go to state 96
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 43

    (106) methodsSet -> NAME POINT . ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (107) methodsSet -> NAME POINT . DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (108) methodsSet -> NAME POINT . CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (97) mapFunctions -> NAME POINT . CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (98) mapFunctions -> NAME POINT . GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (99) mapFunctions -> NAME POINT . HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (100) arrayFn -> NAME POINT . POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) arrayFn -> NAME POINT . PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (102) arrayFn -> NAME POINT . UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON

    ADD             shift and go to state 98
    DELETE          shift and go to state 99
    CLEAR           shift and go to state 100
    GET             shift and go to state 101
    HAS             shift and go to state 102
    POP             shift and go to state 103
    PUSH            shift and go to state 104
    UNSHIFT         shift and go to state 105


state 44

    (70) asigOp -> NAME operadorAsig . number SEMICOLON
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    number                         shift and go to state 106

state 45

    (64) operadorAsig -> MASIGUAL .

    INTEGER         reduce using rule 64 (operadorAsig -> MASIGUAL .)
    FLOAT           reduce using rule 64 (operadorAsig -> MASIGUAL .)
    OPEN_PARENTHESIS reduce using rule 64 (operadorAsig -> MASIGUAL .)


state 46

    (65) operadorAsig -> MENOSIGUAL .

    INTEGER         reduce using rule 65 (operadorAsig -> MENOSIGUAL .)
    FLOAT           reduce using rule 65 (operadorAsig -> MENOSIGUAL .)
    OPEN_PARENTHESIS reduce using rule 65 (operadorAsig -> MENOSIGUAL .)


state 47

    (66) operadorAsig -> PORIGUAL .

    INTEGER         reduce using rule 66 (operadorAsig -> PORIGUAL .)
    FLOAT           reduce using rule 66 (operadorAsig -> PORIGUAL .)
    OPEN_PARENTHESIS reduce using rule 66 (operadorAsig -> PORIGUAL .)


state 48

    (67) operadorAsig -> DIVIGUAL .

    INTEGER         reduce using rule 67 (operadorAsig -> DIVIGUAL .)
    FLOAT           reduce using rule 67 (operadorAsig -> DIVIGUAL .)
    OPEN_PARENTHESIS reduce using rule 67 (operadorAsig -> DIVIGUAL .)


state 49

    (68) operadorAsig -> MODIGUAL .

    INTEGER         reduce using rule 68 (operadorAsig -> MODIGUAL .)
    FLOAT           reduce using rule 68 (operadorAsig -> MODIGUAL .)
    OPEN_PARENTHESIS reduce using rule 68 (operadorAsig -> MODIGUAL .)


state 50

    (69) operadorAsig -> POTIGUAL .

    INTEGER         reduce using rule 69 (operadorAsig -> POTIGUAL .)
    FLOAT           reduce using rule 69 (operadorAsig -> POTIGUAL .)
    OPEN_PARENTHESIS reduce using rule 69 (operadorAsig -> POTIGUAL .)


state 51

    (131) print -> PRINT OPEN_PARENTHESIS . datatype CLOSE_PARENTHESIS SEMICOLON
    (132) print -> PRINT OPEN_PARENTHESIS . CLOSE_PARENTHESIS SEMICOLON
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    CLOSE_PARENTHESIS shift and go to state 108
    NAME            shift and go to state 54
    STRING          shift and go to state 55
    CHAR            shift and go to state 56
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    OPEN_BRACE      shift and go to state 27

    datatype                       shift and go to state 107
    number                         shift and go to state 53
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 52

    (130) return -> RETURN datatype . SEMICOLON

    SEMICOLON       shift and go to state 109


state 53

    (54) datatype -> number .
    (42) operations -> number . operand number
    (44) operations -> number .
    (45) operations -> number . operand NAME operations
    (47) operations -> number . operand NAME
    (50) operations -> number . operand number operand operations
    (60) operand -> . SUMA
    (61) operand -> . RESTA
    (62) operand -> . MULTIPLICACION
    (63) operand -> . DIVISION

  ! reduce/reduce conflict for SEMICOLON resolved using rule 44 (operations -> number .)
  ! reduce/reduce conflict for COLON resolved using rule 44 (operations -> number .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 44 (operations -> number .)
  ! reduce/reduce conflict for COMMA resolved using rule 44 (operations -> number .)
  ! reduce/reduce conflict for CLOSE_BRACE resolved using rule 44 (operations -> number .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 44 (operations -> number .)
    SEMICOLON       reduce using rule 44 (operations -> number .)
    COLON           reduce using rule 44 (operations -> number .)
    CLOSE_PARENTHESIS reduce using rule 44 (operations -> number .)
    COMMA           reduce using rule 44 (operations -> number .)
    CLOSE_BRACE     reduce using rule 44 (operations -> number .)
    CLOSE_BRACKET   reduce using rule 44 (operations -> number .)
    SUMA            shift and go to state 111
    RESTA           shift and go to state 112
    MULTIPLICACION  shift and go to state 113
    DIVISION        shift and go to state 114

  ! SEMICOLON       [ reduce using rule 54 (datatype -> number .) ]
  ! COLON           [ reduce using rule 54 (datatype -> number .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 54 (datatype -> number .) ]
  ! COMMA           [ reduce using rule 54 (datatype -> number .) ]
  ! CLOSE_BRACE     [ reduce using rule 54 (datatype -> number .) ]
  ! CLOSE_BRACKET   [ reduce using rule 54 (datatype -> number .) ]

    operand                        shift and go to state 110

state 54

    (55) datatype -> NAME .
    (43) operations -> NAME .
    (46) operations -> NAME . operand number operations
    (48) operations -> NAME . operand number
    (49) operations -> NAME . operand NAME operations
    (51) operations -> NAME . SUMA SUMA
    (52) operations -> NAME . operand NAME
    (53) operations -> NAME . RESTA RESTA
    (60) operand -> . SUMA
    (61) operand -> . RESTA
    (62) operand -> . MULTIPLICACION
    (63) operand -> . DIVISION

  ! reduce/reduce conflict for SEMICOLON resolved using rule 43 (operations -> NAME .)
  ! reduce/reduce conflict for COLON resolved using rule 43 (operations -> NAME .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 43 (operations -> NAME .)
  ! reduce/reduce conflict for COMMA resolved using rule 43 (operations -> NAME .)
  ! reduce/reduce conflict for CLOSE_BRACE resolved using rule 43 (operations -> NAME .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 43 (operations -> NAME .)
    SEMICOLON       reduce using rule 43 (operations -> NAME .)
    COLON           reduce using rule 43 (operations -> NAME .)
    CLOSE_PARENTHESIS reduce using rule 43 (operations -> NAME .)
    COMMA           reduce using rule 43 (operations -> NAME .)
    CLOSE_BRACE     reduce using rule 43 (operations -> NAME .)
    CLOSE_BRACKET   reduce using rule 43 (operations -> NAME .)
    SUMA            shift and go to state 116
    RESTA           shift and go to state 117
    MULTIPLICACION  shift and go to state 113
    DIVISION        shift and go to state 114

  ! SEMICOLON       [ reduce using rule 55 (datatype -> NAME .) ]
  ! COLON           [ reduce using rule 55 (datatype -> NAME .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 55 (datatype -> NAME .) ]
  ! COMMA           [ reduce using rule 55 (datatype -> NAME .) ]
  ! CLOSE_BRACE     [ reduce using rule 55 (datatype -> NAME .) ]
  ! CLOSE_BRACKET   [ reduce using rule 55 (datatype -> NAME .) ]

    operand                        shift and go to state 115

state 55

    (56) datatype -> STRING .

    SEMICOLON       reduce using rule 56 (datatype -> STRING .)
    COLON           reduce using rule 56 (datatype -> STRING .)
    CLOSE_PARENTHESIS reduce using rule 56 (datatype -> STRING .)
    COMMA           reduce using rule 56 (datatype -> STRING .)
    CLOSE_BRACE     reduce using rule 56 (datatype -> STRING .)
    CLOSE_BRACKET   reduce using rule 56 (datatype -> STRING .)


state 56

    (57) datatype -> CHAR .

    SEMICOLON       reduce using rule 57 (datatype -> CHAR .)
    COLON           reduce using rule 57 (datatype -> CHAR .)
    COMMA           reduce using rule 57 (datatype -> CHAR .)
    CLOSE_BRACKET   reduce using rule 57 (datatype -> CHAR .)
    CLOSE_PARENTHESIS reduce using rule 57 (datatype -> CHAR .)
    CLOSE_BRACE     reduce using rule 57 (datatype -> CHAR .)


state 57

    (58) datatype -> operations .

    SEMICOLON       reduce using rule 58 (datatype -> operations .)
    COLON           reduce using rule 58 (datatype -> operations .)
    COMMA           reduce using rule 58 (datatype -> operations .)
    CLOSE_BRACKET   reduce using rule 58 (datatype -> operations .)
    CLOSE_PARENTHESIS reduce using rule 58 (datatype -> operations .)
    CLOSE_BRACE     reduce using rule 58 (datatype -> operations .)


state 58

    (59) datatype -> dataStruct .

    SEMICOLON       reduce using rule 59 (datatype -> dataStruct .)
    COLON           reduce using rule 59 (datatype -> dataStruct .)
    COMMA           reduce using rule 59 (datatype -> dataStruct .)
    CLOSE_BRACKET   reduce using rule 59 (datatype -> dataStruct .)
    CLOSE_PARENTHESIS reduce using rule 59 (datatype -> dataStruct .)
    CLOSE_BRACE     reduce using rule 59 (datatype -> dataStruct .)


state 59

    (16) number -> INTEGER .

    SUMA            reduce using rule 16 (number -> INTEGER .)
    RESTA           reduce using rule 16 (number -> INTEGER .)
    MULTIPLICACION  reduce using rule 16 (number -> INTEGER .)
    DIVISION        reduce using rule 16 (number -> INTEGER .)
    SEMICOLON       reduce using rule 16 (number -> INTEGER .)
    COLON           reduce using rule 16 (number -> INTEGER .)
    COMMA           reduce using rule 16 (number -> INTEGER .)
    CLOSE_BRACKET   reduce using rule 16 (number -> INTEGER .)
    IGUALIGUAL      reduce using rule 16 (number -> INTEGER .)
    DIFERENTE       reduce using rule 16 (number -> INTEGER .)
    MAYORQUE        reduce using rule 16 (number -> INTEGER .)
    MAYORIGUALQUE   reduce using rule 16 (number -> INTEGER .)
    MENORQUE        reduce using rule 16 (number -> INTEGER .)
    MENORIGUALQUE   reduce using rule 16 (number -> INTEGER .)
    CLOSE_PARENTHESIS reduce using rule 16 (number -> INTEGER .)
    CLOSE_BRACE     reduce using rule 16 (number -> INTEGER .)
    NAME            reduce using rule 16 (number -> INTEGER .)
    INTEGER         reduce using rule 16 (number -> INTEGER .)
    FLOAT           reduce using rule 16 (number -> INTEGER .)
    OPEN_PARENTHESIS reduce using rule 16 (number -> INTEGER .)
    AND             reduce using rule 16 (number -> INTEGER .)
    OR              reduce using rule 16 (number -> INTEGER .)


state 60

    (17) number -> FLOAT .

    SUMA            reduce using rule 17 (number -> FLOAT .)
    RESTA           reduce using rule 17 (number -> FLOAT .)
    MULTIPLICACION  reduce using rule 17 (number -> FLOAT .)
    DIVISION        reduce using rule 17 (number -> FLOAT .)
    SEMICOLON       reduce using rule 17 (number -> FLOAT .)
    COLON           reduce using rule 17 (number -> FLOAT .)
    COMMA           reduce using rule 17 (number -> FLOAT .)
    CLOSE_BRACKET   reduce using rule 17 (number -> FLOAT .)
    IGUALIGUAL      reduce using rule 17 (number -> FLOAT .)
    DIFERENTE       reduce using rule 17 (number -> FLOAT .)
    MAYORQUE        reduce using rule 17 (number -> FLOAT .)
    MAYORIGUALQUE   reduce using rule 17 (number -> FLOAT .)
    MENORQUE        reduce using rule 17 (number -> FLOAT .)
    MENORIGUALQUE   reduce using rule 17 (number -> FLOAT .)
    CLOSE_PARENTHESIS reduce using rule 17 (number -> FLOAT .)
    CLOSE_BRACE     reduce using rule 17 (number -> FLOAT .)
    NAME            reduce using rule 17 (number -> FLOAT .)
    INTEGER         reduce using rule 17 (number -> FLOAT .)
    FLOAT           reduce using rule 17 (number -> FLOAT .)
    OPEN_PARENTHESIS reduce using rule 17 (number -> FLOAT .)
    AND             reduce using rule 17 (number -> FLOAT .)
    OR              reduce using rule 17 (number -> FLOAT .)


state 61

    (18) number -> OPEN_PARENTHESIS . RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> OPEN_PARENTHESIS . RESTA FLOAT CLOSE_PARENTHESIS

    RESTA           shift and go to state 118


state 62

    (126) function -> FUNCTION NAME . OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (127) function -> FUNCTION NAME . OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    OPEN_PARENTHESIS shift and go to state 119


state 63

    (88) escribirMap -> OPEN_BRACE claveValor . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 120


state 64

    (92) generarMap -> OPEN_BRACE tuplas . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 121


state 65

    (89) claveValor -> clave . COLON datatype
    (90) claveValor -> clave . COLON datatype COMMA claveValor

    COLON           shift and go to state 122


state 66

    (91) clave -> datatype .

    COLON           reduce using rule 91 (clave -> datatype .)
    CLOSE_PARENTHESIS reduce using rule 91 (clave -> datatype .)


state 67

    (93) tuplas -> tupla .
    (94) tuplas -> tupla . COMMA tuplas

    CLOSE_BRACE     reduce using rule 93 (tuplas -> tupla .)
    COMMA           shift and go to state 123


state 68

    (95) tupla -> OPEN_BRACKET . datatype CLOSE_BRACKET SEMICOLON
    (96) tupla -> OPEN_BRACKET . datatype COMMA datatype CLOSE_BRACKET SEMICOLON
    (82) array -> OPEN_BRACKET . items CLOSE_BRACKET
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (109) items -> . item
    (110) items -> . item COMMA items
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (111) item -> . number
    (112) item -> . STRING
    (113) item -> . expBoolean
    (114) item -> . NAME
    (115) item -> . datatype
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (122) expBoolean -> . controlArg
    (123) expBoolean -> . bool
    (124) expBoolean -> . NOT expBoolean
    (125) expBoolean -> . expBoolean logicalOperator expBoolean
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (38) controlArg -> . element clause element
    (71) bool -> . TRUE
    (72) bool -> . FALSE
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME

    NAME            shift and go to state 126
    STRING          shift and go to state 127
    CHAR            shift and go to state 56
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    NOT             shift and go to state 78
    OPEN_BRACE      shift and go to state 27
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    datatype                       shift and go to state 124
    items                          shift and go to state 69
    number                         shift and go to state 125
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    item                           shift and go to state 70
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    expBoolean                     shift and go to state 73
    element                        shift and go to state 79
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35
    controlArg                     shift and go to state 76
    bool                           shift and go to state 77

state 69

    (82) array -> OPEN_BRACKET items . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 128


state 70

    (109) items -> item .
    (110) items -> item . COMMA items

    CLOSE_BRACKET   reduce using rule 109 (items -> item .)
    CLOSE_PARENTHESIS reduce using rule 109 (items -> item .)
    COMMA           shift and go to state 129


state 71

    (111) item -> number .
    (54) datatype -> number .
    (42) operations -> number . operand number
    (44) operations -> number .
    (45) operations -> number . operand NAME operations
    (47) operations -> number . operand NAME
    (50) operations -> number . operand number operand operations
    (117) element -> number .
    (60) operand -> . SUMA
    (61) operand -> . RESTA
    (62) operand -> . MULTIPLICACION
    (63) operand -> . DIVISION

  ! reduce/reduce conflict for COMMA resolved using rule 54 (datatype -> number .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 54 (datatype -> number .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 54 (datatype -> number .)
  ! reduce/reduce conflict for COMMA resolved using rule 44 (operations -> number .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 44 (operations -> number .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 44 (operations -> number .)
    COMMA           reduce using rule 44 (operations -> number .)
    CLOSE_BRACKET   reduce using rule 44 (operations -> number .)
    CLOSE_PARENTHESIS reduce using rule 44 (operations -> number .)
    IGUALIGUAL      reduce using rule 117 (element -> number .)
    DIFERENTE       reduce using rule 117 (element -> number .)
    MAYORQUE        reduce using rule 117 (element -> number .)
    MAYORIGUALQUE   reduce using rule 117 (element -> number .)
    MENORQUE        reduce using rule 117 (element -> number .)
    MENORIGUALQUE   reduce using rule 117 (element -> number .)
    SUMA            shift and go to state 111
    RESTA           shift and go to state 112
    MULTIPLICACION  shift and go to state 113
    DIVISION        shift and go to state 114

  ! COMMA           [ reduce using rule 111 (item -> number .) ]
  ! CLOSE_BRACKET   [ reduce using rule 111 (item -> number .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 111 (item -> number .) ]
  ! COMMA           [ reduce using rule 54 (datatype -> number .) ]
  ! CLOSE_BRACKET   [ reduce using rule 54 (datatype -> number .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 54 (datatype -> number .) ]

    operand                        shift and go to state 110

state 72

    (112) item -> STRING .
    (56) datatype -> STRING .
    (116) element -> STRING .

  ! reduce/reduce conflict for COMMA resolved using rule 56 (datatype -> STRING .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 56 (datatype -> STRING .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 56 (datatype -> STRING .)
    COMMA           reduce using rule 56 (datatype -> STRING .)
    CLOSE_BRACKET   reduce using rule 56 (datatype -> STRING .)
    CLOSE_PARENTHESIS reduce using rule 56 (datatype -> STRING .)
    IGUALIGUAL      reduce using rule 116 (element -> STRING .)
    DIFERENTE       reduce using rule 116 (element -> STRING .)
    MAYORQUE        reduce using rule 116 (element -> STRING .)
    MAYORIGUALQUE   reduce using rule 116 (element -> STRING .)
    MENORQUE        reduce using rule 116 (element -> STRING .)
    MENORIGUALQUE   reduce using rule 116 (element -> STRING .)

  ! COMMA           [ reduce using rule 112 (item -> STRING .) ]
  ! CLOSE_BRACKET   [ reduce using rule 112 (item -> STRING .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 112 (item -> STRING .) ]


state 73

    (113) item -> expBoolean .
    (125) expBoolean -> expBoolean . logicalOperator expBoolean
    (120) logicalOperator -> . AND
    (121) logicalOperator -> . OR

    COMMA           reduce using rule 113 (item -> expBoolean .)
    CLOSE_BRACKET   reduce using rule 113 (item -> expBoolean .)
    CLOSE_PARENTHESIS reduce using rule 113 (item -> expBoolean .)
    AND             shift and go to state 131
    OR              shift and go to state 132

    logicalOperator                shift and go to state 130

state 74

    (114) item -> NAME .
    (55) datatype -> NAME .
    (43) operations -> NAME .
    (46) operations -> NAME . operand number operations
    (48) operations -> NAME . operand number
    (49) operations -> NAME . operand NAME operations
    (51) operations -> NAME . SUMA SUMA
    (52) operations -> NAME . operand NAME
    (53) operations -> NAME . RESTA RESTA
    (118) element -> NAME .
    (60) operand -> . SUMA
    (61) operand -> . RESTA
    (62) operand -> . MULTIPLICACION
    (63) operand -> . DIVISION

  ! reduce/reduce conflict for COMMA resolved using rule 55 (datatype -> NAME .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 55 (datatype -> NAME .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 55 (datatype -> NAME .)
  ! reduce/reduce conflict for COMMA resolved using rule 43 (operations -> NAME .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 43 (operations -> NAME .)
  ! reduce/reduce conflict for CLOSE_PARENTHESIS resolved using rule 43 (operations -> NAME .)
    COMMA           reduce using rule 43 (operations -> NAME .)
    CLOSE_BRACKET   reduce using rule 43 (operations -> NAME .)
    CLOSE_PARENTHESIS reduce using rule 43 (operations -> NAME .)
    SUMA            shift and go to state 116
    RESTA           shift and go to state 117
    IGUALIGUAL      reduce using rule 118 (element -> NAME .)
    DIFERENTE       reduce using rule 118 (element -> NAME .)
    MAYORQUE        reduce using rule 118 (element -> NAME .)
    MAYORIGUALQUE   reduce using rule 118 (element -> NAME .)
    MENORQUE        reduce using rule 118 (element -> NAME .)
    MENORIGUALQUE   reduce using rule 118 (element -> NAME .)
    MULTIPLICACION  shift and go to state 113
    DIVISION        shift and go to state 114

  ! COMMA           [ reduce using rule 114 (item -> NAME .) ]
  ! CLOSE_BRACKET   [ reduce using rule 114 (item -> NAME .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 114 (item -> NAME .) ]
  ! COMMA           [ reduce using rule 55 (datatype -> NAME .) ]
  ! CLOSE_BRACKET   [ reduce using rule 55 (datatype -> NAME .) ]
  ! CLOSE_PARENTHESIS [ reduce using rule 55 (datatype -> NAME .) ]

    operand                        shift and go to state 115

state 75

    (115) item -> datatype .

    COMMA           reduce using rule 115 (item -> datatype .)
    CLOSE_BRACKET   reduce using rule 115 (item -> datatype .)
    CLOSE_PARENTHESIS reduce using rule 115 (item -> datatype .)


state 76

    (122) expBoolean -> controlArg .

    AND             reduce using rule 122 (expBoolean -> controlArg .)
    OR              reduce using rule 122 (expBoolean -> controlArg .)
    COMMA           reduce using rule 122 (expBoolean -> controlArg .)
    CLOSE_BRACKET   reduce using rule 122 (expBoolean -> controlArg .)
    CLOSE_PARENTHESIS reduce using rule 122 (expBoolean -> controlArg .)
    SEMICOLON       reduce using rule 122 (expBoolean -> controlArg .)


state 77

    (123) expBoolean -> bool .

    AND             reduce using rule 123 (expBoolean -> bool .)
    OR              reduce using rule 123 (expBoolean -> bool .)
    COMMA           reduce using rule 123 (expBoolean -> bool .)
    CLOSE_BRACKET   reduce using rule 123 (expBoolean -> bool .)
    CLOSE_PARENTHESIS reduce using rule 123 (expBoolean -> bool .)
    SEMICOLON       reduce using rule 123 (expBoolean -> bool .)


state 78

    (124) expBoolean -> NOT . expBoolean
    (122) expBoolean -> . controlArg
    (123) expBoolean -> . bool
    (124) expBoolean -> . NOT expBoolean
    (125) expBoolean -> . expBoolean logicalOperator expBoolean
    (38) controlArg -> . element clause element
    (71) bool -> . TRUE
    (72) bool -> . FALSE
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    NOT             shift and go to state 78
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 134
    NAME            shift and go to state 136
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    expBoolean                     shift and go to state 133
    controlArg                     shift and go to state 76
    bool                           shift and go to state 77
    element                        shift and go to state 79
    number                         shift and go to state 135

state 79

    (38) controlArg -> element . clause element
    (76) clause -> . IGUALIGUAL
    (77) clause -> . DIFERENTE
    (78) clause -> . MAYORQUE
    (79) clause -> . MAYORIGUALQUE
    (80) clause -> . MENORQUE
    (81) clause -> . MENORIGUALQUE

    IGUALIGUAL      shift and go to state 138
    DIFERENTE       shift and go to state 139
    MAYORQUE        shift and go to state 140
    MAYORIGUALQUE   shift and go to state 141
    MENORQUE        shift and go to state 142
    MENORIGUALQUE   shift and go to state 143

    clause                         shift and go to state 137

state 80

    (71) bool -> TRUE .

    AND             reduce using rule 71 (bool -> TRUE .)
    OR              reduce using rule 71 (bool -> TRUE .)
    COMMA           reduce using rule 71 (bool -> TRUE .)
    CLOSE_BRACKET   reduce using rule 71 (bool -> TRUE .)
    CLOSE_PARENTHESIS reduce using rule 71 (bool -> TRUE .)
    SEMICOLON       reduce using rule 71 (bool -> TRUE .)


state 81

    (72) bool -> FALSE .

    AND             reduce using rule 72 (bool -> FALSE .)
    OR              reduce using rule 72 (bool -> FALSE .)
    COMMA           reduce using rule 72 (bool -> FALSE .)
    CLOSE_BRACKET   reduce using rule 72 (bool -> FALSE .)
    CLOSE_PARENTHESIS reduce using rule 72 (bool -> FALSE .)
    SEMICOLON       reduce using rule 72 (bool -> FALSE .)


state 82

    (83) array -> NEW ARRAY . OPEN_PARENTHESIS items CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 144


state 83

    (103) set -> NEW SET . OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> NEW SET . OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> NEW SET . OPEN_PARENTHESIS element CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 145


state 84

    (87) iniciarMap -> NEW MAP . OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 146


state 85

    (28) while -> WHILE OPEN_PARENTHESIS . controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (29) while -> WHILE OPEN_PARENTHESIS . bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (38) controlArg -> . element clause element
    (71) bool -> . TRUE
    (72) bool -> . FALSE
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 134
    NAME            shift and go to state 136
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    controlArg                     shift and go to state 147
    bool                           shift and go to state 148
    element                        shift and go to state 79
    number                         shift and go to state 135

state 86

    (39) for -> FOR OPEN_PARENTHESIS . inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (40) inicialization -> . type NAME IGUAL number
    (41) inicialization -> . NAME IGUAL number
    (73) type -> . CONST
    (74) type -> . LET
    (75) type -> . VAR

    NAME            shift and go to state 151
    CONST           shift and go to state 28
    LET             shift and go to state 29
    VAR             shift and go to state 30

    inicialization                 shift and go to state 149
    type                           shift and go to state 150

state 87

    (31) if -> soloIf elseIf .
    (32) if -> soloIf elseIf . else
    (37) else -> . ELSE OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        reduce using rule 31 (if -> soloIf elseIf .)
    LONGCOMMENT     reduce using rule 31 (if -> soloIf elseIf .)
    NAME            reduce using rule 31 (if -> soloIf elseIf .)
    PRINT           reduce using rule 31 (if -> soloIf elseIf .)
    RETURN          reduce using rule 31 (if -> soloIf elseIf .)
    FUNCTION        reduce using rule 31 (if -> soloIf elseIf .)
    CONST           reduce using rule 31 (if -> soloIf elseIf .)
    LET             reduce using rule 31 (if -> soloIf elseIf .)
    VAR             reduce using rule 31 (if -> soloIf elseIf .)
    OPEN_BRACKET    reduce using rule 31 (if -> soloIf elseIf .)
    NEW             reduce using rule 31 (if -> soloIf elseIf .)
    WHILE           reduce using rule 31 (if -> soloIf elseIf .)
    FOR             reduce using rule 31 (if -> soloIf elseIf .)
    OPEN_BRACE      reduce using rule 31 (if -> soloIf elseIf .)
    IF              reduce using rule 31 (if -> soloIf elseIf .)
    $end            reduce using rule 31 (if -> soloIf elseIf .)
    CLOSE_BRACE     reduce using rule 31 (if -> soloIf elseIf .)
    ELSE            shift and go to state 90

    else                           shift and go to state 152

state 88

    (33) if -> soloIf else .

    COMMENTS        reduce using rule 33 (if -> soloIf else .)
    LONGCOMMENT     reduce using rule 33 (if -> soloIf else .)
    NAME            reduce using rule 33 (if -> soloIf else .)
    PRINT           reduce using rule 33 (if -> soloIf else .)
    RETURN          reduce using rule 33 (if -> soloIf else .)
    FUNCTION        reduce using rule 33 (if -> soloIf else .)
    CONST           reduce using rule 33 (if -> soloIf else .)
    LET             reduce using rule 33 (if -> soloIf else .)
    VAR             reduce using rule 33 (if -> soloIf else .)
    OPEN_BRACKET    reduce using rule 33 (if -> soloIf else .)
    NEW             reduce using rule 33 (if -> soloIf else .)
    WHILE           reduce using rule 33 (if -> soloIf else .)
    FOR             reduce using rule 33 (if -> soloIf else .)
    OPEN_BRACE      reduce using rule 33 (if -> soloIf else .)
    IF              reduce using rule 33 (if -> soloIf else .)
    $end            reduce using rule 33 (if -> soloIf else .)
    CLOSE_BRACE     reduce using rule 33 (if -> soloIf else .)


state 89

    (35) elseIf -> ELSEIF . OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (36) elseIf -> ELSEIF . OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf

    OPEN_PARENTHESIS shift and go to state 153


state 90

    (37) else -> ELSE . OPEN_BRACE expression CLOSE_BRACE

    OPEN_BRACE      shift and go to state 154


state 91

    (34) soloIf -> IF OPEN_PARENTHESIS . controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (38) controlArg -> . element clause element
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    STRING          shift and go to state 134
    NAME            shift and go to state 136
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    controlArg                     shift and go to state 155
    element                        shift and go to state 79
    number                         shift and go to state 135

state 92

    (20) variable -> type NAME IGUAL . datatype SEMICOLON
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 54
    STRING          shift and go to state 55
    CHAR            shift and go to state 56
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    OPEN_BRACE      shift and go to state 27

    datatype                       shift and go to state 156
    number                         shift and go to state 53
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 93

    (55) datatype -> NAME .
    (118) element -> NAME .
    (43) operations -> NAME .
    (46) operations -> NAME . operand number operations
    (48) operations -> NAME . operand number
    (49) operations -> NAME . operand NAME operations
    (51) operations -> NAME . SUMA SUMA
    (52) operations -> NAME . operand NAME
    (53) operations -> NAME . RESTA RESTA
    (60) operand -> . SUMA
    (61) operand -> . RESTA
    (62) operand -> . MULTIPLICACION
    (63) operand -> . DIVISION

  ! reduce/reduce conflict for SEMICOLON resolved using rule 55 (datatype -> NAME .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 43 (operations -> NAME .)
    SEMICOLON       reduce using rule 43 (operations -> NAME .)
    SUMA            shift and go to state 116
    RESTA           shift and go to state 117
    MULTIPLICACION  shift and go to state 113
    DIVISION        shift and go to state 114

  ! SEMICOLON       [ reduce using rule 55 (datatype -> NAME .) ]
  ! SEMICOLON       [ reduce using rule 118 (element -> NAME .) ]

    operand                        shift and go to state 115

state 94

    (21) variable -> NAME IGUAL datatype . SEMICOLON

    SEMICOLON       shift and go to state 157


state 95

    (119) declaration -> NAME IGUAL element . SEMICOLON

    SEMICOLON       shift and go to state 158


state 96

    (54) datatype -> number .
    (117) element -> number .
    (42) operations -> number . operand number
    (44) operations -> number .
    (45) operations -> number . operand NAME operations
    (47) operations -> number . operand NAME
    (50) operations -> number . operand number operand operations
    (60) operand -> . SUMA
    (61) operand -> . RESTA
    (62) operand -> . MULTIPLICACION
    (63) operand -> . DIVISION

  ! reduce/reduce conflict for SEMICOLON resolved using rule 54 (datatype -> number .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 44 (operations -> number .)
    SEMICOLON       reduce using rule 44 (operations -> number .)
    SUMA            shift and go to state 111
    RESTA           shift and go to state 112
    MULTIPLICACION  shift and go to state 113
    DIVISION        shift and go to state 114

  ! SEMICOLON       [ reduce using rule 54 (datatype -> number .) ]
  ! SEMICOLON       [ reduce using rule 117 (element -> number .) ]

    operand                        shift and go to state 110

state 97

    (56) datatype -> STRING .
    (116) element -> STRING .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 56 (datatype -> STRING .)
    SEMICOLON       reduce using rule 56 (datatype -> STRING .)

  ! SEMICOLON       [ reduce using rule 116 (element -> STRING .) ]


state 98

    (106) methodsSet -> NAME POINT ADD . OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 159


state 99

    (107) methodsSet -> NAME POINT DELETE . OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 160


state 100

    (108) methodsSet -> NAME POINT CLEAR . OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (97) mapFunctions -> NAME POINT CLEAR . OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 161


state 101

    (98) mapFunctions -> NAME POINT GET . OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 162


state 102

    (99) mapFunctions -> NAME POINT HAS . OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 163


state 103

    (100) arrayFn -> NAME POINT POP . OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 164


state 104

    (101) arrayFn -> NAME POINT PUSH . OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 165


state 105

    (102) arrayFn -> NAME POINT UNSHIFT . OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 166


state 106

    (70) asigOp -> NAME operadorAsig number . SEMICOLON

    SEMICOLON       shift and go to state 167


state 107

    (131) print -> PRINT OPEN_PARENTHESIS datatype . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 168


state 108

    (132) print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 169


state 109

    (130) return -> RETURN datatype SEMICOLON .

    COMMENTS        reduce using rule 130 (return -> RETURN datatype SEMICOLON .)
    LONGCOMMENT     reduce using rule 130 (return -> RETURN datatype SEMICOLON .)
    NAME            reduce using rule 130 (return -> RETURN datatype SEMICOLON .)
    PRINT           reduce using rule 130 (return -> RETURN datatype SEMICOLON .)
    RETURN          reduce using rule 130 (return -> RETURN datatype SEMICOLON .)
    FUNCTION        reduce using rule 130 (return -> RETURN datatype SEMICOLON .)
    CONST           reduce using rule 130 (return -> RETURN datatype SEMICOLON .)
    LET             reduce using rule 130 (return -> RETURN datatype SEMICOLON .)
    VAR             reduce using rule 130 (return -> RETURN datatype SEMICOLON .)
    OPEN_BRACKET    reduce using rule 130 (return -> RETURN datatype SEMICOLON .)
    NEW             reduce using rule 130 (return -> RETURN datatype SEMICOLON .)
    WHILE           reduce using rule 130 (return -> RETURN datatype SEMICOLON .)
    FOR             reduce using rule 130 (return -> RETURN datatype SEMICOLON .)
    OPEN_BRACE      reduce using rule 130 (return -> RETURN datatype SEMICOLON .)
    IF              reduce using rule 130 (return -> RETURN datatype SEMICOLON .)
    $end            reduce using rule 130 (return -> RETURN datatype SEMICOLON .)
    CLOSE_BRACE     reduce using rule 130 (return -> RETURN datatype SEMICOLON .)


state 110

    (42) operations -> number operand . number
    (45) operations -> number operand . NAME operations
    (47) operations -> number operand . NAME
    (50) operations -> number operand . number operand operations
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    NAME            shift and go to state 171
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    number                         shift and go to state 170

state 111

    (60) operand -> SUMA .

    NAME            reduce using rule 60 (operand -> SUMA .)
    INTEGER         reduce using rule 60 (operand -> SUMA .)
    FLOAT           reduce using rule 60 (operand -> SUMA .)
    OPEN_PARENTHESIS reduce using rule 60 (operand -> SUMA .)


state 112

    (61) operand -> RESTA .

    NAME            reduce using rule 61 (operand -> RESTA .)
    INTEGER         reduce using rule 61 (operand -> RESTA .)
    FLOAT           reduce using rule 61 (operand -> RESTA .)
    OPEN_PARENTHESIS reduce using rule 61 (operand -> RESTA .)


state 113

    (62) operand -> MULTIPLICACION .

    NAME            reduce using rule 62 (operand -> MULTIPLICACION .)
    INTEGER         reduce using rule 62 (operand -> MULTIPLICACION .)
    FLOAT           reduce using rule 62 (operand -> MULTIPLICACION .)
    OPEN_PARENTHESIS reduce using rule 62 (operand -> MULTIPLICACION .)


state 114

    (63) operand -> DIVISION .

    NAME            reduce using rule 63 (operand -> DIVISION .)
    INTEGER         reduce using rule 63 (operand -> DIVISION .)
    FLOAT           reduce using rule 63 (operand -> DIVISION .)
    OPEN_PARENTHESIS reduce using rule 63 (operand -> DIVISION .)


state 115

    (46) operations -> NAME operand . number operations
    (48) operations -> NAME operand . number
    (49) operations -> NAME operand . NAME operations
    (52) operations -> NAME operand . NAME
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    NAME            shift and go to state 172
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    number                         shift and go to state 173

state 116

    (51) operations -> NAME SUMA . SUMA
    (60) operand -> SUMA .

    SUMA            shift and go to state 174
    NAME            reduce using rule 60 (operand -> SUMA .)
    INTEGER         reduce using rule 60 (operand -> SUMA .)
    FLOAT           reduce using rule 60 (operand -> SUMA .)
    OPEN_PARENTHESIS reduce using rule 60 (operand -> SUMA .)


state 117

    (53) operations -> NAME RESTA . RESTA
    (61) operand -> RESTA .

    RESTA           shift and go to state 175
    NAME            reduce using rule 61 (operand -> RESTA .)
    INTEGER         reduce using rule 61 (operand -> RESTA .)
    FLOAT           reduce using rule 61 (operand -> RESTA .)
    OPEN_PARENTHESIS reduce using rule 61 (operand -> RESTA .)


state 118

    (18) number -> OPEN_PARENTHESIS RESTA . INTEGER CLOSE_PARENTHESIS
    (19) number -> OPEN_PARENTHESIS RESTA . FLOAT CLOSE_PARENTHESIS

    INTEGER         shift and go to state 176
    FLOAT           shift and go to state 177


state 119

    (126) function -> FUNCTION NAME OPEN_PARENTHESIS . CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (127) function -> FUNCTION NAME OPEN_PARENTHESIS . parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (128) parameter -> . datatype
    (129) parameter -> . datatype COMMA parameter
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    CLOSE_PARENTHESIS shift and go to state 178
    NAME            shift and go to state 54
    STRING          shift and go to state 55
    CHAR            shift and go to state 56
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    OPEN_BRACE      shift and go to state 27

    parameter                      shift and go to state 179
    datatype                       shift and go to state 180
    number                         shift and go to state 53
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 120

    (88) escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .

    COMMENTS        reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    NAME            reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    PRINT           reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    RETURN          reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    FUNCTION        reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    CONST           reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    LET             reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    VAR             reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    NEW             reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    WHILE           reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    FOR             reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    IF              reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    $end            reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    SEMICOLON       reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    COLON           reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    COMMA           reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    CLOSE_BRACKET   reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)
    CLOSE_PARENTHESIS reduce using rule 88 (escribirMap -> OPEN_BRACE claveValor CLOSE_BRACE .)


state 121

    (92) generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .

    COMMENTS        reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    NAME            reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    PRINT           reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    RETURN          reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    FUNCTION        reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    CONST           reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    LET             reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    VAR             reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    NEW             reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    WHILE           reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    FOR             reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    IF              reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    $end            reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    SEMICOLON       reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    COLON           reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    COMMA           reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    CLOSE_BRACKET   reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)
    CLOSE_PARENTHESIS reduce using rule 92 (generarMap -> OPEN_BRACE tuplas CLOSE_BRACE .)


state 122

    (89) claveValor -> clave COLON . datatype
    (90) claveValor -> clave COLON . datatype COMMA claveValor
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 54
    STRING          shift and go to state 55
    CHAR            shift and go to state 56
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    OPEN_BRACE      shift and go to state 27

    datatype                       shift and go to state 181
    number                         shift and go to state 53
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 123

    (94) tuplas -> tupla COMMA . tuplas
    (93) tuplas -> . tupla
    (94) tuplas -> . tupla COMMA tuplas
    (95) tupla -> . OPEN_BRACKET datatype CLOSE_BRACKET SEMICOLON
    (96) tupla -> . OPEN_BRACKET datatype COMMA datatype CLOSE_BRACKET SEMICOLON

    OPEN_BRACKET    shift and go to state 183

    tupla                          shift and go to state 67
    tuplas                         shift and go to state 182

state 124

    (95) tupla -> OPEN_BRACKET datatype . CLOSE_BRACKET SEMICOLON
    (96) tupla -> OPEN_BRACKET datatype . COMMA datatype CLOSE_BRACKET SEMICOLON
    (115) item -> datatype .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for CLOSE_BRACKET resolved as shift
    CLOSE_BRACKET   shift and go to state 184
    COMMA           shift and go to state 185

  ! COMMA           [ reduce using rule 115 (item -> datatype .) ]
  ! CLOSE_BRACKET   [ reduce using rule 115 (item -> datatype .) ]


state 125

    (54) datatype -> number .
    (42) operations -> number . operand number
    (44) operations -> number .
    (45) operations -> number . operand NAME operations
    (47) operations -> number . operand NAME
    (50) operations -> number . operand number operand operations
    (111) item -> number .
    (117) element -> number .
    (60) operand -> . SUMA
    (61) operand -> . RESTA
    (62) operand -> . MULTIPLICACION
    (63) operand -> . DIVISION

  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 44 (operations -> number .)
  ! reduce/reduce conflict for COMMA resolved using rule 44 (operations -> number .)
  ! reduce/reduce conflict for COMMA resolved using rule 44 (operations -> number .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 44 (operations -> number .)
    CLOSE_BRACKET   reduce using rule 44 (operations -> number .)
    COMMA           reduce using rule 44 (operations -> number .)
    IGUALIGUAL      reduce using rule 117 (element -> number .)
    DIFERENTE       reduce using rule 117 (element -> number .)
    MAYORQUE        reduce using rule 117 (element -> number .)
    MAYORIGUALQUE   reduce using rule 117 (element -> number .)
    MENORQUE        reduce using rule 117 (element -> number .)
    MENORIGUALQUE   reduce using rule 117 (element -> number .)
    SUMA            shift and go to state 111
    RESTA           shift and go to state 112
    MULTIPLICACION  shift and go to state 113
    DIVISION        shift and go to state 114

  ! CLOSE_BRACKET   [ reduce using rule 54 (datatype -> number .) ]
  ! COMMA           [ reduce using rule 54 (datatype -> number .) ]
  ! COMMA           [ reduce using rule 111 (item -> number .) ]
  ! CLOSE_BRACKET   [ reduce using rule 111 (item -> number .) ]

    operand                        shift and go to state 110

state 126

    (55) datatype -> NAME .
    (43) operations -> NAME .
    (46) operations -> NAME . operand number operations
    (48) operations -> NAME . operand number
    (49) operations -> NAME . operand NAME operations
    (51) operations -> NAME . SUMA SUMA
    (52) operations -> NAME . operand NAME
    (53) operations -> NAME . RESTA RESTA
    (114) item -> NAME .
    (118) element -> NAME .
    (60) operand -> . SUMA
    (61) operand -> . RESTA
    (62) operand -> . MULTIPLICACION
    (63) operand -> . DIVISION

  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 43 (operations -> NAME .)
  ! reduce/reduce conflict for COMMA resolved using rule 43 (operations -> NAME .)
  ! reduce/reduce conflict for COMMA resolved using rule 43 (operations -> NAME .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 43 (operations -> NAME .)
    CLOSE_BRACKET   reduce using rule 43 (operations -> NAME .)
    COMMA           reduce using rule 43 (operations -> NAME .)
    SUMA            shift and go to state 116
    RESTA           shift and go to state 117
    IGUALIGUAL      reduce using rule 118 (element -> NAME .)
    DIFERENTE       reduce using rule 118 (element -> NAME .)
    MAYORQUE        reduce using rule 118 (element -> NAME .)
    MAYORIGUALQUE   reduce using rule 118 (element -> NAME .)
    MENORQUE        reduce using rule 118 (element -> NAME .)
    MENORIGUALQUE   reduce using rule 118 (element -> NAME .)
    MULTIPLICACION  shift and go to state 113
    DIVISION        shift and go to state 114

  ! CLOSE_BRACKET   [ reduce using rule 55 (datatype -> NAME .) ]
  ! COMMA           [ reduce using rule 55 (datatype -> NAME .) ]
  ! COMMA           [ reduce using rule 114 (item -> NAME .) ]
  ! CLOSE_BRACKET   [ reduce using rule 114 (item -> NAME .) ]

    operand                        shift and go to state 115

state 127

    (56) datatype -> STRING .
    (112) item -> STRING .
    (116) element -> STRING .

  ! reduce/reduce conflict for COMMA resolved using rule 56 (datatype -> STRING .)
  ! reduce/reduce conflict for CLOSE_BRACKET resolved using rule 56 (datatype -> STRING .)
    CLOSE_BRACKET   reduce using rule 56 (datatype -> STRING .)
    COMMA           reduce using rule 56 (datatype -> STRING .)
    IGUALIGUAL      reduce using rule 116 (element -> STRING .)
    DIFERENTE       reduce using rule 116 (element -> STRING .)
    MAYORQUE        reduce using rule 116 (element -> STRING .)
    MAYORIGUALQUE   reduce using rule 116 (element -> STRING .)
    MENORQUE        reduce using rule 116 (element -> STRING .)
    MENORIGUALQUE   reduce using rule 116 (element -> STRING .)

  ! COMMA           [ reduce using rule 112 (item -> STRING .) ]
  ! CLOSE_BRACKET   [ reduce using rule 112 (item -> STRING .) ]


state 128

    (82) array -> OPEN_BRACKET items CLOSE_BRACKET .

    COMMENTS        reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    LONGCOMMENT     reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    NAME            reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    PRINT           reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    RETURN          reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    FUNCTION        reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    CONST           reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    LET             reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    VAR             reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    OPEN_BRACKET    reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    NEW             reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    WHILE           reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    FOR             reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    OPEN_BRACE      reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    IF              reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    $end            reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    CLOSE_BRACE     reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    SEMICOLON       reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    COLON           reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    COMMA           reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)
    CLOSE_PARENTHESIS reduce using rule 82 (array -> OPEN_BRACKET items CLOSE_BRACKET .)


state 129

    (110) items -> item COMMA . items
    (109) items -> . item
    (110) items -> . item COMMA items
    (111) item -> . number
    (112) item -> . STRING
    (113) item -> . expBoolean
    (114) item -> . NAME
    (115) item -> . datatype
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (122) expBoolean -> . controlArg
    (123) expBoolean -> . bool
    (124) expBoolean -> . NOT expBoolean
    (125) expBoolean -> . expBoolean logicalOperator expBoolean
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (38) controlArg -> . element clause element
    (71) bool -> . TRUE
    (72) bool -> . FALSE
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    STRING          shift and go to state 72
    NAME            shift and go to state 74
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    NOT             shift and go to state 78
    CHAR            shift and go to state 56
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    OPEN_BRACE      shift and go to state 27

    item                           shift and go to state 70
    items                          shift and go to state 186
    number                         shift and go to state 71
    expBoolean                     shift and go to state 73
    datatype                       shift and go to state 75
    controlArg                     shift and go to state 76
    bool                           shift and go to state 77
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    element                        shift and go to state 79
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 130

    (125) expBoolean -> expBoolean logicalOperator . expBoolean
    (122) expBoolean -> . controlArg
    (123) expBoolean -> . bool
    (124) expBoolean -> . NOT expBoolean
    (125) expBoolean -> . expBoolean logicalOperator expBoolean
    (38) controlArg -> . element clause element
    (71) bool -> . TRUE
    (72) bool -> . FALSE
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    NOT             shift and go to state 78
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 134
    NAME            shift and go to state 136
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    expBoolean                     shift and go to state 187
    controlArg                     shift and go to state 76
    bool                           shift and go to state 77
    element                        shift and go to state 79
    number                         shift and go to state 135

state 131

    (120) logicalOperator -> AND .

    NOT             reduce using rule 120 (logicalOperator -> AND .)
    TRUE            reduce using rule 120 (logicalOperator -> AND .)
    FALSE           reduce using rule 120 (logicalOperator -> AND .)
    STRING          reduce using rule 120 (logicalOperator -> AND .)
    NAME            reduce using rule 120 (logicalOperator -> AND .)
    INTEGER         reduce using rule 120 (logicalOperator -> AND .)
    FLOAT           reduce using rule 120 (logicalOperator -> AND .)
    OPEN_PARENTHESIS reduce using rule 120 (logicalOperator -> AND .)


state 132

    (121) logicalOperator -> OR .

    NOT             reduce using rule 121 (logicalOperator -> OR .)
    TRUE            reduce using rule 121 (logicalOperator -> OR .)
    FALSE           reduce using rule 121 (logicalOperator -> OR .)
    STRING          reduce using rule 121 (logicalOperator -> OR .)
    NAME            reduce using rule 121 (logicalOperator -> OR .)
    INTEGER         reduce using rule 121 (logicalOperator -> OR .)
    FLOAT           reduce using rule 121 (logicalOperator -> OR .)
    OPEN_PARENTHESIS reduce using rule 121 (logicalOperator -> OR .)


state 133

    (124) expBoolean -> NOT expBoolean .
    (125) expBoolean -> expBoolean . logicalOperator expBoolean
    (120) logicalOperator -> . AND
    (121) logicalOperator -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    COMMA           reduce using rule 124 (expBoolean -> NOT expBoolean .)
    CLOSE_BRACKET   reduce using rule 124 (expBoolean -> NOT expBoolean .)
    CLOSE_PARENTHESIS reduce using rule 124 (expBoolean -> NOT expBoolean .)
    SEMICOLON       reduce using rule 124 (expBoolean -> NOT expBoolean .)
    AND             shift and go to state 131
    OR              shift and go to state 132

  ! AND             [ reduce using rule 124 (expBoolean -> NOT expBoolean .) ]
  ! OR              [ reduce using rule 124 (expBoolean -> NOT expBoolean .) ]

    logicalOperator                shift and go to state 130

state 134

    (116) element -> STRING .

    IGUALIGUAL      reduce using rule 116 (element -> STRING .)
    DIFERENTE       reduce using rule 116 (element -> STRING .)
    MAYORQUE        reduce using rule 116 (element -> STRING .)
    MAYORIGUALQUE   reduce using rule 116 (element -> STRING .)
    MENORQUE        reduce using rule 116 (element -> STRING .)
    MENORIGUALQUE   reduce using rule 116 (element -> STRING .)
    AND             reduce using rule 116 (element -> STRING .)
    OR              reduce using rule 116 (element -> STRING .)
    COMMA           reduce using rule 116 (element -> STRING .)
    CLOSE_BRACKET   reduce using rule 116 (element -> STRING .)
    CLOSE_PARENTHESIS reduce using rule 116 (element -> STRING .)
    SEMICOLON       reduce using rule 116 (element -> STRING .)


state 135

    (117) element -> number .

    IGUALIGUAL      reduce using rule 117 (element -> number .)
    DIFERENTE       reduce using rule 117 (element -> number .)
    MAYORQUE        reduce using rule 117 (element -> number .)
    MAYORIGUALQUE   reduce using rule 117 (element -> number .)
    MENORQUE        reduce using rule 117 (element -> number .)
    MENORIGUALQUE   reduce using rule 117 (element -> number .)
    AND             reduce using rule 117 (element -> number .)
    OR              reduce using rule 117 (element -> number .)
    COMMA           reduce using rule 117 (element -> number .)
    CLOSE_BRACKET   reduce using rule 117 (element -> number .)
    CLOSE_PARENTHESIS reduce using rule 117 (element -> number .)
    SEMICOLON       reduce using rule 117 (element -> number .)


state 136

    (118) element -> NAME .

    IGUALIGUAL      reduce using rule 118 (element -> NAME .)
    DIFERENTE       reduce using rule 118 (element -> NAME .)
    MAYORQUE        reduce using rule 118 (element -> NAME .)
    MAYORIGUALQUE   reduce using rule 118 (element -> NAME .)
    MENORQUE        reduce using rule 118 (element -> NAME .)
    MENORIGUALQUE   reduce using rule 118 (element -> NAME .)
    AND             reduce using rule 118 (element -> NAME .)
    OR              reduce using rule 118 (element -> NAME .)
    COMMA           reduce using rule 118 (element -> NAME .)
    CLOSE_BRACKET   reduce using rule 118 (element -> NAME .)
    CLOSE_PARENTHESIS reduce using rule 118 (element -> NAME .)
    SEMICOLON       reduce using rule 118 (element -> NAME .)


state 137

    (38) controlArg -> element clause . element
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    STRING          shift and go to state 134
    NAME            shift and go to state 136
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    element                        shift and go to state 188
    number                         shift and go to state 135

state 138

    (76) clause -> IGUALIGUAL .

    STRING          reduce using rule 76 (clause -> IGUALIGUAL .)
    NAME            reduce using rule 76 (clause -> IGUALIGUAL .)
    INTEGER         reduce using rule 76 (clause -> IGUALIGUAL .)
    FLOAT           reduce using rule 76 (clause -> IGUALIGUAL .)
    OPEN_PARENTHESIS reduce using rule 76 (clause -> IGUALIGUAL .)


state 139

    (77) clause -> DIFERENTE .

    STRING          reduce using rule 77 (clause -> DIFERENTE .)
    NAME            reduce using rule 77 (clause -> DIFERENTE .)
    INTEGER         reduce using rule 77 (clause -> DIFERENTE .)
    FLOAT           reduce using rule 77 (clause -> DIFERENTE .)
    OPEN_PARENTHESIS reduce using rule 77 (clause -> DIFERENTE .)


state 140

    (78) clause -> MAYORQUE .

    STRING          reduce using rule 78 (clause -> MAYORQUE .)
    NAME            reduce using rule 78 (clause -> MAYORQUE .)
    INTEGER         reduce using rule 78 (clause -> MAYORQUE .)
    FLOAT           reduce using rule 78 (clause -> MAYORQUE .)
    OPEN_PARENTHESIS reduce using rule 78 (clause -> MAYORQUE .)


state 141

    (79) clause -> MAYORIGUALQUE .

    STRING          reduce using rule 79 (clause -> MAYORIGUALQUE .)
    NAME            reduce using rule 79 (clause -> MAYORIGUALQUE .)
    INTEGER         reduce using rule 79 (clause -> MAYORIGUALQUE .)
    FLOAT           reduce using rule 79 (clause -> MAYORIGUALQUE .)
    OPEN_PARENTHESIS reduce using rule 79 (clause -> MAYORIGUALQUE .)


state 142

    (80) clause -> MENORQUE .

    STRING          reduce using rule 80 (clause -> MENORQUE .)
    NAME            reduce using rule 80 (clause -> MENORQUE .)
    INTEGER         reduce using rule 80 (clause -> MENORQUE .)
    FLOAT           reduce using rule 80 (clause -> MENORQUE .)
    OPEN_PARENTHESIS reduce using rule 80 (clause -> MENORQUE .)


state 143

    (81) clause -> MENORIGUALQUE .

    STRING          reduce using rule 81 (clause -> MENORIGUALQUE .)
    NAME            reduce using rule 81 (clause -> MENORIGUALQUE .)
    INTEGER         reduce using rule 81 (clause -> MENORIGUALQUE .)
    FLOAT           reduce using rule 81 (clause -> MENORIGUALQUE .)
    OPEN_PARENTHESIS reduce using rule 81 (clause -> MENORIGUALQUE .)


state 144

    (83) array -> NEW ARRAY OPEN_PARENTHESIS . items CLOSE_PARENTHESIS
    (109) items -> . item
    (110) items -> . item COMMA items
    (111) item -> . number
    (112) item -> . STRING
    (113) item -> . expBoolean
    (114) item -> . NAME
    (115) item -> . datatype
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (122) expBoolean -> . controlArg
    (123) expBoolean -> . bool
    (124) expBoolean -> . NOT expBoolean
    (125) expBoolean -> . expBoolean logicalOperator expBoolean
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (38) controlArg -> . element clause element
    (71) bool -> . TRUE
    (72) bool -> . FALSE
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    STRING          shift and go to state 72
    NAME            shift and go to state 74
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    NOT             shift and go to state 78
    CHAR            shift and go to state 56
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    OPEN_BRACE      shift and go to state 27

    items                          shift and go to state 189
    item                           shift and go to state 70
    number                         shift and go to state 71
    expBoolean                     shift and go to state 73
    datatype                       shift and go to state 75
    controlArg                     shift and go to state 76
    bool                           shift and go to state 77
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    element                        shift and go to state 79
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 145

    (103) set -> NEW SET OPEN_PARENTHESIS . CLOSE_PARENTHESIS
    (104) set -> NEW SET OPEN_PARENTHESIS . OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> NEW SET OPEN_PARENTHESIS . element CLOSE_PARENTHESIS
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 190
    OPEN_BRACKET    shift and go to state 191
    STRING          shift and go to state 134
    NAME            shift and go to state 136
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    element                        shift and go to state 192
    number                         shift and go to state 135

state 146

    (87) iniciarMap -> NEW MAP OPEN_PARENTHESIS . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 193


state 147

    (28) while -> WHILE OPEN_PARENTHESIS controlArg . CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    CLOSE_PARENTHESIS shift and go to state 194


state 148

    (29) while -> WHILE OPEN_PARENTHESIS bool . CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    CLOSE_PARENTHESIS shift and go to state 195


state 149

    (39) for -> FOR OPEN_PARENTHESIS inicialization . SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    SEMICOLON       shift and go to state 196


state 150

    (40) inicialization -> type . NAME IGUAL number

    NAME            shift and go to state 197


state 151

    (41) inicialization -> NAME . IGUAL number

    IGUAL           shift and go to state 198


state 152

    (32) if -> soloIf elseIf else .

    COMMENTS        reduce using rule 32 (if -> soloIf elseIf else .)
    LONGCOMMENT     reduce using rule 32 (if -> soloIf elseIf else .)
    NAME            reduce using rule 32 (if -> soloIf elseIf else .)
    PRINT           reduce using rule 32 (if -> soloIf elseIf else .)
    RETURN          reduce using rule 32 (if -> soloIf elseIf else .)
    FUNCTION        reduce using rule 32 (if -> soloIf elseIf else .)
    CONST           reduce using rule 32 (if -> soloIf elseIf else .)
    LET             reduce using rule 32 (if -> soloIf elseIf else .)
    VAR             reduce using rule 32 (if -> soloIf elseIf else .)
    OPEN_BRACKET    reduce using rule 32 (if -> soloIf elseIf else .)
    NEW             reduce using rule 32 (if -> soloIf elseIf else .)
    WHILE           reduce using rule 32 (if -> soloIf elseIf else .)
    FOR             reduce using rule 32 (if -> soloIf elseIf else .)
    OPEN_BRACE      reduce using rule 32 (if -> soloIf elseIf else .)
    IF              reduce using rule 32 (if -> soloIf elseIf else .)
    $end            reduce using rule 32 (if -> soloIf elseIf else .)
    CLOSE_BRACE     reduce using rule 32 (if -> soloIf elseIf else .)


state 153

    (35) elseIf -> ELSEIF OPEN_PARENTHESIS . controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (36) elseIf -> ELSEIF OPEN_PARENTHESIS . controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf
    (38) controlArg -> . element clause element
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    STRING          shift and go to state 134
    NAME            shift and go to state 136
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    controlArg                     shift and go to state 199
    element                        shift and go to state 79
    number                         shift and go to state 135

state 154

    (37) else -> ELSE OPEN_BRACE . expression CLOSE_BRACE
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . return
    (12) semiExpression -> . function
    (13) semiExpression -> . COMMENTS
    (14) semiExpression -> . LONGCOMMENT
    (15) semiExpression -> . asigOp
    (20) variable -> . type NAME IGUAL datatype SEMICOLON
    (21) variable -> . NAME IGUAL datatype SEMICOLON
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (22) controlStruct -> . while
    (23) controlStruct -> . for
    (24) controlStruct -> . if
    (106) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (107) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (108) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (97) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (98) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (99) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (100) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (102) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (119) declaration -> . NAME IGUAL element SEMICOLON
    (131) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (132) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (130) return -> . RETURN datatype SEMICOLON
    (126) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (127) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (70) asigOp -> . NAME operadorAsig number SEMICOLON
    (73) type -> . CONST
    (74) type -> . LET
    (75) type -> . VAR
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (28) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (29) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (39) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (30) if -> . soloIf
    (31) if -> . soloIf elseIf
    (32) if -> . soloIf elseIf else
    (33) if -> . soloIf else
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (34) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 13
    LONGCOMMENT     shift and go to state 14
    NAME            shift and go to state 17
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION        shift and go to state 26
    CONST           shift and go to state 28
    LET             shift and go to state 29
    VAR             shift and go to state 30
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    OPEN_BRACE      shift and go to state 27
    IF              shift and go to state 39

    expression                     shift and go to state 200
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    return                         shift and go to state 11
    function                       shift and go to state 12
    asigOp                         shift and go to state 15
    type                           shift and go to state 16
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    while                          shift and go to state 21
    for                            shift and go to state 22
    if                             shift and go to state 23
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35
    soloIf                         shift and go to state 38

state 155

    (34) soloIf -> IF OPEN_PARENTHESIS controlArg . CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    CLOSE_PARENTHESIS shift and go to state 201


state 156

    (20) variable -> type NAME IGUAL datatype . SEMICOLON

    SEMICOLON       shift and go to state 202


state 157

    (21) variable -> NAME IGUAL datatype SEMICOLON .

    COMMENTS        reduce using rule 21 (variable -> NAME IGUAL datatype SEMICOLON .)
    LONGCOMMENT     reduce using rule 21 (variable -> NAME IGUAL datatype SEMICOLON .)
    NAME            reduce using rule 21 (variable -> NAME IGUAL datatype SEMICOLON .)
    PRINT           reduce using rule 21 (variable -> NAME IGUAL datatype SEMICOLON .)
    RETURN          reduce using rule 21 (variable -> NAME IGUAL datatype SEMICOLON .)
    FUNCTION        reduce using rule 21 (variable -> NAME IGUAL datatype SEMICOLON .)
    CONST           reduce using rule 21 (variable -> NAME IGUAL datatype SEMICOLON .)
    LET             reduce using rule 21 (variable -> NAME IGUAL datatype SEMICOLON .)
    VAR             reduce using rule 21 (variable -> NAME IGUAL datatype SEMICOLON .)
    OPEN_BRACKET    reduce using rule 21 (variable -> NAME IGUAL datatype SEMICOLON .)
    NEW             reduce using rule 21 (variable -> NAME IGUAL datatype SEMICOLON .)
    WHILE           reduce using rule 21 (variable -> NAME IGUAL datatype SEMICOLON .)
    FOR             reduce using rule 21 (variable -> NAME IGUAL datatype SEMICOLON .)
    OPEN_BRACE      reduce using rule 21 (variable -> NAME IGUAL datatype SEMICOLON .)
    IF              reduce using rule 21 (variable -> NAME IGUAL datatype SEMICOLON .)
    $end            reduce using rule 21 (variable -> NAME IGUAL datatype SEMICOLON .)
    CLOSE_BRACE     reduce using rule 21 (variable -> NAME IGUAL datatype SEMICOLON .)


state 158

    (119) declaration -> NAME IGUAL element SEMICOLON .

    COMMENTS        reduce using rule 119 (declaration -> NAME IGUAL element SEMICOLON .)
    LONGCOMMENT     reduce using rule 119 (declaration -> NAME IGUAL element SEMICOLON .)
    NAME            reduce using rule 119 (declaration -> NAME IGUAL element SEMICOLON .)
    PRINT           reduce using rule 119 (declaration -> NAME IGUAL element SEMICOLON .)
    RETURN          reduce using rule 119 (declaration -> NAME IGUAL element SEMICOLON .)
    FUNCTION        reduce using rule 119 (declaration -> NAME IGUAL element SEMICOLON .)
    CONST           reduce using rule 119 (declaration -> NAME IGUAL element SEMICOLON .)
    LET             reduce using rule 119 (declaration -> NAME IGUAL element SEMICOLON .)
    VAR             reduce using rule 119 (declaration -> NAME IGUAL element SEMICOLON .)
    OPEN_BRACKET    reduce using rule 119 (declaration -> NAME IGUAL element SEMICOLON .)
    NEW             reduce using rule 119 (declaration -> NAME IGUAL element SEMICOLON .)
    WHILE           reduce using rule 119 (declaration -> NAME IGUAL element SEMICOLON .)
    FOR             reduce using rule 119 (declaration -> NAME IGUAL element SEMICOLON .)
    OPEN_BRACE      reduce using rule 119 (declaration -> NAME IGUAL element SEMICOLON .)
    IF              reduce using rule 119 (declaration -> NAME IGUAL element SEMICOLON .)
    $end            reduce using rule 119 (declaration -> NAME IGUAL element SEMICOLON .)
    CLOSE_BRACE     reduce using rule 119 (declaration -> NAME IGUAL element SEMICOLON .)


state 159

    (106) methodsSet -> NAME POINT ADD OPEN_PARENTHESIS . element CLOSE_PARENTHESIS SEMICOLON
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    STRING          shift and go to state 134
    NAME            shift and go to state 136
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    element                        shift and go to state 203
    number                         shift and go to state 135

state 160

    (107) methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS . element CLOSE_PARENTHESIS SEMICOLON
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    STRING          shift and go to state 134
    NAME            shift and go to state 136
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    element                        shift and go to state 204
    number                         shift and go to state 135

state 161

    (108) methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS . CLOSE_PARENTHESIS SEMICOLON
    (97) mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 205


state 162

    (98) mapFunctions -> NAME POINT GET OPEN_PARENTHESIS . clave CLOSE_PARENTHESIS SEMICOLON
    (91) clave -> . datatype
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 54
    STRING          shift and go to state 55
    CHAR            shift and go to state 56
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    OPEN_BRACE      shift and go to state 27

    clave                          shift and go to state 206
    datatype                       shift and go to state 66
    number                         shift and go to state 53
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 163

    (99) mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS . clave CLOSE_PARENTHESIS SEMICOLON
    (91) clave -> . datatype
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 54
    STRING          shift and go to state 55
    CHAR            shift and go to state 56
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    OPEN_BRACE      shift and go to state 27

    clave                          shift and go to state 207
    datatype                       shift and go to state 66
    number                         shift and go to state 53
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 164

    (100) arrayFn -> NAME POINT POP OPEN_PARENTHESIS . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 208


state 165

    (101) arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS . element CLOSE_PARENTHESIS SEMICOLON
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    STRING          shift and go to state 134
    NAME            shift and go to state 136
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    element                        shift and go to state 209
    number                         shift and go to state 135

state 166

    (102) arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS . element CLOSE_PARENTHESIS SEMICOLON
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    STRING          shift and go to state 134
    NAME            shift and go to state 136
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    element                        shift and go to state 210
    number                         shift and go to state 135

state 167

    (70) asigOp -> NAME operadorAsig number SEMICOLON .

    COMMENTS        reduce using rule 70 (asigOp -> NAME operadorAsig number SEMICOLON .)
    LONGCOMMENT     reduce using rule 70 (asigOp -> NAME operadorAsig number SEMICOLON .)
    NAME            reduce using rule 70 (asigOp -> NAME operadorAsig number SEMICOLON .)
    PRINT           reduce using rule 70 (asigOp -> NAME operadorAsig number SEMICOLON .)
    RETURN          reduce using rule 70 (asigOp -> NAME operadorAsig number SEMICOLON .)
    FUNCTION        reduce using rule 70 (asigOp -> NAME operadorAsig number SEMICOLON .)
    CONST           reduce using rule 70 (asigOp -> NAME operadorAsig number SEMICOLON .)
    LET             reduce using rule 70 (asigOp -> NAME operadorAsig number SEMICOLON .)
    VAR             reduce using rule 70 (asigOp -> NAME operadorAsig number SEMICOLON .)
    OPEN_BRACKET    reduce using rule 70 (asigOp -> NAME operadorAsig number SEMICOLON .)
    NEW             reduce using rule 70 (asigOp -> NAME operadorAsig number SEMICOLON .)
    WHILE           reduce using rule 70 (asigOp -> NAME operadorAsig number SEMICOLON .)
    FOR             reduce using rule 70 (asigOp -> NAME operadorAsig number SEMICOLON .)
    OPEN_BRACE      reduce using rule 70 (asigOp -> NAME operadorAsig number SEMICOLON .)
    IF              reduce using rule 70 (asigOp -> NAME operadorAsig number SEMICOLON .)
    $end            reduce using rule 70 (asigOp -> NAME operadorAsig number SEMICOLON .)
    CLOSE_BRACE     reduce using rule 70 (asigOp -> NAME operadorAsig number SEMICOLON .)


state 168

    (131) print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 211


state 169

    (132) print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 132 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 132 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 132 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 132 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 132 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 132 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 132 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 132 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 132 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 132 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 132 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 132 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 132 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 132 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 132 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 132 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 132 (print -> PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)


state 170

    (42) operations -> number operand number .
    (50) operations -> number operand number . operand operations
    (60) operand -> . SUMA
    (61) operand -> . RESTA
    (62) operand -> . MULTIPLICACION
    (63) operand -> . DIVISION

    SEMICOLON       reduce using rule 42 (operations -> number operand number .)
    COLON           reduce using rule 42 (operations -> number operand number .)
    COMMA           reduce using rule 42 (operations -> number operand number .)
    CLOSE_BRACKET   reduce using rule 42 (operations -> number operand number .)
    CLOSE_PARENTHESIS reduce using rule 42 (operations -> number operand number .)
    CLOSE_BRACE     reduce using rule 42 (operations -> number operand number .)
    SUMA            shift and go to state 111
    RESTA           shift and go to state 112
    MULTIPLICACION  shift and go to state 113
    DIVISION        shift and go to state 114

    operand                        shift and go to state 212

state 171

    (45) operations -> number operand NAME . operations
    (47) operations -> number operand NAME .
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    SEMICOLON       reduce using rule 47 (operations -> number operand NAME .)
    COLON           reduce using rule 47 (operations -> number operand NAME .)
    COMMA           reduce using rule 47 (operations -> number operand NAME .)
    CLOSE_BRACKET   reduce using rule 47 (operations -> number operand NAME .)
    CLOSE_PARENTHESIS reduce using rule 47 (operations -> number operand NAME .)
    CLOSE_BRACE     reduce using rule 47 (operations -> number operand NAME .)
    NAME            shift and go to state 214
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    number                         shift and go to state 213
    operations                     shift and go to state 215

state 172

    (49) operations -> NAME operand NAME . operations
    (52) operations -> NAME operand NAME .
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    SEMICOLON       reduce using rule 52 (operations -> NAME operand NAME .)
    COLON           reduce using rule 52 (operations -> NAME operand NAME .)
    COMMA           reduce using rule 52 (operations -> NAME operand NAME .)
    CLOSE_BRACKET   reduce using rule 52 (operations -> NAME operand NAME .)
    CLOSE_PARENTHESIS reduce using rule 52 (operations -> NAME operand NAME .)
    CLOSE_BRACE     reduce using rule 52 (operations -> NAME operand NAME .)
    NAME            shift and go to state 214
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    operations                     shift and go to state 216
    number                         shift and go to state 213

state 173

    (46) operations -> NAME operand number . operations
    (48) operations -> NAME operand number .
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    SEMICOLON       reduce using rule 48 (operations -> NAME operand number .)
    COLON           reduce using rule 48 (operations -> NAME operand number .)
    COMMA           reduce using rule 48 (operations -> NAME operand number .)
    CLOSE_BRACKET   reduce using rule 48 (operations -> NAME operand number .)
    CLOSE_PARENTHESIS reduce using rule 48 (operations -> NAME operand number .)
    CLOSE_BRACE     reduce using rule 48 (operations -> NAME operand number .)
    NAME            shift and go to state 214
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    number                         shift and go to state 213
    operations                     shift and go to state 217

state 174

    (51) operations -> NAME SUMA SUMA .

    SEMICOLON       reduce using rule 51 (operations -> NAME SUMA SUMA .)
    COLON           reduce using rule 51 (operations -> NAME SUMA SUMA .)
    COMMA           reduce using rule 51 (operations -> NAME SUMA SUMA .)
    CLOSE_BRACKET   reduce using rule 51 (operations -> NAME SUMA SUMA .)
    CLOSE_PARENTHESIS reduce using rule 51 (operations -> NAME SUMA SUMA .)
    CLOSE_BRACE     reduce using rule 51 (operations -> NAME SUMA SUMA .)


state 175

    (53) operations -> NAME RESTA RESTA .

    SEMICOLON       reduce using rule 53 (operations -> NAME RESTA RESTA .)
    COLON           reduce using rule 53 (operations -> NAME RESTA RESTA .)
    COMMA           reduce using rule 53 (operations -> NAME RESTA RESTA .)
    CLOSE_BRACKET   reduce using rule 53 (operations -> NAME RESTA RESTA .)
    CLOSE_PARENTHESIS reduce using rule 53 (operations -> NAME RESTA RESTA .)
    CLOSE_BRACE     reduce using rule 53 (operations -> NAME RESTA RESTA .)


state 176

    (18) number -> OPEN_PARENTHESIS RESTA INTEGER . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 218


state 177

    (19) number -> OPEN_PARENTHESIS RESTA FLOAT . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 219


state 178

    (126) function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS . OPEN_BRACE expression CLOSE_BRACE

    OPEN_BRACE      shift and go to state 220


state 179

    (127) function -> FUNCTION NAME OPEN_PARENTHESIS parameter . CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    CLOSE_PARENTHESIS shift and go to state 221


state 180

    (128) parameter -> datatype .
    (129) parameter -> datatype . COMMA parameter

    CLOSE_PARENTHESIS reduce using rule 128 (parameter -> datatype .)
    COMMA           shift and go to state 222


state 181

    (89) claveValor -> clave COLON datatype .
    (90) claveValor -> clave COLON datatype . COMMA claveValor

    CLOSE_BRACE     reduce using rule 89 (claveValor -> clave COLON datatype .)
    COMMA           shift and go to state 223


state 182

    (94) tuplas -> tupla COMMA tuplas .

    CLOSE_BRACE     reduce using rule 94 (tuplas -> tupla COMMA tuplas .)


state 183

    (95) tupla -> OPEN_BRACKET . datatype CLOSE_BRACKET SEMICOLON
    (96) tupla -> OPEN_BRACKET . datatype COMMA datatype CLOSE_BRACKET SEMICOLON
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 54
    STRING          shift and go to state 55
    CHAR            shift and go to state 56
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    OPEN_BRACE      shift and go to state 27

    datatype                       shift and go to state 224
    number                         shift and go to state 53
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 184

    (95) tupla -> OPEN_BRACKET datatype CLOSE_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 225


state 185

    (96) tupla -> OPEN_BRACKET datatype COMMA . datatype CLOSE_BRACKET SEMICOLON
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 54
    STRING          shift and go to state 55
    CHAR            shift and go to state 56
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    OPEN_BRACE      shift and go to state 27

    datatype                       shift and go to state 226
    number                         shift and go to state 53
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 186

    (110) items -> item COMMA items .

    CLOSE_BRACKET   reduce using rule 110 (items -> item COMMA items .)
    CLOSE_PARENTHESIS reduce using rule 110 (items -> item COMMA items .)


state 187

    (125) expBoolean -> expBoolean logicalOperator expBoolean .
    (125) expBoolean -> expBoolean . logicalOperator expBoolean
    (120) logicalOperator -> . AND
    (121) logicalOperator -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    COMMA           reduce using rule 125 (expBoolean -> expBoolean logicalOperator expBoolean .)
    CLOSE_BRACKET   reduce using rule 125 (expBoolean -> expBoolean logicalOperator expBoolean .)
    CLOSE_PARENTHESIS reduce using rule 125 (expBoolean -> expBoolean logicalOperator expBoolean .)
    SEMICOLON       reduce using rule 125 (expBoolean -> expBoolean logicalOperator expBoolean .)
    AND             shift and go to state 131
    OR              shift and go to state 132

  ! AND             [ reduce using rule 125 (expBoolean -> expBoolean logicalOperator expBoolean .) ]
  ! OR              [ reduce using rule 125 (expBoolean -> expBoolean logicalOperator expBoolean .) ]

    logicalOperator                shift and go to state 130

state 188

    (38) controlArg -> element clause element .

    AND             reduce using rule 38 (controlArg -> element clause element .)
    OR              reduce using rule 38 (controlArg -> element clause element .)
    COMMA           reduce using rule 38 (controlArg -> element clause element .)
    CLOSE_BRACKET   reduce using rule 38 (controlArg -> element clause element .)
    CLOSE_PARENTHESIS reduce using rule 38 (controlArg -> element clause element .)
    SEMICOLON       reduce using rule 38 (controlArg -> element clause element .)


state 189

    (83) array -> NEW ARRAY OPEN_PARENTHESIS items . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 227


state 190

    (103) set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .

    COMMENTS        reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    LONGCOMMENT     reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    NAME            reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    PRINT           reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FUNCTION        reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CONST           reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    LET             reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    VAR             reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OPEN_BRACKET    reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    NEW             reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    WHILE           reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FOR             reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OPEN_BRACE      reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    IF              reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    $end            reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_BRACE     reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COLON           reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 103 (set -> NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS .)


state 191

    (104) set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET . items CLOSE_BRACKET CLOSE_PARENTHESIS
    (109) items -> . item
    (110) items -> . item COMMA items
    (111) item -> . number
    (112) item -> . STRING
    (113) item -> . expBoolean
    (114) item -> . NAME
    (115) item -> . datatype
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (122) expBoolean -> . controlArg
    (123) expBoolean -> . bool
    (124) expBoolean -> . NOT expBoolean
    (125) expBoolean -> . expBoolean logicalOperator expBoolean
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (38) controlArg -> . element clause element
    (71) bool -> . TRUE
    (72) bool -> . FALSE
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    STRING          shift and go to state 72
    NAME            shift and go to state 74
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    NOT             shift and go to state 78
    CHAR            shift and go to state 56
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    OPEN_BRACE      shift and go to state 27

    items                          shift and go to state 228
    item                           shift and go to state 70
    number                         shift and go to state 71
    expBoolean                     shift and go to state 73
    datatype                       shift and go to state 75
    controlArg                     shift and go to state 76
    bool                           shift and go to state 77
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    element                        shift and go to state 79
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 192

    (105) set -> NEW SET OPEN_PARENTHESIS element . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 229


state 193

    (87) iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .

    COMMENTS        reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    LONGCOMMENT     reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    NAME            reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    PRINT           reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FUNCTION        reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CONST           reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    LET             reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    VAR             reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OPEN_BRACKET    reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    NEW             reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    WHILE           reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    FOR             reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OPEN_BRACE      reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    IF              reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    $end            reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_BRACE     reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COLON           reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 87 (iniciarMap -> NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS .)


state 194

    (28) while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS . OPEN_BRACE expression CLOSE_BRACE

    OPEN_BRACE      shift and go to state 230


state 195

    (29) while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS . OPEN_BRACE expression CLOSE_BRACE

    OPEN_BRACE      shift and go to state 231


state 196

    (39) for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON . expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (122) expBoolean -> . controlArg
    (123) expBoolean -> . bool
    (124) expBoolean -> . NOT expBoolean
    (125) expBoolean -> . expBoolean logicalOperator expBoolean
    (38) controlArg -> . element clause element
    (71) bool -> . TRUE
    (72) bool -> . FALSE
    (116) element -> . STRING
    (117) element -> . number
    (118) element -> . NAME
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    NOT             shift and go to state 78
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 134
    NAME            shift and go to state 136
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    expBoolean                     shift and go to state 232
    controlArg                     shift and go to state 76
    bool                           shift and go to state 77
    element                        shift and go to state 79
    number                         shift and go to state 135

state 197

    (40) inicialization -> type NAME . IGUAL number

    IGUAL           shift and go to state 233


state 198

    (41) inicialization -> NAME IGUAL . number
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    number                         shift and go to state 234

state 199

    (35) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg . CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (36) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg . CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf

    CLOSE_PARENTHESIS shift and go to state 235


state 200

    (37) else -> ELSE OPEN_BRACE expression . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 236


state 201

    (34) soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS . OPEN_BRACE expression CLOSE_BRACE

    OPEN_BRACE      shift and go to state 237


state 202

    (20) variable -> type NAME IGUAL datatype SEMICOLON .

    COMMENTS        reduce using rule 20 (variable -> type NAME IGUAL datatype SEMICOLON .)
    LONGCOMMENT     reduce using rule 20 (variable -> type NAME IGUAL datatype SEMICOLON .)
    NAME            reduce using rule 20 (variable -> type NAME IGUAL datatype SEMICOLON .)
    PRINT           reduce using rule 20 (variable -> type NAME IGUAL datatype SEMICOLON .)
    RETURN          reduce using rule 20 (variable -> type NAME IGUAL datatype SEMICOLON .)
    FUNCTION        reduce using rule 20 (variable -> type NAME IGUAL datatype SEMICOLON .)
    CONST           reduce using rule 20 (variable -> type NAME IGUAL datatype SEMICOLON .)
    LET             reduce using rule 20 (variable -> type NAME IGUAL datatype SEMICOLON .)
    VAR             reduce using rule 20 (variable -> type NAME IGUAL datatype SEMICOLON .)
    OPEN_BRACKET    reduce using rule 20 (variable -> type NAME IGUAL datatype SEMICOLON .)
    NEW             reduce using rule 20 (variable -> type NAME IGUAL datatype SEMICOLON .)
    WHILE           reduce using rule 20 (variable -> type NAME IGUAL datatype SEMICOLON .)
    FOR             reduce using rule 20 (variable -> type NAME IGUAL datatype SEMICOLON .)
    OPEN_BRACE      reduce using rule 20 (variable -> type NAME IGUAL datatype SEMICOLON .)
    IF              reduce using rule 20 (variable -> type NAME IGUAL datatype SEMICOLON .)
    $end            reduce using rule 20 (variable -> type NAME IGUAL datatype SEMICOLON .)
    CLOSE_BRACE     reduce using rule 20 (variable -> type NAME IGUAL datatype SEMICOLON .)


state 203

    (106) methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 238


state 204

    (107) methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 239


state 205

    (108) methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS . SEMICOLON
    (97) mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 240


state 206

    (98) mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 241


state 207

    (99) mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 242


state 208

    (100) arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 243


state 209

    (101) arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 244


state 210

    (102) arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element . CLOSE_PARENTHESIS SEMICOLON

    CLOSE_PARENTHESIS shift and go to state 245


state 211

    (131) print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 131 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 131 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 131 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 131 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 131 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 131 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 131 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 131 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 131 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 131 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 131 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 131 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 131 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 131 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 131 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 131 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 131 (print -> PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON .)


state 212

    (50) operations -> number operand number operand . operations
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    NAME            shift and go to state 214
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    number                         shift and go to state 213
    operations                     shift and go to state 246

state 213

    (42) operations -> number . operand number
    (44) operations -> number .
    (45) operations -> number . operand NAME operations
    (47) operations -> number . operand NAME
    (50) operations -> number . operand number operand operations
    (60) operand -> . SUMA
    (61) operand -> . RESTA
    (62) operand -> . MULTIPLICACION
    (63) operand -> . DIVISION

    SEMICOLON       reduce using rule 44 (operations -> number .)
    COLON           reduce using rule 44 (operations -> number .)
    COMMA           reduce using rule 44 (operations -> number .)
    CLOSE_BRACKET   reduce using rule 44 (operations -> number .)
    CLOSE_PARENTHESIS reduce using rule 44 (operations -> number .)
    CLOSE_BRACE     reduce using rule 44 (operations -> number .)
    SUMA            shift and go to state 111
    RESTA           shift and go to state 112
    MULTIPLICACION  shift and go to state 113
    DIVISION        shift and go to state 114

    operand                        shift and go to state 110

state 214

    (43) operations -> NAME .
    (46) operations -> NAME . operand number operations
    (48) operations -> NAME . operand number
    (49) operations -> NAME . operand NAME operations
    (51) operations -> NAME . SUMA SUMA
    (52) operations -> NAME . operand NAME
    (53) operations -> NAME . RESTA RESTA
    (60) operand -> . SUMA
    (61) operand -> . RESTA
    (62) operand -> . MULTIPLICACION
    (63) operand -> . DIVISION

    SEMICOLON       reduce using rule 43 (operations -> NAME .)
    COLON           reduce using rule 43 (operations -> NAME .)
    COMMA           reduce using rule 43 (operations -> NAME .)
    CLOSE_BRACKET   reduce using rule 43 (operations -> NAME .)
    CLOSE_PARENTHESIS reduce using rule 43 (operations -> NAME .)
    CLOSE_BRACE     reduce using rule 43 (operations -> NAME .)
    SUMA            shift and go to state 116
    RESTA           shift and go to state 117
    MULTIPLICACION  shift and go to state 113
    DIVISION        shift and go to state 114

    operand                        shift and go to state 115

state 215

    (45) operations -> number operand NAME operations .

    SEMICOLON       reduce using rule 45 (operations -> number operand NAME operations .)
    COLON           reduce using rule 45 (operations -> number operand NAME operations .)
    COMMA           reduce using rule 45 (operations -> number operand NAME operations .)
    CLOSE_BRACKET   reduce using rule 45 (operations -> number operand NAME operations .)
    CLOSE_PARENTHESIS reduce using rule 45 (operations -> number operand NAME operations .)
    CLOSE_BRACE     reduce using rule 45 (operations -> number operand NAME operations .)


state 216

    (49) operations -> NAME operand NAME operations .

    SEMICOLON       reduce using rule 49 (operations -> NAME operand NAME operations .)
    COLON           reduce using rule 49 (operations -> NAME operand NAME operations .)
    COMMA           reduce using rule 49 (operations -> NAME operand NAME operations .)
    CLOSE_BRACKET   reduce using rule 49 (operations -> NAME operand NAME operations .)
    CLOSE_PARENTHESIS reduce using rule 49 (operations -> NAME operand NAME operations .)
    CLOSE_BRACE     reduce using rule 49 (operations -> NAME operand NAME operations .)


state 217

    (46) operations -> NAME operand number operations .

    SEMICOLON       reduce using rule 46 (operations -> NAME operand number operations .)
    COLON           reduce using rule 46 (operations -> NAME operand number operations .)
    COMMA           reduce using rule 46 (operations -> NAME operand number operations .)
    CLOSE_BRACKET   reduce using rule 46 (operations -> NAME operand number operations .)
    CLOSE_PARENTHESIS reduce using rule 46 (operations -> NAME operand number operations .)
    CLOSE_BRACE     reduce using rule 46 (operations -> NAME operand number operations .)


state 218

    (18) number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .

    SUMA            reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    RESTA           reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    MULTIPLICACION  reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    DIVISION        reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    COLON           reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    IGUALIGUAL      reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    DIFERENTE       reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    MAYORQUE        reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    MAYORIGUALQUE   reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    MENORQUE        reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    MENORIGUALQUE   reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    CLOSE_BRACE     reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    NAME            reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    INTEGER         reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    FLOAT           reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    OPEN_PARENTHESIS reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    AND             reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)
    OR              reduce using rule 18 (number -> OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS .)


state 219

    (19) number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .

    SUMA            reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    RESTA           reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    MULTIPLICACION  reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    DIVISION        reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    COLON           reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    IGUALIGUAL      reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    DIFERENTE       reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    MAYORQUE        reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    MAYORIGUALQUE   reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    MENORQUE        reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    MENORIGUALQUE   reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    CLOSE_BRACE     reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    NAME            reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    INTEGER         reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    FLOAT           reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    OPEN_PARENTHESIS reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    AND             reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)
    OR              reduce using rule 19 (number -> OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS .)


state 220

    (126) function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE . expression CLOSE_BRACE
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . return
    (12) semiExpression -> . function
    (13) semiExpression -> . COMMENTS
    (14) semiExpression -> . LONGCOMMENT
    (15) semiExpression -> . asigOp
    (20) variable -> . type NAME IGUAL datatype SEMICOLON
    (21) variable -> . NAME IGUAL datatype SEMICOLON
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (22) controlStruct -> . while
    (23) controlStruct -> . for
    (24) controlStruct -> . if
    (106) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (107) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (108) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (97) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (98) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (99) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (100) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (102) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (119) declaration -> . NAME IGUAL element SEMICOLON
    (131) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (132) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (130) return -> . RETURN datatype SEMICOLON
    (126) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (127) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (70) asigOp -> . NAME operadorAsig number SEMICOLON
    (73) type -> . CONST
    (74) type -> . LET
    (75) type -> . VAR
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (28) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (29) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (39) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (30) if -> . soloIf
    (31) if -> . soloIf elseIf
    (32) if -> . soloIf elseIf else
    (33) if -> . soloIf else
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (34) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 13
    LONGCOMMENT     shift and go to state 14
    NAME            shift and go to state 17
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION        shift and go to state 26
    CONST           shift and go to state 28
    LET             shift and go to state 29
    VAR             shift and go to state 30
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    OPEN_BRACE      shift and go to state 27
    IF              shift and go to state 39

    expression                     shift and go to state 247
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    return                         shift and go to state 11
    function                       shift and go to state 12
    asigOp                         shift and go to state 15
    type                           shift and go to state 16
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    while                          shift and go to state 21
    for                            shift and go to state 22
    if                             shift and go to state 23
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35
    soloIf                         shift and go to state 38

state 221

    (127) function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS . OPEN_BRACE expression CLOSE_BRACE

    OPEN_BRACE      shift and go to state 248


state 222

    (129) parameter -> datatype COMMA . parameter
    (128) parameter -> . datatype
    (129) parameter -> . datatype COMMA parameter
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 54
    STRING          shift and go to state 55
    CHAR            shift and go to state 56
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    OPEN_BRACE      shift and go to state 27

    datatype                       shift and go to state 180
    parameter                      shift and go to state 249
    number                         shift and go to state 53
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 223

    (90) claveValor -> clave COLON datatype COMMA . claveValor
    (89) claveValor -> . clave COLON datatype
    (90) claveValor -> . clave COLON datatype COMMA claveValor
    (91) clave -> . datatype
    (54) datatype -> . number
    (55) datatype -> . NAME
    (56) datatype -> . STRING
    (57) datatype -> . CHAR
    (58) datatype -> . operations
    (59) datatype -> . dataStruct
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE

    NAME            shift and go to state 54
    STRING          shift and go to state 55
    CHAR            shift and go to state 56
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    OPEN_BRACE      shift and go to state 27

    clave                          shift and go to state 65
    datatype                       shift and go to state 66
    claveValor                     shift and go to state 250
    number                         shift and go to state 53
    operations                     shift and go to state 57
    dataStruct                     shift and go to state 58
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 224

    (95) tupla -> OPEN_BRACKET datatype . CLOSE_BRACKET SEMICOLON
    (96) tupla -> OPEN_BRACKET datatype . COMMA datatype CLOSE_BRACKET SEMICOLON

    CLOSE_BRACKET   shift and go to state 184
    COMMA           shift and go to state 185


state 225

    (95) tupla -> OPEN_BRACKET datatype CLOSE_BRACKET SEMICOLON .

    COMMA           reduce using rule 95 (tupla -> OPEN_BRACKET datatype CLOSE_BRACKET SEMICOLON .)
    CLOSE_BRACE     reduce using rule 95 (tupla -> OPEN_BRACKET datatype CLOSE_BRACKET SEMICOLON .)


state 226

    (96) tupla -> OPEN_BRACKET datatype COMMA datatype . CLOSE_BRACKET SEMICOLON

    CLOSE_BRACKET   shift and go to state 251


state 227

    (83) array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .

    COMMENTS        reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    LONGCOMMENT     reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    NAME            reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    PRINT           reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    FUNCTION        reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    CONST           reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    LET             reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    VAR             reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    OPEN_BRACKET    reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    NEW             reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    WHILE           reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    FOR             reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    OPEN_BRACE      reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    IF              reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    $end            reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    CLOSE_BRACE     reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    COLON           reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 83 (array -> NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS .)


state 228

    (104) set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items . CLOSE_BRACKET CLOSE_PARENTHESIS

    CLOSE_BRACKET   shift and go to state 252


state 229

    (105) set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .

    COMMENTS        reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    LONGCOMMENT     reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    NAME            reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    PRINT           reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    FUNCTION        reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    CONST           reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    LET             reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    VAR             reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    OPEN_BRACKET    reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    NEW             reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    WHILE           reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    FOR             reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    OPEN_BRACE      reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    IF              reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    $end            reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    CLOSE_BRACE     reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    COLON           reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 105 (set -> NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS .)


state 230

    (28) while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE . expression CLOSE_BRACE
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . return
    (12) semiExpression -> . function
    (13) semiExpression -> . COMMENTS
    (14) semiExpression -> . LONGCOMMENT
    (15) semiExpression -> . asigOp
    (20) variable -> . type NAME IGUAL datatype SEMICOLON
    (21) variable -> . NAME IGUAL datatype SEMICOLON
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (22) controlStruct -> . while
    (23) controlStruct -> . for
    (24) controlStruct -> . if
    (106) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (107) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (108) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (97) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (98) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (99) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (100) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (102) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (119) declaration -> . NAME IGUAL element SEMICOLON
    (131) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (132) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (130) return -> . RETURN datatype SEMICOLON
    (126) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (127) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (70) asigOp -> . NAME operadorAsig number SEMICOLON
    (73) type -> . CONST
    (74) type -> . LET
    (75) type -> . VAR
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (28) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (29) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (39) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (30) if -> . soloIf
    (31) if -> . soloIf elseIf
    (32) if -> . soloIf elseIf else
    (33) if -> . soloIf else
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (34) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 13
    LONGCOMMENT     shift and go to state 14
    NAME            shift and go to state 17
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION        shift and go to state 26
    CONST           shift and go to state 28
    LET             shift and go to state 29
    VAR             shift and go to state 30
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    OPEN_BRACE      shift and go to state 27
    IF              shift and go to state 39

    expression                     shift and go to state 253
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    return                         shift and go to state 11
    function                       shift and go to state 12
    asigOp                         shift and go to state 15
    type                           shift and go to state 16
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    while                          shift and go to state 21
    for                            shift and go to state 22
    if                             shift and go to state 23
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35
    soloIf                         shift and go to state 38

state 231

    (29) while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE . expression CLOSE_BRACE
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . return
    (12) semiExpression -> . function
    (13) semiExpression -> . COMMENTS
    (14) semiExpression -> . LONGCOMMENT
    (15) semiExpression -> . asigOp
    (20) variable -> . type NAME IGUAL datatype SEMICOLON
    (21) variable -> . NAME IGUAL datatype SEMICOLON
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (22) controlStruct -> . while
    (23) controlStruct -> . for
    (24) controlStruct -> . if
    (106) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (107) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (108) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (97) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (98) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (99) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (100) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (102) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (119) declaration -> . NAME IGUAL element SEMICOLON
    (131) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (132) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (130) return -> . RETURN datatype SEMICOLON
    (126) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (127) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (70) asigOp -> . NAME operadorAsig number SEMICOLON
    (73) type -> . CONST
    (74) type -> . LET
    (75) type -> . VAR
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (28) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (29) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (39) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (30) if -> . soloIf
    (31) if -> . soloIf elseIf
    (32) if -> . soloIf elseIf else
    (33) if -> . soloIf else
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (34) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 13
    LONGCOMMENT     shift and go to state 14
    NAME            shift and go to state 17
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION        shift and go to state 26
    CONST           shift and go to state 28
    LET             shift and go to state 29
    VAR             shift and go to state 30
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    OPEN_BRACE      shift and go to state 27
    IF              shift and go to state 39

    expression                     shift and go to state 254
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    return                         shift and go to state 11
    function                       shift and go to state 12
    asigOp                         shift and go to state 15
    type                           shift and go to state 16
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    while                          shift and go to state 21
    for                            shift and go to state 22
    if                             shift and go to state 23
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35
    soloIf                         shift and go to state 38

state 232

    (39) for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean . SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (125) expBoolean -> expBoolean . logicalOperator expBoolean
    (120) logicalOperator -> . AND
    (121) logicalOperator -> . OR

    SEMICOLON       shift and go to state 255
    AND             shift and go to state 131
    OR              shift and go to state 132

    logicalOperator                shift and go to state 130

state 233

    (40) inicialization -> type NAME IGUAL . number
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    number                         shift and go to state 256

state 234

    (41) inicialization -> NAME IGUAL number .

    SEMICOLON       reduce using rule 41 (inicialization -> NAME IGUAL number .)


state 235

    (35) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS . OPEN_BRACE expression CLOSE_BRACE
    (36) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS . OPEN_BRACE expression CLOSE_BRACE soloIf

    OPEN_BRACE      shift and go to state 257


state 236

    (37) else -> ELSE OPEN_BRACE expression CLOSE_BRACE .

    COMMENTS        reduce using rule 37 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 37 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    NAME            reduce using rule 37 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    PRINT           reduce using rule 37 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    RETURN          reduce using rule 37 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    FUNCTION        reduce using rule 37 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    CONST           reduce using rule 37 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    LET             reduce using rule 37 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    VAR             reduce using rule 37 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 37 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    NEW             reduce using rule 37 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    WHILE           reduce using rule 37 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    FOR             reduce using rule 37 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 37 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    IF              reduce using rule 37 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    $end            reduce using rule 37 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 37 (else -> ELSE OPEN_BRACE expression CLOSE_BRACE .)


state 237

    (34) soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE . expression CLOSE_BRACE
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . return
    (12) semiExpression -> . function
    (13) semiExpression -> . COMMENTS
    (14) semiExpression -> . LONGCOMMENT
    (15) semiExpression -> . asigOp
    (20) variable -> . type NAME IGUAL datatype SEMICOLON
    (21) variable -> . NAME IGUAL datatype SEMICOLON
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (22) controlStruct -> . while
    (23) controlStruct -> . for
    (24) controlStruct -> . if
    (106) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (107) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (108) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (97) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (98) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (99) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (100) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (102) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (119) declaration -> . NAME IGUAL element SEMICOLON
    (131) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (132) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (130) return -> . RETURN datatype SEMICOLON
    (126) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (127) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (70) asigOp -> . NAME operadorAsig number SEMICOLON
    (73) type -> . CONST
    (74) type -> . LET
    (75) type -> . VAR
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (28) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (29) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (39) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (30) if -> . soloIf
    (31) if -> . soloIf elseIf
    (32) if -> . soloIf elseIf else
    (33) if -> . soloIf else
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (34) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 13
    LONGCOMMENT     shift and go to state 14
    NAME            shift and go to state 17
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION        shift and go to state 26
    CONST           shift and go to state 28
    LET             shift and go to state 29
    VAR             shift and go to state 30
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    OPEN_BRACE      shift and go to state 27
    IF              shift and go to state 39

    expression                     shift and go to state 258
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    return                         shift and go to state 11
    function                       shift and go to state 12
    asigOp                         shift and go to state 15
    type                           shift and go to state 16
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    while                          shift and go to state 21
    for                            shift and go to state 22
    if                             shift and go to state 23
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35
    soloIf                         shift and go to state 38

state 238

    (106) methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 259


state 239

    (107) methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 260


state 240

    (108) methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .
    (97) mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .

  ! reduce/reduce conflict for COMMENTS resolved using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for LONGCOMMENT resolved using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for NAME resolved using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for PRINT resolved using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for RETURN resolved using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for CONST resolved using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for LET resolved using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for VAR resolved using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for OPEN_BRACKET resolved using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for NEW resolved using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for WHILE resolved using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for FOR resolved using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for OPEN_BRACE resolved using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for IF resolved using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for $end resolved using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
  ! reduce/reduce conflict for CLOSE_BRACE resolved using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    COMMENTS        reduce using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 97 (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)

  ! COMMENTS        [ reduce using rule 108 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! LONGCOMMENT     [ reduce using rule 108 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! NAME            [ reduce using rule 108 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! PRINT           [ reduce using rule 108 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! RETURN          [ reduce using rule 108 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! FUNCTION        [ reduce using rule 108 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! CONST           [ reduce using rule 108 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! LET             [ reduce using rule 108 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! VAR             [ reduce using rule 108 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! OPEN_BRACKET    [ reduce using rule 108 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! NEW             [ reduce using rule 108 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! WHILE           [ reduce using rule 108 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! FOR             [ reduce using rule 108 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! OPEN_BRACE      [ reduce using rule 108 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! IF              [ reduce using rule 108 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! $end            [ reduce using rule 108 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]
  ! CLOSE_BRACE     [ reduce using rule 108 (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .) ]


state 241

    (98) mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 261


state 242

    (99) mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 262


state 243

    (100) arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 100 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 100 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 100 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 100 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 100 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 100 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 100 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 100 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 100 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 100 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 100 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 100 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 100 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 100 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 100 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 100 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 100 (arrayFn -> NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON .)


state 244

    (101) arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 263


state 245

    (102) arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 264


state 246

    (50) operations -> number operand number operand operations .

    SEMICOLON       reduce using rule 50 (operations -> number operand number operand operations .)
    COLON           reduce using rule 50 (operations -> number operand number operand operations .)
    COMMA           reduce using rule 50 (operations -> number operand number operand operations .)
    CLOSE_BRACKET   reduce using rule 50 (operations -> number operand number operand operations .)
    CLOSE_PARENTHESIS reduce using rule 50 (operations -> number operand number operand operations .)
    CLOSE_BRACE     reduce using rule 50 (operations -> number operand number operand operations .)


state 247

    (126) function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 265


state 248

    (127) function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE . expression CLOSE_BRACE
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . return
    (12) semiExpression -> . function
    (13) semiExpression -> . COMMENTS
    (14) semiExpression -> . LONGCOMMENT
    (15) semiExpression -> . asigOp
    (20) variable -> . type NAME IGUAL datatype SEMICOLON
    (21) variable -> . NAME IGUAL datatype SEMICOLON
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (22) controlStruct -> . while
    (23) controlStruct -> . for
    (24) controlStruct -> . if
    (106) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (107) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (108) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (97) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (98) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (99) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (100) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (102) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (119) declaration -> . NAME IGUAL element SEMICOLON
    (131) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (132) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (130) return -> . RETURN datatype SEMICOLON
    (126) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (127) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (70) asigOp -> . NAME operadorAsig number SEMICOLON
    (73) type -> . CONST
    (74) type -> . LET
    (75) type -> . VAR
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (28) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (29) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (39) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (30) if -> . soloIf
    (31) if -> . soloIf elseIf
    (32) if -> . soloIf elseIf else
    (33) if -> . soloIf else
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (34) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 13
    LONGCOMMENT     shift and go to state 14
    NAME            shift and go to state 17
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION        shift and go to state 26
    CONST           shift and go to state 28
    LET             shift and go to state 29
    VAR             shift and go to state 30
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    OPEN_BRACE      shift and go to state 27
    IF              shift and go to state 39

    expression                     shift and go to state 266
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    return                         shift and go to state 11
    function                       shift and go to state 12
    asigOp                         shift and go to state 15
    type                           shift and go to state 16
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    while                          shift and go to state 21
    for                            shift and go to state 22
    if                             shift and go to state 23
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35
    soloIf                         shift and go to state 38

state 249

    (129) parameter -> datatype COMMA parameter .

    CLOSE_PARENTHESIS reduce using rule 129 (parameter -> datatype COMMA parameter .)


state 250

    (90) claveValor -> clave COLON datatype COMMA claveValor .

    CLOSE_BRACE     reduce using rule 90 (claveValor -> clave COLON datatype COMMA claveValor .)


state 251

    (96) tupla -> OPEN_BRACKET datatype COMMA datatype CLOSE_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 267


state 252

    (104) set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 268


state 253

    (28) while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 269


state 254

    (29) while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 270


state 255

    (39) for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON . operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (42) operations -> . number operand number
    (43) operations -> . NAME
    (44) operations -> . number
    (45) operations -> . number operand NAME operations
    (46) operations -> . NAME operand number operations
    (47) operations -> . number operand NAME
    (48) operations -> . NAME operand number
    (49) operations -> . NAME operand NAME operations
    (50) operations -> . number operand number operand operations
    (51) operations -> . NAME SUMA SUMA
    (52) operations -> . NAME operand NAME
    (53) operations -> . NAME RESTA RESTA
    (16) number -> . INTEGER
    (17) number -> . FLOAT
    (18) number -> . OPEN_PARENTHESIS RESTA INTEGER CLOSE_PARENTHESIS
    (19) number -> . OPEN_PARENTHESIS RESTA FLOAT CLOSE_PARENTHESIS

    NAME            shift and go to state 214
    INTEGER         shift and go to state 59
    FLOAT           shift and go to state 60
    OPEN_PARENTHESIS shift and go to state 61

    operations                     shift and go to state 271
    number                         shift and go to state 213

state 256

    (40) inicialization -> type NAME IGUAL number .

    SEMICOLON       reduce using rule 40 (inicialization -> type NAME IGUAL number .)


state 257

    (35) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE . expression CLOSE_BRACE
    (36) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE . expression CLOSE_BRACE soloIf
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . return
    (12) semiExpression -> . function
    (13) semiExpression -> . COMMENTS
    (14) semiExpression -> . LONGCOMMENT
    (15) semiExpression -> . asigOp
    (20) variable -> . type NAME IGUAL datatype SEMICOLON
    (21) variable -> . NAME IGUAL datatype SEMICOLON
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (22) controlStruct -> . while
    (23) controlStruct -> . for
    (24) controlStruct -> . if
    (106) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (107) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (108) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (97) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (98) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (99) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (100) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (102) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (119) declaration -> . NAME IGUAL element SEMICOLON
    (131) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (132) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (130) return -> . RETURN datatype SEMICOLON
    (126) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (127) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (70) asigOp -> . NAME operadorAsig number SEMICOLON
    (73) type -> . CONST
    (74) type -> . LET
    (75) type -> . VAR
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (28) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (29) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (39) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (30) if -> . soloIf
    (31) if -> . soloIf elseIf
    (32) if -> . soloIf elseIf else
    (33) if -> . soloIf else
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (34) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 13
    LONGCOMMENT     shift and go to state 14
    NAME            shift and go to state 17
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION        shift and go to state 26
    CONST           shift and go to state 28
    LET             shift and go to state 29
    VAR             shift and go to state 30
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    OPEN_BRACE      shift and go to state 27
    IF              shift and go to state 39

    expression                     shift and go to state 272
    soloIf                         shift and go to state 38
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    return                         shift and go to state 11
    function                       shift and go to state 12
    asigOp                         shift and go to state 15
    type                           shift and go to state 16
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    while                          shift and go to state 21
    for                            shift and go to state 22
    if                             shift and go to state 23
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35

state 258

    (34) soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 273


state 259

    (106) methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 106 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 106 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 106 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 106 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 106 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 106 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 106 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 106 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 106 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 106 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 106 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 106 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 106 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 106 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 106 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 106 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 106 (methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)


state 260

    (107) methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 107 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 107 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 107 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 107 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 107 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 107 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 107 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 107 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 107 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 107 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 107 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 107 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 107 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 107 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 107 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 107 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 107 (methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)


state 261

    (98) mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 98 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 98 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 98 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 98 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 98 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 98 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 98 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 98 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 98 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 98 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 98 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 98 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 98 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 98 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 98 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 98 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 98 (mapFunctions -> NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)


state 262

    (99) mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 99 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 99 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 99 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 99 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 99 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 99 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 99 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 99 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 99 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 99 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 99 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 99 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 99 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 99 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 99 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 99 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 99 (mapFunctions -> NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON .)


state 263

    (101) arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 101 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 101 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 101 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 101 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 101 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 101 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 101 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 101 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 101 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 101 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 101 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 101 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 101 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 101 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 101 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 101 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 101 (arrayFn -> NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)


state 264

    (102) arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .

    COMMENTS        reduce using rule 102 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LONGCOMMENT     reduce using rule 102 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NAME            reduce using rule 102 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 102 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 102 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FUNCTION        reduce using rule 102 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CONST           reduce using rule 102 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    LET             reduce using rule 102 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    VAR             reduce using rule 102 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACKET    reduce using rule 102 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    NEW             reduce using rule 102 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 102 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    FOR             reduce using rule 102 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    OPEN_BRACE      reduce using rule 102 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 102 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 102 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_BRACE     reduce using rule 102 (arrayFn -> NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON .)


state 265

    (126) function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .

    COMMENTS        reduce using rule 126 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 126 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NAME            reduce using rule 126 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    PRINT           reduce using rule 126 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    RETURN          reduce using rule 126 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FUNCTION        reduce using rule 126 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CONST           reduce using rule 126 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LET             reduce using rule 126 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    VAR             reduce using rule 126 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 126 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NEW             reduce using rule 126 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    WHILE           reduce using rule 126 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FOR             reduce using rule 126 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 126 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    IF              reduce using rule 126 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    $end            reduce using rule 126 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 126 (function -> FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)


state 266

    (127) function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 274


state 267

    (96) tupla -> OPEN_BRACKET datatype COMMA datatype CLOSE_BRACKET SEMICOLON .

    COMMA           reduce using rule 96 (tupla -> OPEN_BRACKET datatype COMMA datatype CLOSE_BRACKET SEMICOLON .)
    CLOSE_BRACE     reduce using rule 96 (tupla -> OPEN_BRACKET datatype COMMA datatype CLOSE_BRACKET SEMICOLON .)


state 268

    (104) set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .

    COMMENTS        reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    LONGCOMMENT     reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    NAME            reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    PRINT           reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    RETURN          reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    FUNCTION        reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    CONST           reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    LET             reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    VAR             reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    OPEN_BRACKET    reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    NEW             reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    WHILE           reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    FOR             reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    OPEN_BRACE      reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    IF              reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    $end            reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    CLOSE_BRACE     reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    COLON           reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    CLOSE_BRACKET   reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 104 (set -> NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS .)


state 269

    (28) while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .

    COMMENTS        reduce using rule 28 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 28 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NAME            reduce using rule 28 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    PRINT           reduce using rule 28 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    RETURN          reduce using rule 28 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FUNCTION        reduce using rule 28 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CONST           reduce using rule 28 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LET             reduce using rule 28 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    VAR             reduce using rule 28 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 28 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NEW             reduce using rule 28 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    WHILE           reduce using rule 28 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FOR             reduce using rule 28 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 28 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    IF              reduce using rule 28 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    $end            reduce using rule 28 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 28 (while -> WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)


state 270

    (29) while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .

    COMMENTS        reduce using rule 29 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 29 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NAME            reduce using rule 29 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    PRINT           reduce using rule 29 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    RETURN          reduce using rule 29 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FUNCTION        reduce using rule 29 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CONST           reduce using rule 29 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LET             reduce using rule 29 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    VAR             reduce using rule 29 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 29 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NEW             reduce using rule 29 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    WHILE           reduce using rule 29 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FOR             reduce using rule 29 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 29 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    IF              reduce using rule 29 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    $end            reduce using rule 29 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 29 (while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)


state 271

    (39) for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations . CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    CLOSE_PARENTHESIS shift and go to state 275


state 272

    (35) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression . CLOSE_BRACE
    (36) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression . CLOSE_BRACE soloIf

    CLOSE_BRACE     shift and go to state 276


state 273

    (34) soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .

    ELSEIF          reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    ELSE            reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    COMMENTS        reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NAME            reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    PRINT           reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    RETURN          reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FUNCTION        reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CONST           reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LET             reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    VAR             reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NEW             reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    WHILE           reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FOR             reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    IF              reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    $end            reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 34 (soloIf -> IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)


state 274

    (127) function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .

    COMMENTS        reduce using rule 127 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 127 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NAME            reduce using rule 127 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    PRINT           reduce using rule 127 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    RETURN          reduce using rule 127 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FUNCTION        reduce using rule 127 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CONST           reduce using rule 127 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LET             reduce using rule 127 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    VAR             reduce using rule 127 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 127 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NEW             reduce using rule 127 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    WHILE           reduce using rule 127 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FOR             reduce using rule 127 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 127 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    IF              reduce using rule 127 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    $end            reduce using rule 127 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 127 (function -> FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)


state 275

    (39) for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS . OPEN_BRACE expression CLOSE_BRACE

    OPEN_BRACE      shift and go to state 277


state 276

    (35) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .
    (36) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE . soloIf
    (34) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

  ! shift/reduce conflict for IF resolved as shift
    ELSE            reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    COMMENTS        reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NAME            reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    PRINT           reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    RETURN          reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FUNCTION        reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CONST           reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LET             reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    VAR             reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NEW             reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    WHILE           reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FOR             reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    $end            reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    IF              shift and go to state 39

  ! IF              [ reduce using rule 35 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .) ]

    soloIf                         shift and go to state 278

state 277

    (39) for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE . expression CLOSE_BRACE
    (1) expression -> . semiExpression
    (2) expression -> . semiExpression expression
    (3) semiExpression -> . variable
    (4) semiExpression -> . dataStruct
    (5) semiExpression -> . controlStruct
    (6) semiExpression -> . methodsSet
    (7) semiExpression -> . mapFunctions
    (8) semiExpression -> . arrayFn
    (9) semiExpression -> . declaration
    (10) semiExpression -> . print
    (11) semiExpression -> . return
    (12) semiExpression -> . function
    (13) semiExpression -> . COMMENTS
    (14) semiExpression -> . LONGCOMMENT
    (15) semiExpression -> . asigOp
    (20) variable -> . type NAME IGUAL datatype SEMICOLON
    (21) variable -> . NAME IGUAL datatype SEMICOLON
    (25) dataStruct -> . array
    (26) dataStruct -> . set
    (27) dataStruct -> . map
    (22) controlStruct -> . while
    (23) controlStruct -> . for
    (24) controlStruct -> . if
    (106) methodsSet -> . NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (107) methodsSet -> . NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (108) methodsSet -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (97) mapFunctions -> . NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (98) mapFunctions -> . NAME POINT GET OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (99) mapFunctions -> . NAME POINT HAS OPEN_PARENTHESIS clave CLOSE_PARENTHESIS SEMICOLON
    (100) arrayFn -> . NAME POINT POP OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (101) arrayFn -> . NAME POINT PUSH OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (102) arrayFn -> . NAME POINT UNSHIFT OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON
    (119) declaration -> . NAME IGUAL element SEMICOLON
    (131) print -> . PRINT OPEN_PARENTHESIS datatype CLOSE_PARENTHESIS SEMICOLON
    (132) print -> . PRINT OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON
    (130) return -> . RETURN datatype SEMICOLON
    (126) function -> . FUNCTION NAME OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (127) function -> . FUNCTION NAME OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (70) asigOp -> . NAME operadorAsig number SEMICOLON
    (73) type -> . CONST
    (74) type -> . LET
    (75) type -> . VAR
    (82) array -> . OPEN_BRACKET items CLOSE_BRACKET
    (83) array -> . NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS
    (103) set -> . NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (104) set -> . NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS
    (105) set -> . NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS
    (84) map -> . iniciarMap
    (85) map -> . escribirMap
    (86) map -> . generarMap
    (28) while -> . WHILE OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (29) while -> . WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (39) for -> . FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE
    (30) if -> . soloIf
    (31) if -> . soloIf elseIf
    (32) if -> . soloIf elseIf else
    (33) if -> . soloIf else
    (87) iniciarMap -> . NEW MAP OPEN_PARENTHESIS CLOSE_PARENTHESIS
    (88) escribirMap -> . OPEN_BRACE claveValor CLOSE_BRACE
    (92) generarMap -> . OPEN_BRACE tuplas CLOSE_BRACE
    (34) soloIf -> . IF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE

    COMMENTS        shift and go to state 13
    LONGCOMMENT     shift and go to state 14
    NAME            shift and go to state 17
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    FUNCTION        shift and go to state 26
    CONST           shift and go to state 28
    LET             shift and go to state 29
    VAR             shift and go to state 30
    OPEN_BRACKET    shift and go to state 31
    NEW             shift and go to state 32
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    OPEN_BRACE      shift and go to state 27
    IF              shift and go to state 39

    expression                     shift and go to state 279
    semiExpression                 shift and go to state 2
    variable                       shift and go to state 3
    dataStruct                     shift and go to state 4
    controlStruct                  shift and go to state 5
    methodsSet                     shift and go to state 6
    mapFunctions                   shift and go to state 7
    arrayFn                        shift and go to state 8
    declaration                    shift and go to state 9
    print                          shift and go to state 10
    return                         shift and go to state 11
    function                       shift and go to state 12
    asigOp                         shift and go to state 15
    type                           shift and go to state 16
    array                          shift and go to state 18
    set                            shift and go to state 19
    map                            shift and go to state 20
    while                          shift and go to state 21
    for                            shift and go to state 22
    if                             shift and go to state 23
    iniciarMap                     shift and go to state 33
    escribirMap                    shift and go to state 34
    generarMap                     shift and go to state 35
    soloIf                         shift and go to state 38

state 278

    (36) elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .

    ELSE            reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    COMMENTS        reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    LONGCOMMENT     reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    NAME            reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    PRINT           reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    RETURN          reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    FUNCTION        reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    CONST           reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    LET             reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    VAR             reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    OPEN_BRACKET    reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    NEW             reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    WHILE           reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    FOR             reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    OPEN_BRACE      reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    IF              reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    $end            reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)
    CLOSE_BRACE     reduce using rule 36 (elseIf -> ELSEIF OPEN_PARENTHESIS controlArg CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE soloIf .)


state 279

    (39) for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression . CLOSE_BRACE

    CLOSE_BRACE     shift and go to state 280


state 280

    (39) for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .

    COMMENTS        reduce using rule 39 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LONGCOMMENT     reduce using rule 39 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NAME            reduce using rule 39 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    PRINT           reduce using rule 39 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    RETURN          reduce using rule 39 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FUNCTION        reduce using rule 39 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CONST           reduce using rule 39 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    LET             reduce using rule 39 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    VAR             reduce using rule 39 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACKET    reduce using rule 39 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    NEW             reduce using rule 39 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    WHILE           reduce using rule 39 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    FOR             reduce using rule 39 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    OPEN_BRACE      reduce using rule 39 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    IF              reduce using rule 39 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    $end            reduce using rule 39 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)
    CLOSE_BRACE     reduce using rule 39 (for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON expBoolean SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 124 resolved as shift
WARNING: shift/reduce conflict for CLOSE_BRACKET in state 124 resolved as shift
WARNING: shift/reduce conflict for AND in state 133 resolved as shift
WARNING: shift/reduce conflict for OR in state 133 resolved as shift
WARNING: shift/reduce conflict for AND in state 187 resolved as shift
WARNING: shift/reduce conflict for OR in state 187 resolved as shift
WARNING: shift/reduce conflict for IF in state 276 resolved as shift
WARNING: reduce/reduce conflict in state 53 resolved using rule (operations -> number)
WARNING: rejected rule (datatype -> number) in state 53
WARNING: reduce/reduce conflict in state 54 resolved using rule (operations -> NAME)
WARNING: rejected rule (datatype -> NAME) in state 54
WARNING: reduce/reduce conflict in state 71 resolved using rule (datatype -> number)
WARNING: rejected rule (item -> number) in state 71
WARNING: reduce/reduce conflict in state 71 resolved using rule (operations -> number)
WARNING: rejected rule (datatype -> number) in state 71
WARNING: reduce/reduce conflict in state 72 resolved using rule (datatype -> STRING)
WARNING: rejected rule (item -> STRING) in state 72
WARNING: reduce/reduce conflict in state 74 resolved using rule (datatype -> NAME)
WARNING: rejected rule (item -> NAME) in state 74
WARNING: reduce/reduce conflict in state 74 resolved using rule (operations -> NAME)
WARNING: rejected rule (datatype -> NAME) in state 74
WARNING: reduce/reduce conflict in state 93 resolved using rule (datatype -> NAME)
WARNING: rejected rule (element -> NAME) in state 93
WARNING: reduce/reduce conflict in state 93 resolved using rule (operations -> NAME)
WARNING: rejected rule (datatype -> NAME) in state 93
WARNING: reduce/reduce conflict in state 96 resolved using rule (datatype -> number)
WARNING: rejected rule (element -> number) in state 96
WARNING: reduce/reduce conflict in state 96 resolved using rule (operations -> number)
WARNING: rejected rule (datatype -> number) in state 96
WARNING: reduce/reduce conflict in state 97 resolved using rule (datatype -> STRING)
WARNING: rejected rule (element -> STRING) in state 97
WARNING: reduce/reduce conflict in state 125 resolved using rule (operations -> number)
WARNING: rejected rule (datatype -> number) in state 125
WARNING: reduce/reduce conflict in state 125 resolved using rule (operations -> number)
WARNING: rejected rule (item -> number) in state 125
WARNING: reduce/reduce conflict in state 126 resolved using rule (operations -> NAME)
WARNING: rejected rule (datatype -> NAME) in state 126
WARNING: reduce/reduce conflict in state 126 resolved using rule (operations -> NAME)
WARNING: rejected rule (item -> NAME) in state 126
WARNING: reduce/reduce conflict in state 127 resolved using rule (datatype -> STRING)
WARNING: rejected rule (item -> STRING) in state 127
WARNING: reduce/reduce conflict in state 240 resolved using rule (mapFunctions -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON)
WARNING: rejected rule (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON) in state 240
WARNING: Rule (datatype -> number) is never reduced
WARNING: Rule (datatype -> NAME) is never reduced
WARNING: Rule (item -> number) is never reduced
WARNING: Rule (item -> STRING) is never reduced
WARNING: Rule (item -> NAME) is never reduced
WARNING: Rule (methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON) is never reduced

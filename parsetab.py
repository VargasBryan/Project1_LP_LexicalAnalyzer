
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND ARRAY BACKSLASH BOOLEAN BREAK CASE CHAR CLASS CLEAR CLOSE_BRACE CLOSE_BRACKET CLOSE_PARENTHESIS COLON COMMA COMMENTS CONST DEFAULT DELETE DIFERENTE DIVIGUAL DIVISION DOUBLE_QUOTES ELSE FALSE FLOAT FOR FUNCTION IF IGUAL IGUALIGUAL INT LENGTH LET LINE_BREAK LONGCOMMENT MAP MASIGUAL MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MENOSIGUAL MODIGUAL MULTIPLICACION NAME NEW NOT NULL NUMBER OPEN_BRACE OPEN_BRACKET OPEN_PARENTHESIS OR POINT PORIGUAL POTIGUAL RESTA RETURN SEMICOLON SET SINGLE_QUOTE STATIC STRING SUMA SWITCH THEN TOSTRING TRUE TYPEOF UNDEFINED VAR WHILEexpression : variable\n    | variable expression\n    | dataStruct\n    | dataStruct expression\n    | controlStruct\n    | controlStruct expression\n    | methodsSetvariable : type NAME IGUAL datatype SEMICOLONcontrolStruct : while\n    | fordataStruct : array\n    | set while : WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE\n    | WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACEfor : FOR OPEN_PARENTHESIS inicialization SEMICOLON condition SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE inicialization : type NAME IGUAL NUMBER\n    | NAME IGUAL NUMBERcondition : NAME clause value operations : NUMBER operand NUMBER\n    | NAME SUMA SUMA\n    | NAME RESTA RESTA datatype : NUMBER\n    | STRING\n    | operations\n    | CHARoperand : SUMA \n    | RESTA \n    | MULTIPLICACION \n    | DIVISIONbool : TRUE\n    | FALSEtype : CONST\n    | LET\n    | VARclause :  IGUALIGUAL\n    | DIFERENTE\n    | MAYORQUE\n    | MAYORIGUALQUE\n    | MENORQUE\n    | MENORIGUALQUE value : NAME\n    | NUMBERarray : type NAME IGUAL OPEN_BRACKET items CLOSE_BRACKET SEMICOLON\n    | type NAME IGUAL NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS SEMICOLONset : type NAME IGUAL NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON\n    | type NAME IGUAL NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS SEMICOLON\n    | type NAME IGUAL NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON\n    | NAME IGUAL NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON\n    | NAME IGUAL NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS SEMICOLON\n    | NAME IGUAL NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLONmethodsSet : NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON\n    | NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON\n    | NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON\n    items : numeros\n    | cadenanumeros : NUMBER\n    | NUMBER COMMA numeroscadena : STRING \n    | STRING COMMA cadenaelement : STRING\n    | NUMBER\n    | NAME'
    
_lr_action_items = {'NAME':([0,2,3,4,6,8,9,10,11,12,13,14,23,24,25,35,45,46,51,56,75,76,77,88,98,99,100,101,102,103,104,105,107,116,119,120,127,131,133,135,137,139,141,142,],[7,7,7,7,20,-11,-12,-9,-10,-32,-33,-34,7,36,37,52,69,69,79,-8,69,7,7,69,37,123,-35,-36,-37,-38,-39,-40,-43,-48,-13,-14,-45,-50,-44,-47,7,-49,-46,-15,]),'CONST':([0,2,3,4,8,9,10,11,23,24,56,76,77,107,116,119,120,127,131,133,135,137,139,141,142,],[12,12,12,12,-11,-12,-9,-10,12,12,-8,12,12,-43,-48,-13,-14,-45,-50,-44,-47,12,-49,-46,-15,]),'LET':([0,2,3,4,8,9,10,11,23,24,56,76,77,107,116,119,120,127,131,133,135,137,139,141,142,],[13,13,13,13,-11,-12,-9,-10,13,13,-8,13,13,-43,-48,-13,-14,-45,-50,-44,-47,13,-49,-46,-15,]),'VAR':([0,2,3,4,8,9,10,11,23,24,56,76,77,107,116,119,120,127,131,133,135,137,139,141,142,],[14,14,14,14,-11,-12,-9,-10,14,14,-8,14,14,-43,-48,-13,-14,-45,-50,-44,-47,14,-49,-46,-15,]),'WHILE':([0,2,3,4,8,9,10,11,23,56,76,77,107,116,119,120,127,131,133,135,137,139,141,142,],[15,15,15,15,-11,-12,-9,-10,15,-8,15,15,-43,-48,-13,-14,-45,-50,-44,-47,15,-49,-46,-15,]),'FOR':([0,2,3,4,8,9,10,11,23,56,76,77,107,116,119,120,127,131,133,135,137,139,141,142,],[16,16,16,16,-11,-12,-9,-10,16,-8,16,16,-43,-48,-13,-14,-45,-50,-44,-47,16,-49,-46,-15,]),'$end':([1,2,3,4,5,8,9,10,11,17,18,19,56,92,107,114,115,116,119,120,127,131,133,135,139,141,142,],[0,-1,-3,-5,-7,-11,-12,-9,-10,-2,-4,-6,-8,-53,-43,-51,-52,-48,-13,-14,-45,-50,-44,-47,-49,-46,-15,]),'CLOSE_PARENTHESIS':([2,3,4,5,8,9,10,11,17,18,19,30,31,32,33,47,56,58,59,60,61,69,70,71,72,73,75,82,83,88,89,92,95,107,108,109,110,113,114,115,116,119,120,121,127,130,131,133,134,135,139,141,142,],[-1,-3,-5,-7,-11,-12,-9,-10,-2,-4,-6,49,50,-30,-31,74,-8,-54,-55,-56,-58,-62,90,-60,-61,91,93,-20,-21,111,-19,-53,118,-43,-57,-59,126,129,-51,-52,-48,-13,-14,132,-45,136,-50,-44,138,-47,-49,-46,-15,]),'CLOSE_BRACE':([2,3,4,5,8,9,10,11,17,18,19,56,92,96,97,107,114,115,116,119,120,127,131,133,135,139,140,141,142,],[-1,-3,-5,-7,-11,-12,-9,-10,-2,-4,-6,-8,-53,119,120,-43,-51,-52,-48,-13,-14,-45,-50,-44,-47,-49,142,-46,-15,]),'POINT':([7,],[21,]),'IGUAL':([7,20,36,52,],[22,25,53,80,]),'OPEN_PARENTHESIS':([15,16,26,27,28,48,62,63,],[23,24,45,46,47,75,87,88,]),'ADD':([21,],[26,]),'DELETE':([21,],[27,]),'CLEAR':([21,],[28,]),'NEW':([22,25,],[29,40,]),'TRUE':([23,],[32,]),'FALSE':([23,],[33,]),'OPEN_BRACKET':([25,75,88,],[39,94,112,]),'NUMBER':([25,39,45,46,53,64,65,66,67,68,75,80,85,87,88,94,98,99,100,101,102,103,104,105,112,],[41,60,72,72,81,89,-26,-27,-28,-29,72,106,60,60,72,60,122,125,-35,-36,-37,-38,-39,-40,60,]),'STRING':([25,39,45,46,75,86,87,88,94,112,],[42,61,71,71,71,61,61,71,61,61,]),'CHAR':([25,],[44,]),'SET':([29,40,],[48,63,]),'SEMICOLON':([34,38,41,42,43,44,74,78,81,82,83,84,89,90,91,93,106,111,118,123,124,125,126,129,136,138,],[51,56,-22,-23,-24,-25,92,98,-17,-20,-21,107,-19,114,115,116,-16,127,131,-41,-18,-42,133,135,139,141,]),'SUMA':([37,41,54,122,],[54,65,82,65,]),'RESTA':([37,41,55,122,],[55,66,83,66,]),'ARRAY':([40,],[62,]),'MULTIPLICACION':([41,122,],[67,67,]),'DIVISION':([41,122,],[68,68,]),'OPEN_BRACE':([49,50,132,],[76,77,137,]),'CLOSE_BRACKET':([57,58,59,60,61,108,109,117,128,],[84,-54,-55,-56,-58,-57,-59,130,134,]),'COMMA':([60,61,],[85,86,]),'IGUALIGUAL':([79,],[100,]),'DIFERENTE':([79,],[101,]),'MAYORQUE':([79,],[102,]),'MAYORIGUALQUE':([79,],[103,]),'MENORQUE':([79,],[104,]),'MENORIGUALQUE':([79,],[105,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,3,4,23,76,77,137,],[1,17,18,19,30,96,97,140,]),'variable':([0,2,3,4,23,76,77,137,],[2,2,2,2,2,2,2,2,]),'dataStruct':([0,2,3,4,23,76,77,137,],[3,3,3,3,3,3,3,3,]),'controlStruct':([0,2,3,4,23,76,77,137,],[4,4,4,4,4,4,4,4,]),'methodsSet':([0,2,3,4,23,76,77,137,],[5,5,5,5,5,5,5,5,]),'type':([0,2,3,4,23,24,76,77,137,],[6,6,6,6,6,35,6,6,6,]),'array':([0,2,3,4,23,76,77,137,],[8,8,8,8,8,8,8,8,]),'set':([0,2,3,4,23,76,77,137,],[9,9,9,9,9,9,9,9,]),'while':([0,2,3,4,23,76,77,137,],[10,10,10,10,10,10,10,10,]),'for':([0,2,3,4,23,76,77,137,],[11,11,11,11,11,11,11,11,]),'bool':([23,],[31,]),'inicialization':([24,],[34,]),'datatype':([25,],[38,]),'operations':([25,98,],[43,121,]),'items':([39,87,94,112,],[57,110,117,128,]),'numeros':([39,85,87,94,112,],[58,108,58,58,58,]),'cadena':([39,86,87,94,112,],[59,109,59,59,59,]),'operand':([41,122,],[64,64,]),'element':([45,46,75,88,],[70,73,95,113,]),'condition':([51,],[78,]),'clause':([79,],[99,]),'value':([99,],[124,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> variable','expression',1,'p_expression_expr','sintactical.py',9),
  ('expression -> variable expression','expression',2,'p_expression_expr','sintactical.py',10),
  ('expression -> dataStruct','expression',1,'p_expression_expr','sintactical.py',11),
  ('expression -> dataStruct expression','expression',2,'p_expression_expr','sintactical.py',12),
  ('expression -> controlStruct','expression',1,'p_expression_expr','sintactical.py',13),
  ('expression -> controlStruct expression','expression',2,'p_expression_expr','sintactical.py',14),
  ('expression -> methodsSet','expression',1,'p_expression_expr','sintactical.py',15),
  ('variable -> type NAME IGUAL datatype SEMICOLON','variable',5,'p_variable_expr','sintactical.py',18),
  ('controlStruct -> while','controlStruct',1,'p_controlStruct_expr','sintactical.py',21),
  ('controlStruct -> for','controlStruct',1,'p_controlStruct_expr','sintactical.py',22),
  ('dataStruct -> array','dataStruct',1,'p_dataStruct_expr','sintactical.py',25),
  ('dataStruct -> set','dataStruct',1,'p_dataStruct_expr','sintactical.py',26),
  ('while -> WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE','while',7,'p_while_expr','sintactical.py',29),
  ('while -> WHILE OPEN_PARENTHESIS bool CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE','while',7,'p_while_expr','sintactical.py',30),
  ('for -> FOR OPEN_PARENTHESIS inicialization SEMICOLON condition SEMICOLON operations CLOSE_PARENTHESIS OPEN_BRACE expression CLOSE_BRACE','for',11,'p_for_expr','sintactical.py',33),
  ('inicialization -> type NAME IGUAL NUMBER','inicialization',4,'p_inicialization','sintactical.py',36),
  ('inicialization -> NAME IGUAL NUMBER','inicialization',3,'p_inicialization','sintactical.py',37),
  ('condition -> NAME clause value','condition',3,'p_condition','sintactical.py',40),
  ('operations -> NUMBER operand NUMBER','operations',3,'p_operations','sintactical.py',43),
  ('operations -> NAME SUMA SUMA','operations',3,'p_operations','sintactical.py',44),
  ('operations -> NAME RESTA RESTA','operations',3,'p_operations','sintactical.py',45),
  ('datatype -> NUMBER','datatype',1,'p_datatype_expr','sintactical.py',48),
  ('datatype -> STRING','datatype',1,'p_datatype_expr','sintactical.py',49),
  ('datatype -> operations','datatype',1,'p_datatype_expr','sintactical.py',50),
  ('datatype -> CHAR','datatype',1,'p_datatype_expr','sintactical.py',51),
  ('operand -> SUMA','operand',1,'p_operand_expr','sintactical.py',54),
  ('operand -> RESTA','operand',1,'p_operand_expr','sintactical.py',55),
  ('operand -> MULTIPLICACION','operand',1,'p_operand_expr','sintactical.py',56),
  ('operand -> DIVISION','operand',1,'p_operand_expr','sintactical.py',57),
  ('bool -> TRUE','bool',1,'p_bool_expr','sintactical.py',60),
  ('bool -> FALSE','bool',1,'p_bool_expr','sintactical.py',61),
  ('type -> CONST','type',1,'p_type_expr','sintactical.py',64),
  ('type -> LET','type',1,'p_type_expr','sintactical.py',65),
  ('type -> VAR','type',1,'p_type_expr','sintactical.py',66),
  ('clause -> IGUALIGUAL','clause',1,'p_clause_expr','sintactical.py',69),
  ('clause -> DIFERENTE','clause',1,'p_clause_expr','sintactical.py',70),
  ('clause -> MAYORQUE','clause',1,'p_clause_expr','sintactical.py',71),
  ('clause -> MAYORIGUALQUE','clause',1,'p_clause_expr','sintactical.py',72),
  ('clause -> MENORQUE','clause',1,'p_clause_expr','sintactical.py',73),
  ('clause -> MENORIGUALQUE','clause',1,'p_clause_expr','sintactical.py',74),
  ('value -> NAME','value',1,'p_value_expr','sintactical.py',77),
  ('value -> NUMBER','value',1,'p_value_expr','sintactical.py',78),
  ('array -> type NAME IGUAL OPEN_BRACKET items CLOSE_BRACKET SEMICOLON','array',7,'p_array_expr','sintactical.py',81),
  ('array -> type NAME IGUAL NEW ARRAY OPEN_PARENTHESIS items CLOSE_PARENTHESIS SEMICOLON','array',9,'p_array_expr','sintactical.py',82),
  ('set -> type NAME IGUAL NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON','set',8,'p_set_expr','sintactical.py',85),
  ('set -> type NAME IGUAL NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS SEMICOLON','set',11,'p_set_expr','sintactical.py',86),
  ('set -> type NAME IGUAL NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON','set',9,'p_set_expr','sintactical.py',87),
  ('set -> NAME IGUAL NEW SET OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON','set',7,'p_set_expr','sintactical.py',88),
  ('set -> NAME IGUAL NEW SET OPEN_PARENTHESIS OPEN_BRACKET items CLOSE_BRACKET CLOSE_PARENTHESIS SEMICOLON','set',10,'p_set_expr','sintactical.py',89),
  ('set -> NAME IGUAL NEW SET OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON','set',8,'p_set_expr','sintactical.py',90),
  ('methodsSet -> NAME POINT ADD OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON','methodsSet',7,'p_methodsSet_expr','sintactical.py',93),
  ('methodsSet -> NAME POINT DELETE OPEN_PARENTHESIS element CLOSE_PARENTHESIS SEMICOLON','methodsSet',7,'p_methodsSet_expr','sintactical.py',94),
  ('methodsSet -> NAME POINT CLEAR OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMICOLON','methodsSet',6,'p_methodsSet_expr','sintactical.py',95),
  ('items -> numeros','items',1,'p_items_expr','sintactical.py',99),
  ('items -> cadena','items',1,'p_items_expr','sintactical.py',100),
  ('numeros -> NUMBER','numeros',1,'p_numeros_expr','sintactical.py',103),
  ('numeros -> NUMBER COMMA numeros','numeros',3,'p_numeros_expr','sintactical.py',104),
  ('cadena -> STRING','cadena',1,'p_cadena_expr','sintactical.py',107),
  ('cadena -> STRING COMMA cadena','cadena',3,'p_cadena_expr','sintactical.py',108),
  ('element -> STRING','element',1,'p_element_expr','sintactical.py',111),
  ('element -> NUMBER','element',1,'p_element_expr','sintactical.py',112),
  ('element -> NAME','element',1,'p_element_expr','sintactical.py',113),
]
